"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["96377"],{50214:function(e,n,s){s.r(n),s.d(n,{metadata:()=>t,default:()=>h,frontMatter:()=>i,contentTitle:()=>d,toc:()=>l,assets:()=>c});var t=JSON.parse('{"id":"release-notes/k8s/k8s-1_7_12","title":"Kubernetes Agent v1.7.12","description":"September 30, 2024","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/release-notes/k8s/k8s-1.7.12.mdx","sourceDirName":"release-notes/k8s","slug":"/release-notes/k8s/k8s-1_7_12","permalink":"/whatap-docs/en/release-notes/k8s/k8s-1_7_12","draft":false,"unlisted":false,"editUrl":"undefined/docs/release-notes/k8s/k8s-1.7.12.mdx","tags":[],"version":"current","frontMatter":{"id":"k8s-1_7_12","title":"Kubernetes Agent v1.7.12","toc_max_heading_level":2,"pagination_next":"release-notes/k8s/k8s-1_7_11","displayed_sidebar":"releaseSidebar","isTranslationMissing":false},"sidebar":"releaseSidebar","next":{"title":"Kubernetes Agent v1.7.11","permalink":"/whatap-docs/en/release-notes/k8s/k8s-1_7_11"}}'),o=s(74848),r=s(84429);let i={id:"k8s-1_7_12",title:"Kubernetes Agent v1.7.12",toc_max_heading_level:2,pagination_next:"release-notes/k8s/k8s-1_7_11",displayed_sidebar:"releaseSidebar",isTranslationMissing:!1},d,c={},l=[];function a(e){let n={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Status:s}=n;return s||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Status",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"September 30, 2024"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(s,{priority:"1",children:"New"})," Added the tag count ",(0,o.jsx)(n.code,{children:"kube_process"})," category."]}),"\n",(0,o.jsx)(n.p,{children:"The tag count has been added to monitor Kubernetes-related processes running on the node. This allows you to trace processes running on a specific node and collect performance metrics."}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["For more information about the related agent option (",(0,o.jsx)(n.code,{children:"collect_kube_node_process_metric_target_list"}),"), see ",(0,o.jsx)(n.a,{href:"../../kubernetes/set-agent/#collect_kube_node_process_metric_target_list",children:"the following"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["For more information about the process (",(0,o.jsx)(n.code,{children:"kube_process"}),") category, see ",(0,o.jsx)(n.a,{href:"../../kubernetes/metrics-kubernetes/#kube_process",children:"the following"}),"."]}),"\n"]}),"\n"]})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(s,{priority:"1",children:"New"})," Added the ",(0,o.jsx)(n.code,{children:"kube_client_tls_verify"})," option into the ",(0,o.jsx)(n.strong,{children:"whatap-control-plane-helper"})," container."]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["If the option value is set to ",(0,o.jsx)(n.code,{children:"false"}),", TLS authentication is not enforced and the authentication process can be skipped. For more information, see ",(0,o.jsx)(n.a,{href:"../../kubernetes/set-agent/#kube_client_tls_verify",children:"the following"}),"."]})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(s,{priority:"1",children:"Feature"})," Added the node status-specific count metrics to the tag count ",(0,o.jsx)(n.code,{children:"kube_stat"})," category."]}),"\n",(0,o.jsxs)(n.p,{children:["Count metric has been added based on the node status in the cluster. It displays the number of nodes aggregated based on the Conditions(type",":Ready",") field of the node."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"ready_node"}),": Number of nodes whose status of ",(0,o.jsx)(n.strong,{children:"Ready"})," is set to ",(0,o.jsx)(n.code,{children:"True"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"not_ready_node"}),": Number of nodes whose status of ",(0,o.jsx)(n.strong,{children:"Ready"})," is set to ",(0,o.jsx)(n.code,{children:"False"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"unknown_node"}),": Number of nodes whose status of ",(0,o.jsx)(n.strong,{children:"Ready"})," is set to ",(0,o.jsx)(n.code,{children:"Unknown"}),"."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"It is expressed in integer and monitors the node status in the cluster by aggregating the number of nodes for each status according to the node status."})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(s,{priority:"1",children:"Feature"})," Added the count metric for each Pod status (Phase) into the tag count ",(0,o.jsx)(n.code,{children:"kube_pod_stat"})," category."]}),"\n",(0,o.jsx)(n.p,{children:"Count metrics have been added based on the Pod status (Phase) in the cluster. This allows you to quickly determine the status (phase) of the Pods running in the cluster."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"running_pod"}),": Number of Pods running in the current cluster."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"succeeded_pod"}),": Number of Pods that have been completed normally."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"failed_pod"}),": Number of failed Pods."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"pending_pod"}),": Number of Pods that are not yet running."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"unknown_pod"}),": Number of Pods whose status is unknown."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsx)(n.p,{children:"It is expressed in integer and monitors the Pod status in the cluster by aggregating the number of nodes for each status according to the Pod status (Phase)."})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["Agent download: ",(0,o.jsx)(n.a,{href:"https://repo.whatap.io/docker/kube_mon_1.7.12.tar",children:"kube_mon_1.7.12.tar"})]})})]})}function h(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},84429:function(e,n,s){s.d(n,{R:()=>i,x:()=>d});var t=s(96540);let o={},r=t.createContext(o);function i(e){let n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);