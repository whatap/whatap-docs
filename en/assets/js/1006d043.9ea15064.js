"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["70666"],{1179:function(e,s,t){t.d(s,{Ay:()=>c,RM:()=>n});var d=t(74848),r=t(84429);let n=[{value:"agent_status_summary",id:"agent_status_summary",level:2},{value:"Fields",id:"agent_status_summary_filed",level:3}];function i(e){let s={code:"code",h2:"h2",h3:"h3",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components},{Xclude:t}=s;return t||function(e,s){throw Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Xclude",!0),(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(s.section,{className:"remark-sectionize-h2",children:[(0,d.jsx)(s.h2,{id:"agent_status_summary",children:"agent_status_summary"}),(0,d.jsx)(s.p,{children:"This category collects metrics related to agent status every 10 seconds."})]}),"\n",(0,d.jsxs)(s.section,{className:"remark-sectionize-h3",children:[(0,d.jsx)(s.h3,{id:"agent_status_summary_filed",children:"Fields"}),(0,d.jsx)(t,{product:"server,kubernetes",children:(0,d.jsx)("div",{className:"c4-20-10-10-60",children:(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Field"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Unit"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"inActTime"}),(0,d.jsx)(s.td,{children:"-"}),(0,d.jsx)(s.td,{children:"Millisecond(ms)"}),(0,d.jsx)(s.td,{children:"Amount of time the agent remains inactive"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"isActive"}),(0,d.jsx)(s.td,{children:"Boolean"}),(0,d.jsx)(s.td,{children:"-"}),(0,d.jsx)(s.td,{children:"Whether the agent is active or not"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"isRestart"}),(0,d.jsx)(s.td,{children:"Boolean"}),(0,d.jsx)(s.td,{children:"-"}),(0,d.jsxs)(s.td,{children:["Whether the agent was restarted recently (",(0,d.jsx)(s.code,{children:"true"})," / ",(0,d.jsx)(s.code,{children:"false"}),")"]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"lastActTime"}),(0,d.jsx)(s.td,{children:"-"}),(0,d.jsx)(s.td,{children:"Millisecond(ms)"}),(0,d.jsxs)(s.td,{children:["Last time when the agent was activated (",(0,d.jsx)(s.code,{children:"0"}),": Disabled)"]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"oid"}),(0,d.jsx)(s.td,{children:"-"}),(0,d.jsx)(s.td,{children:"-"}),(0,d.jsx)(s.td,{children:"Unique IDs for each agent in the project"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"startTime"}),(0,d.jsx)(s.td,{children:"-"}),(0,d.jsx)(s.td,{children:"Millisecond(ms)"}),(0,d.jsx)(s.td,{children:"Timestamp when the agent was started."})]})]})]})})})]})]})}function c(e={}){let{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(i,{...e})}):i(e)}},56141:function(e,s,t){t.d(s,{Ay:()=>c,RM:()=>n});var d=t(74848),r=t(84429);let n=[{value:"XOS-related metrics",id:"xosmetrics",level:2}];function i(e){let s={code:"code",h2:"h2",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,d.jsxs)(s.section,{className:"remark-sectionize-h2",children:[(0,d.jsx)(s.h2,{id:"xosmetrics",children:"XOS-related metrics"}),(0,d.jsx)(s.p,{children:"The following describes the metrics collected from the XOS agent."}),(0,d.jsx)("div",{class:"metric",children:(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Metric"}),(0,d.jsx)(s.th,{children:"Unit"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"cpu(xos)"})}),(0,d.jsx)(s.td,{children:"pct"}),(0,d.jsxs)(s.td,{children:["CPU utilization",(0,d.jsx)("br",{})," ",(0,d.jsx)(s.code,{children:"cpu_user"})," + ",(0,d.jsx)(s.code,{children:"cpu_sys"})," + ",(0,d.jsx)(s.code,{children:"cpu_iowait"})]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"cpu_idle(xos)"})}),(0,d.jsx)(s.td,{children:"pct"}),(0,d.jsx)(s.td,{children:"CPU idle time"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"cpu_iowait(xos)"})}),(0,d.jsx)(s.td,{children:"pct"}),(0,d.jsx)(s.td,{children:"CPU's I/O waiting time"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"cpu_sys(xos)"})}),(0,d.jsx)(s.td,{children:"pct"}),(0,d.jsx)(s.td,{children:"CPU's kernel code execution time"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"cpu_user(xos)"})}),(0,d.jsx)(s.td,{children:"pct"}),(0,d.jsx)(s.td,{children:"CPU's user code execution time"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"disk_read_bytes(xos)"})}),(0,d.jsx)(s.td,{children:"byte"}),(0,d.jsx)(s.td,{children:"Number of data blocks read from disk"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"disk_reads(xos)"})}),(0,d.jsx)(s.td,{children:"block"}),(0,d.jsx)(s.td,{children:"Number of buffers read from disk"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"disk_write_bytes(xos)"})}),(0,d.jsx)(s.td,{children:"byte"}),(0,d.jsx)(s.td,{children:"Number of pages written to disk"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"disk_writes(xos)"})}),(0,d.jsx)(s.td,{children:"block"}),(0,d.jsx)(s.td,{children:"Number of buffers written to disk"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"mem(xos)"})}),(0,d.jsx)(s.td,{children:"pct"}),(0,d.jsx)(s.td,{children:"Memory utilization"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"mem_available(xos)"})}),(0,d.jsx)(s.td,{children:"MB"}),(0,d.jsx)(s.td,{children:"Shared memory size"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"mem_buffcache(xos)"})}),(0,d.jsx)(s.td,{children:"MB"}),(0,d.jsx)(s.td,{children:"Amount of memory used by the buff/cache"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"mem_free(xos)"})}),(0,d.jsx)(s.td,{children:"MB"}),(0,d.jsx)(s.td,{children:"Memory not in use"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"mem_swapfree(xos)"})}),(0,d.jsx)(s.td,{children:"MB"}),(0,d.jsxs)(s.td,{children:["Unused swap space size",(0,d.jsx)("br",{})," Because swap uses disk space, it may cause performance degradation."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"mem_swaptotal(xos)"})}),(0,d.jsx)(s.td,{children:"MB"}),(0,d.jsxs)(s.td,{children:["Total swap size",(0,d.jsx)("br",{})," It is used when physical memory is insufficient."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"mem_total(xos)"})}),(0,d.jsx)(s.td,{children:"MB"}),(0,d.jsx)(s.td,{children:"Total memory size"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"mem_used(xos)"})}),(0,d.jsx)(s.td,{children:"MB"}),(0,d.jsx)(s.td,{children:"Memory size in use"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"net_recv_bytes(xos)"})}),(0,d.jsx)(s.td,{children:"byte"}),(0,d.jsx)(s.td,{children:"Amount of data transmitted over the network"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"net_recv_packets(xos)"})}),(0,d.jsx)(s.td,{children:"count"}),(0,d.jsx)(s.td,{children:"Number of data packets transmitted over the network"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"net_send_bytes(xos)"})}),(0,d.jsx)(s.td,{children:"byte"}),(0,d.jsx)(s.td,{children:"Amount of data transmitted over the network"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"net_send_packets(xos)"})}),(0,d.jsx)(s.td,{children:"count"}),(0,d.jsx)(s.td,{children:"Number of data packets transmitted over the network"})]})]})]})})]})}function c(e={}){let{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(i,{...e})}):i(e)}},32802:function(e,s,t){t.r(s),t.d(s,{metadata:()=>d,default:()=>j,frontMatter:()=>l,contentTitle:()=>h,toc:()=>x,assets:()=>o});var d=JSON.parse('{"id":"postgresql/metrics-data-list","title":"PostgreSQL metrics","description":"It guides you to the PostgreSQL database metrics.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/postgresql/metrics-data-list.mdx","sourceDirName":"postgresql","slug":"/postgresql/metrics-data-list","permalink":"/whatap-docs/en/postgresql/metrics-data-list","draft":false,"unlisted":false,"editUrl":"undefined/docs/postgresql/metrics-data-list.mdx","tags":[],"version":"current","frontMatter":{"id":"metrics-data-list","title":"PostgreSQL metrics","description":"It guides you to the PostgreSQL database metrics.","keywords":["PostgreSQL","Metrics","DATABASE","Database Monitoring"],"isTranslationMissing":false},"sidebar":"postgreSidebar","previous":{"title":"Metrics","permalink":"/whatap-docs/en/postgresql/metrics-intro"},"next":{"title":"Metrics Chart","permalink":"/whatap-docs/en/postgresql/metrics-chart-v2"}}'),r=t(74848),n=t(84429),i=t(1179),c=t(56141);let l={id:"metrics-data-list",title:"PostgreSQL metrics",description:"It guides you to the PostgreSQL database metrics.",keywords:["PostgreSQL","Metrics","DATABASE","Database Monitoring"],isTranslationMissing:!1},h,o={},x=[...i.RM,{value:"db_postgresql_counter",id:"db_postgresql_counter",level:2},{value:"Tags",id:"db_postgresql_counter-tags",level:3},{value:"Field",id:"db_postgresql_counter-filed",level:3},...c.RM];function a(e){let s={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"Database metrics are a comprehensive collection of database workloads and resource usages. The WhaTap monitoring service continuously collects metrics to identify bottlenecks in the database and provides data to help identify the root causes of performance issues."}),"\n",(0,r.jsxs)(s.p,{children:["For more information about other metrics, see ",(0,r.jsx)(s.a,{href:"https://www.postgresql.org/docs/",children:"the link"}),"."]}),"\n","\n",(0,r.jsxs)("div",{className:"metricslist",children:[(0,r.jsx)(i.Ay,{}),(0,r.jsx)(s.section,{className:"remark-sectionize-h2",children:(0,r.jsx)(s.h2,{id:"db_postgresql_counter",children:"db_postgresql_counter"})}),(0,r.jsxs)(s.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(s.h3,{id:"db_postgresql_counter-tags",children:"Tags"}),(0,r.jsxs)(s.p,{children:["The following lists the tags that are collected in the ",(0,r.jsx)(s.code,{children:"db_postgresql_counter"})," category."]}),(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Tag name"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Remarks"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"agentIp"})}),(0,r.jsx)(s.td,{children:"IP address per agent."}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"dbIsMulti"})}),(0,r.jsx)(s.td,{children:"Whether to support the multitenant or not."}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"dbName"})}),(0,r.jsx)(s.td,{children:"Database name."}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"dbType"})}),(0,r.jsx)(s.td,{children:"Database type."}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"dbVersion"})}),(0,r.jsx)(s.td,{children:"Version of the database in use."}),(0,r.jsx)(s.td,{children:"-"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"oname"})}),(0,r.jsx)(s.td,{children:"Agent name"}),(0,r.jsx)(s.td,{children:"Unique value"})]})]})]})]}),(0,r.jsxs)(s.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(s.h3,{id:"db_postgresql_counter-filed",children:"Field"}),(0,r.jsxs)(s.p,{children:["The following lists the fields that are collected in the ",(0,r.jsx)(s.code,{children:"db_postgresql_counter"})," category."]}),(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Metrics"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Category"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"active_sessions"})}),(0,r.jsx)(s.td,{children:"Number of active sessions."}),(0,r.jsx)(s.td,{children:"Connection"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"CPUUtilization"})}),(0,r.jsx)(s.td,{children:"Percentage of CPU resources being used by the database instances."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"FreeStorageSpace"})}),(0,r.jsx)(s.td,{children:"Available storage space for the instance."}),(0,r.jsx)(s.td,{children:"I/O"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"FreeableMemory"})}),(0,r.jsx)(s.td,{children:"Amount of memory that can be used immediately by the system."}),(0,r.jsx)(s.td,{children:"I/O"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"NetworkReceiveThroughput"})}),(0,r.jsx)(s.td,{children:"Speed of network data received by the instance"}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"NetworkTransmitThroughput"})}),(0,r.jsx)(s.td,{children:"Speed of network data transmitted by the instance"}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"blk_read_time"})}),(0,r.jsx)(s.td,{children:"Time taken to read a data block in the backend (in milliseconds)."}),(0,r.jsx)(s.td,{children:"I/O"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"blk_write_time"})}),(0,r.jsx)(s.td,{children:"Time taken to write a data block in the backend (milliseconds)."}),(0,r.jsx)(s.td,{children:"I/O"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"blks_hit"})}),(0,r.jsx)(s.td,{children:"Total count where a disk block was found in the buffer cache and did not require a read."}),(0,r.jsx)(s.td,{children:"I/O"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"blks_hit_ratio"})}),(0,r.jsxs)(s.td,{children:["Percentage of queries retrieved from the cache out of the total queries.",(0,r.jsx)("br",{}),"Calculation method: sum(",(0,r.jsx)(s.code,{children:"blks_hit"}),")/sum(",(0,r.jsx)(s.code,{children:"blks_hit"})," + ",(0,r.jsx)(s.code,{children:"blks_read"}),") * 100"]}),(0,r.jsx)(s.td,{children:"I/O"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"blks_read"})}),(0,r.jsx)(s.td,{children:"Number of data blocks read directly from disk."}),(0,r.jsx)(s.td,{children:"I/O"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"buffers_checkpoint"})}),(0,r.jsx)(s.td,{children:"Number of buffers flushed during checkpoint."}),(0,r.jsx)(s.td,{children:"Info"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"check_point"})}),(0,r.jsx)(s.td,{children:"Number of cases a database checkpoint occurs."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"checkpoint_write_time"})}),(0,r.jsx)(s.td,{children:"Time (milliseconds) taken to write data during checkpoint."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"checkpoints_timed"})}),(0,r.jsxs)(s.td,{children:["Number of checkpoints occurred according to the ",(0,r.jsx)(s.code,{children:"checkpoint_timeout"})," setting."]}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"commit_count"})}),(0,r.jsx)(s.td,{children:"Number of transaction commits."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"confl_bufferpin"})}),(0,r.jsx)(s.td,{children:"Number of session conflicts due to buffer pin contention."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"confl_deadlock"})}),(0,r.jsx)(s.td,{children:"Number of deadlock conflicts."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"confl_lock"})}),(0,r.jsx)(s.td,{children:"Number of session conflicts due to lock contention."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"confl_snapshot"})}),(0,r.jsx)(s.td,{children:"Number of session conflicts due to snapshot contention."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"confl_tablespace"})}),(0,r.jsx)(s.td,{children:"Number of session conflicts due to tablespace contention."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"conflicts"})}),(0,r.jsx)(s.td,{children:"Number of queries that were aborted because they conflicted with database recovery operations."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"connect_error"})}),(0,r.jsx)(s.td,{children:"Number of database connection failures."}),(0,r.jsx)(s.td,{children:"Connection"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"deadlock_count"})}),(0,r.jsx)(s.td,{children:"Total number of deadlocks occurred."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"dml_count"})}),(0,r.jsx)(s.td,{children:"Total number of DML (Data Manipulation Language) operations."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"fatal_count"})}),(0,r.jsx)(s.td,{children:"Number of fatal errors."}),(0,r.jsx)(s.td,{children:"Info"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"idle_trx"})}),(0,r.jsx)(s.td,{children:"Number of idle transactions."}),(0,r.jsx)(s.td,{children:"Connection"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"idle_trx_time"})}),(0,r.jsx)(s.td,{children:"Cumulative time of idle transactions."}),(0,r.jsx)(s.td,{children:"Connection"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"idx_scan"})}),(0,r.jsx)(s.td,{children:"With this method, table records are accessed using the keys stored in index leaf blocks. This metric has the values queried every minute."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"index_hit_ratio"})}),(0,r.jsx)(s.td,{children:"Percentage of index queries retrieved from the cache."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"lock_wait_sessions"})}),(0,r.jsx)(s.td,{children:"Number of pending sessions."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"long_running_sessions"})}),(0,r.jsx)(s.td,{children:"Number of long running sessions."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"max_connections"})}),(0,r.jsxs)(s.td,{children:["Maximum number of connections allowed. Value set in ",(0,r.jsx)(s.code,{children:"pg_settings"}),". If this value is insufficient, the 'FATAL ERROR: too many clients already.' Errors may occur."]}),(0,r.jsx)(s.td,{children:"Info"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"max_runtime"})}),(0,r.jsx)(s.td,{children:"Execution time of the longest running query."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"node_state"})}),(0,r.jsxs)(s.td,{children:["This database consists of replication relationships. ",(0,r.jsx)(s.code,{children:"1"}),": Master, ",(0,r.jsx)(s.code,{children:"2"}),": Slave."]}),(0,r.jsx)(s.td,{children:"Info"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"numbackends"})}),(0,r.jsx)(s.td,{children:"Number of backend processes connected to the database."}),(0,r.jsx)(s.td,{children:"Info"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"oldest_cur_xid"})}),(0,r.jsx)(s.td,{children:"The oldest active transaction ID."}),(0,r.jsx)(s.td,{children:"Info"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"per_to_emergency_autovac"})}),(0,r.jsx)(s.td,{children:"Number of emergency automatic vacuum occurrences."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"per_to_wraparound"})}),(0,r.jsx)(s.td,{children:"Number of vacuum operations to prevent transaction ID wraparound."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"replication_count"})}),(0,r.jsx)(s.td,{children:"Number of active replication databases (Slave)."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"replication_delay"})}),(0,r.jsx)(s.td,{children:"Replication delay time. Delay time reflected in the replication database for the replication structure, this is a metric measured in the slave DB."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"replication_lag"})}),(0,r.jsx)(s.td,{children:"Extent to which replicated data lags behind the original data."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"rollback_count"})}),(0,r.jsx)(s.td,{children:"Number of transaction rollbacks."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"seq_scan"})}),(0,r.jsx)(s.td,{children:"Method to read records by performing a full scan on the table. Select this when there is no index or when the range to be read is wide even if an index exists. This metric has the values queried every minute."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"table_hit_ratio"})}),(0,r.jsx)(s.td,{children:"Percentage of queries retrieved from the cache."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"temp_bytes"})}),(0,r.jsx)(s.td,{children:"Total amount of bytes written to temporary files by queries in the database."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"temp_files"})}),(0,r.jsx)(s.td,{children:"Number of temporary files created by queries in the database."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"total_runtime"})}),(0,r.jsx)(s.td,{children:"Total query execution time."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"total_sessions"})}),(0,r.jsx)(s.td,{children:"Total number of connected sessions."}),(0,r.jsx)(s.td,{children:"Connection"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tps"})}),(0,r.jsx)(s.td,{children:"Number of processed transactions per second."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tup_deleted"})}),(0,r.jsx)(s.td,{children:"Number of tuples deleted by queries in the database."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tup_fetched"})}),(0,r.jsx)(s.td,{children:"Number of tuples retrieved from the database by queries."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tup_inserted"})}),(0,r.jsx)(s.td,{children:"Number of tuples inserted by queries in the database."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tup_returned"})}),(0,r.jsx)(s.td,{children:"Number of tuples returned by queries in the database."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"tup_updated"})}),(0,r.jsx)(s.td,{children:"Number of tuples updated by queries in the database."}),(0,r.jsx)(s.td,{children:"Troughput"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"uptime"})}),(0,r.jsx)(s.td,{children:"Database uptime."}),(0,r.jsx)(s.td,{children:"Info"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"vacuum_running_count"})}),(0,r.jsx)(s.td,{children:"Number of vacuum operations running."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"wait_sessions"})}),(0,r.jsx)(s.td,{children:"Number of waiting sessions."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"wal_count"})}),(0,r.jsx)(s.td,{children:"Number of Write-Ahead Logging (WAL) records written. Spikes in the WAL file counts are usually caused by the large amount of changes in a short period or vacuum-like maintenance operations that generate temporary tables and objects. They should slowly return to normal levels. This usually results in lots of disk I/O and CPU activity, slowing the application query's execution until things get back to normal. This metric has the values queried every minute."}),(0,r.jsx)(s.td,{children:"Performance"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"warning_count"})}),(0,r.jsx)(s.td,{children:"Number of warnings occurred."}),(0,r.jsx)(s.td,{children:"Info"})]})]})]}),(0,r.jsx)(c.Ay,{})]})]})]})}function j(e={}){let{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},84429:function(e,s,t){t.d(s,{R:()=>i,x:()=>c});var d=t(96540);let r={},n=d.createContext(r);function i(e){let s=d.useContext(n);return d.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),d.createElement(n.Provider,{value:s},e.children)}}}]);