"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["36316"],{28541:function(e,t,n){n.r(t),n.d(t,{metadata:()=>r,default:()=>p,frontMatter:()=>o,contentTitle:()=>a,toc:()=>d,assets:()=>c});var r=JSON.parse('{"id":"telegraf/introduction","title":"What is Telegraf?","description":"It describes the Telegraf details.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/telegraf/introduction.mdx","sourceDirName":"telegraf","slug":"/telegraf/introduction","permalink":"/whatap-docs/en/telegraf/introduction","draft":false,"unlisted":false,"editUrl":"undefined/docs/telegraf/introduction.mdx","tags":[],"version":"current","frontMatter":{"id":"introduction","title":"What is Telegraf?","description":"It describes the Telegraf details.","keywords":["Telegraf"],"isTranslationMissing":false},"sidebar":"pluginSidebar","previous":{"title":"Usage examples","permalink":"/whatap-docs/en/focus/focus-usage"},"next":{"title":"Installing the plug-in","permalink":"/whatap-docs/en/telegraf/telegraf-plugin-install"}}'),s=n(74848),i=n(84429),l=n(94955);let o={id:"introduction",title:"What is Telegraf?",description:"It describes the Telegraf details.",keywords:["Telegraf"],isTranslationMissing:!1},a,c={},d=[];function u(e){let t={admonition:"admonition",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{ImgLang:n}=t;return n||function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ImgLang",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Telegraf is a plug-in driven server agent for collecting and sending metrics and events from databases, systems, and IoT sensors. Telegraf has been written in Go, compiles into a single binary file without any external dependency, and requires the minimum memory space."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"** Collection and transmission of all types of data**"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Database"})}),"\n",(0,s.jsx)(t.p,{children:"It collects and sends metrics by connecting data sources such as MongoDB, MySQL, and Redis."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"System"})}),"\n",(0,s.jsx)(t.p,{children:"It collects metrics from modern cloud platforms, containers, and orchestrator stacks."}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"IoT Sensor"})}),"\n",(0,s.jsx)(t.p,{children:"It collects important stateful data (pressure levels, temperature levels, etc.) from IoT sensors and devices."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Telegraf Plug-in"})}),"\n",(0,s.jsx)(t.p,{children:"Telegraf is a plug-in driven agent that collects, processes, aggregates, and creates metrics. It supports four categories of plug-ins: input, output, aggregator, and processor."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"You can forward the metrics collected by Telegraf to the WhaTap collection server by using the Telegraf's WhaTap output plug-in and installing the WhaTap Telegraf agent."}),"\n",(0,s.jsx)(n,{img:"telegraf-sync-structure.png",desc:"Telegraf - WhaTap integration structure"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Telegraf plug-ins and agents must have been installed and configured directly on the service."})}),"\n",(0,s.jsx)(t.p,{children:"The guide is provided on how to install plug-ins or agents and the use cases are provides as follows."}),"\n",(0,s.jsx)(l.A,{})]})}function p(e={}){let{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},94955:function(e,t,n){n.d(t,{A:()=>c}),n(96540);var r=n(39836),s=n(13951),i=n(48290),l=n(74848);function o({className:e}){let t=(0,s.a4)();return(0,l.jsx)(c,{items:t,className:e})}function a({item:e}){return(0,l.jsx)("article",{className:(0,r.A)("docCardListItem_W1sv","col col--6"),children:(0,l.jsx)(i.A,{item:e})})}function c(e){let{items:t,className:n}=e;if(!t)return(0,l.jsx)(o,{...e});let i=(0,s.d1)(t);return(0,l.jsx)("section",{className:(0,r.A)("row",n),children:i.map((e,t)=>(0,l.jsx)(a,{item:e},t))})}},73390:function(e,t,n){n.d(t,{W:()=>a});var r=n(96540),s=n(14597);let i=["zero","one","two","few","many","other"];function l(e){return i.filter(t=>e.includes(t))}let o={locale:"en",pluralForms:l(["one","other"]),select:e=>1===e?"one":"other"};function a(){let e=function(){let{i18n:{currentLocale:e}}=(0,s.A)();return(0,r.useMemo)(()=>{try{let t;return t=new Intl.PluralRules(e),{locale:e,pluralForms:l(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".
Docusaurus will fallback to the default (English) implementation.
Error: ${t.message}
`),o}},[e])}();return{selectMessage:(t,n)=>(function(e,t,n){let r=e.split("|");if(1===r.length)return r[0];r.length>n.pluralForms.length&&console.error(`For locale=${n.locale}, a maximum of ${n.pluralForms.length} plural forms are expected (${n.pluralForms.join(",")}), but the message contains ${r.length}: ${e}`);let s=n.select(t);return r[Math.min(n.pluralForms.indexOf(s),r.length-1)]})(n,t,e)}}},48290:function(e,t,n){n.d(t,{A:()=>g}),n(96540);var r=n(39836),s=n(3401),i=n(13951),l=n(73390),o=n(43317),a=n(9414),c=n(74848);function d({href:e,children:t}){return(0,c.jsx)(s.A,{href:e,className:(0,r.A)("card padding--lg","cardContainer_S8oU"),children:t})}function u({href:e,icon:t,title:n,description:s}){return(0,c.jsxs)(d,{href:e,children:[(0,c.jsx)(a.A,{as:"h2",className:(0,r.A)("text--truncate","cardTitle_HoSo"),title:n,children:n}),s&&(0,c.jsx)("p",{className:(0,r.A)("text--truncate","cardDescription_c27F"),title:s,children:s})]})}function p({item:e}){let t=(0,i.Nr)(e),n=function(){let{selectMessage:e}=(0,l.W)();return t=>e(t,(0,o.T)({message:"1 item|{count} items",id:"theme.docs.DocCard.categoryDescription.plurals",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t}))}();return t?(0,c.jsx)(u,{href:t,title:e.label,description:e.description??n(e.items.length)}):null}function f({item:e}){let t=(0,i.cC)(e.docId??void 0);return(0,c.jsx)(u,{href:e.href,title:e.label,description:e.description??t?.description})}function g({item:e}){switch(e.type){case"link":return(0,c.jsx)(f,{item:e});case"category":return(0,c.jsx)(p,{item:e});default:throw Error(`unknown item type ${JSON.stringify(e)}`)}}},84429:function(e,t,n){n.d(t,{R:()=>l,x:()=>o});var r=n(96540);let s={},i=r.createContext(s);function l(e){let t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);