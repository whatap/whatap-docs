"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["35088"],{64910:function(e,n,s){s.r(n),s.d(n,{metadata:()=>i,default:()=>h,frontMatter:()=>l,contentTitle:()=>c,toc:()=>o,assets:()=>a});var i=JSON.parse('{"id":"kubernetes/openagent","title":"OpenAgent Configuration","description":"Guide to configuring OpenAgent.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/kubernetes/openagent.mdx","sourceDirName":"kubernetes","slug":"/kubernetes/openagent","permalink":"/whatap-docs/en/kubernetes/openagent","draft":false,"unlisted":false,"editUrl":"undefined/docs/kubernetes/openagent.mdx","tags":[],"version":"current","frontMatter":{"id":"openagent","title":"OpenAgent Configuration","description":"Guide to configuring OpenAgent.","keywords":["Kubernetes","Kubernetes Monitoring","WhaTap Operator","OpenAgent"],"toc_max_heading_level":3,"isTranslationMissing":false},"sidebar":"kubeSidebar","previous":{"title":"APM Auto-Installation Configuration","permalink":"/whatap-docs/en/kubernetes/install-auto-application-agent"},"next":{"title":"WhaTap CR configuration options","permalink":"/whatap-docs/en/kubernetes/whatap-cr-configuration-options"}}'),t=s(74848),r=s(84429);let l={id:"openagent",title:"OpenAgent Configuration",description:"Guide to configuring OpenAgent.",keywords:["Kubernetes","Kubernetes Monitoring","WhaTap Operator","OpenAgent"],toc_max_heading_level:3,isTranslationMissing:!1},c,a={},o=[{value:"Configuration",id:"configuration",level:2},{value:"PodMetrics and ServiceMetrics Configuration Fields",id:"podmetrics-and-servicemetrics-configuration-fields",level:3},{value:"StaticEndpoints Configuration Fields",id:"staticendpoints-configuration-fields",level:3},{value:"addNodeLabel Feature",id:"addnodelabel-feature",level:3},{value:"TLS Configuration",id:"tls-configuration",level:2},{value:"How HTTP vs HTTPS is Determined",id:"how-http-vs-https-is-determined",level:3},{value:"TLS Configuration Options",id:"tls-configuration-options",level:3},{value:"insecureSkipVerify",id:"insecureskipverify",level:3},{value:"Configuration Example",id:"configuration-example",level:3},{value:"Metric Relabeling Configuration",id:"metricRelabelConfigs",level:2},{value:"Relabeling Configuration Fields",id:"relabeling-configuration-fields",level:3},{value:"Supported Actions",id:"supported-actions",level:3},{value:"Special Labels",id:"special-labels",level:3},{value:"Example",id:"example",level:3},{value:"Example 1: Keep only a specific metric",id:"example-1-keep-only-a-specific-metric",level:4},{value:"Example 2: Filter Metrics Using Regex",id:"example-2-filter-metrics-using-regex",level:4},{value:"Example 3: Rename Label",id:"example-3-rename-label",level:4},{value:"Example 4: Combine Multiple Source Labels",id:"example-4-combine-multiple-source-labels",level:4},{value:"Example 5: Add a Static Label",id:"example-5-add-a-static-label",level:4},{value:"Example: Combined Behavior",id:"example-combined-behavior",level:4},{value:"Kubernetes Metrics Collection Example",id:"kubernetes-metrics-collection-example",level:2}];function d(e){let n={admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["OpenAgent scrapes metrics from Prometheus endpoints and forwards them to the WhaTap server.",(0,t.jsx)(n.br,{}),"\n","It is a Go-based agent that collects Prometheus-style metrics and sends them to WhaTap."]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),(0,t.jsxs)(n.p,{children:["After installing the WhatapOperator, you can configure open metrics targets using the ",(0,t.jsx)(n.code,{children:"WhatapAgent"})," CR (Custom Resource)."]}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"PodMonitor"}),": Dynamic discovery using Pod label selectors (similar to Prometheus Operator's PodMonitor)"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"ServiceMonitor"}),": Dynamic discovery using Service label selectors (similar to Prometheus Operator's ServiceMonitor)"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"StaticEndpoints"}),": Directly specifying fixed IP addresses and ports (similar to Prometheus ",(0,t.jsx)(n.code,{children:"static_configs"}),")"]}),"\n"]}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'features:\n  openAgent:\n    enabled: true\n    targets:\n      # 1. PodMonitor: Dynamic discovery using Pod label selectors\n      - targetName: my-app-pod-metrics\n        type: PodMonitor\n        namespaceSelector:\n          matchNames:\n            - "production"\n        selector:\n          matchLabels:\n            app: my-app\n        endpoints:\n        - port: "web-metrics"  # Port name defined in the Pod spec or the actual port number\n          path: "/metrics"     # Default is /metrics; override if needed\n          interval: "15s"      # Default comes from global settings; override if needed\n          scheme: "http"\n          timeout: "10s"\n          metricRelabelConfigs:  # Metric relabeling after scraping\n            - source_labels: [__name__]\n              regex: "http_requests_total"\n              action: keep\n            - source_labels: [method]\n              target_label: http_method\n              replacement: "${1}"\n              action: replace\n\n      # 2. ServiceMonitor: Dynamic discovery using Service label selectors\n      - targetName: my-service-metrics\n        type: ServiceMonitor\n        namespaceSelector:\n          matchNames:\n            - "default"\n        selector:\n          matchLabels:\n            service: my-backend-service\n        endpoints:\n        - port: "http-metrics"  # Port name defined in the Service spec or the actual target port number\n          path: "/actuator/prometheus"\n          interval: "30s"\n          metricRelabelConfigs:\n            - source_labels: [__name__]\n              regex: "jvm_.*"\n              action: keep\n            - source_labels: [area]\n              target_label: memory_area\n              replacement: "${1}"\n              action: replace\n\n      # 3. StaticEndpoints: Specify fixed IP addresses and ports directly\n      - targetName: my-external-db-metrics\n        type: StaticEndpoints\n        # enabled: true  # Whether the target is active (default: true, optional)\n        endpoints:\n          - address: "192.168.1.100:9100"\n            scheme: "http"\n            path: "/metrics"\n            interval: "60s"\n            metricRelabelConfigs:\n              - source_labels: [__name__]\n                regex: "node_(cpu|memory).*"\n                action: keep\n              - source_labels: [instance]\n                target_label: server\n                replacement: "${1}"\n                action: replace\n'})})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(n.h3,{id:"podmetrics-and-servicemetrics-configuration-fields",children:"PodMetrics and ServiceMetrics Configuration Fields"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"targetName"}),": Name of the target (used for logging and identification)"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"type"}),": Type of target (",(0,t.jsx)(n.code,{children:"PodMonitor"})," or ",(0,t.jsx)(n.code,{children:"ServiceMonitor"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"namespaceSelector"}),": Specifies which namespaces to scrape"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"matchNames"}),": Select namespaces by name"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"matchLabels"}),": Select namespaces by label"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"matchExpressions"}),": Use expressions to select namespaces"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"selector"}),": Selects which Pods or Services to scrape"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"matchLabels"}),": Select by label"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"matchExpressions"}),": Select using expressions"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"endpoints"}),": Defines endpoints to scrape"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"port"}),": Port name or number to scrape"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"path"}),": Metrics path (default: ",(0,t.jsx)(n.code,{children:"globalPath"}),", override if needed)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"interval"}),": Scrape interval (default: ",(0,t.jsx)(n.code,{children:"globalInterval"}),", override if needed)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scheme"}),": Protocol used (",(0,t.jsx)(n.code,{children:"http"})," or ",(0,t.jsx)(n.code,{children:"https"}),", default: ",(0,t.jsx)(n.code,{children:"http"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"timeout"}),": Scrape timeout duration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"honorLabels"}),": Whether to prioritize labels exposed by the target"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"metricRelabelConfigs"}),": Post-scrape relabeling (similar to Prometheus ",(0,t.jsx)(n.code,{children:"metric_relabel_configs"}),")"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(n.h3,{id:"staticendpoints-configuration-fields",children:"StaticEndpoints Configuration Fields"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"targetName"}),": Name of the target (used for logging and identification)"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"type"}),": Target type (",(0,t.jsx)(n.code,{children:"StaticEndpoints"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"endpoints"}),": Defines static endpoints to scrape"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"address"}),": Target address to scrape (format: ",(0,t.jsx)(n.code,{children:"IP:PORT"})," or ",(0,t.jsx)(n.code,{children:"HOSTNAME:PORT"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"path"}),": Metrics path (default: ",(0,t.jsx)(n.code,{children:"/metrics"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"scheme"}),": Protocol to use (",(0,t.jsx)(n.code,{children:"http"})," or ",(0,t.jsx)(n.code,{children:"https"}),", default: ",(0,t.jsx)(n.code,{children:"http"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"interval"}),": Scrape interval (default: ",(0,t.jsx)(n.code,{children:"60s"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tlsConfig"}),": TLS settings"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"metricRelabelConfigs"}),": Post-scrape metric relabeling"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(n.h3,{id:"addnodelabel-feature",children:"addNodeLabel Feature"}),(0,t.jsxs)(n.p,{children:["If the target object is scheduled on a node, you can use the ",(0,t.jsx)(n.code,{children:"addNodeLabel"})," option to add the name of the scheduled node as a label in the metrics."]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Where to configure"}),": Can be set at the target level or endpoint level"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Default"}),": ",(0,t.jsx)(n.code,{children:"false"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Behavior"}),": If set to ",(0,t.jsx)(n.code,{children:"true"}),", a ",(0,t.jsx)(n.code,{children:"node"})," label is added to all metrics, with the name of the node where the object is running"]}),"\n"]}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:"title='Usage Example'",children:'# Target-level addNodeLabel setting\n- targetName: node-exporter\n  type: PodMonitor\n  namespaceSelector:\n    matchNames:\n      - "monitoring"\n  selector:\n    matchLabels:\n      app: node-exporter\n  endpoints:\n    - port: "metrics"\n      path: "/metrics"\n      interval: "30s"\n      addNodeLabel: true  # Add node label at this endpoint\n      metricRelabelConfigs:\n        # Example: Relabel using the node label\n        - source_labels: [node]\n          target_label: kubernetes_node\n          action: replace\n\n# Endpoint-level addNodeLabel setting\n- targetName: dcgm-exporter\n  type: PodMonitor\n  namespaceSelector:\n    matchNames:\n      - "kube-system"\n  selector:\n    matchLabels:\n      app: dcgm-exporter\n  endpoints:\n  - port: "metrics"\n    path: "/metrics"\n    interval: "30s"\n    addNodeLabel: true  # Add node label only for this endpoint\n    metricRelabelConfigs:\n      - source_labels: [node]\n        target_label: gpu_node\n        action: replace\n'})})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,t.jsx)(n.h2,{id:"tls-configuration",children:"TLS Configuration"}),(0,t.jsxs)(n.p,{children:["OpenAgent supports TLS (Transport Layer Security) when connecting to HTTPS endpoints.",(0,t.jsx)(n.br,{}),"\n","The following are available options related to TLS settings."]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(n.h3,{id:"how-http-vs-https-is-determined",children:"How HTTP vs HTTPS is Determined"}),(0,t.jsx)(n.p,{children:"OpenAgent determines whether to use HTTP or HTTPS based on the following rules:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"PodMonitor and ServiceMonitor targets"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["If the port name is ",(0,t.jsx)(n.code,{children:'"https"'}),", HTTPS is used by default."]}),"\n",(0,t.jsx)(n.li,{children:"In all other cases, HTTP is used by default."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"StaticEndpoints targets"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"If TLS settings are defined, HTTPS is used by default."}),"\n",(0,t.jsx)(n.li,{children:"Otherwise, HTTP is used."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"All target types"})}),"\n",(0,t.jsx)(n.h3,{id:"tls-configuration-options",children:"TLS Configuration Options"}),"\n"]}),"\n"]}),(0,t.jsxs)(n.p,{children:["TLS settings can be configured in the ",(0,t.jsx)(n.code,{children:"tlsConfig"})," section."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'endpoints:\n  - port: "https"\n    path: "/metrics"\n    scheme: "https"  # Explicitly use HTTPS\n    tlsConfig:\n      insecureSkipVerify: true  # Skip certificate verification\n'})})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(n.h3,{id:"insecureskipverify",children:"insecureSkipVerify"}),(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"insecureSkipVerify"})," option allows skipping server certificate verification.",(0,t.jsx)(n.br,{}),"\n","This option is useful in the following cases:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"When connecting to a server with a self-signed certificate"}),"\n",(0,t.jsx)(n.li,{children:"When certificate verification is not required in development or testing environments"}),"\n",(0,t.jsx)(n.li,{children:"When connecting to trusted servers within an internal network"}),"\n"]}),(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Caution"})}),(0,t.jsxs)(n.p,{children:["For production environments, it is recommended to set ",(0,t.jsx)(n.code,{children:"insecureSkipVerify: false"})," for security reasons.",(0,t.jsx)(n.br,{}),"\n","If you are using a self-signed certificate, it is safer to add it to a trusted Certificate Authority (CA) instead."]})]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(n.h3,{id:"configuration-example",children:"Configuration Example"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:"title='TLS Configuration Example with ServiceMonitor'",children:'- targetName: kube-apiserver\n  type: ServiceMonitor\n  namespaceSelector:\n    matchNames:\n      - "default"\n  selector:\n    matchLabels:\n      component: apiserver\n      provider: kubernetes\n  endpoints:\n    - port: "https"  # HTTPS is used by default because the port name is "https"\n      path: "/metrics"\n      interval: "30s"\n      scheme: "https"  # Explicitly specify HTTPS (optional)\n      tlsConfig:\n        insecureSkipVerify: true  # Skip certificate verification\n      metricRelabelConfigs:\n        - source_labels: [__name__]\n          regex: "apiserver_request_total"\n          action: keep\n        - source_labels: [verb]\n          target_label: http_verb\n          replacement: "${1}"\n          action: replace\n'})})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,t.jsx)(n.h2,{id:"metricRelabelConfigs",children:"Metric Relabeling Configuration"}),(0,t.jsxs)(n.p,{children:["OpenAgent supports metric relabeling functionality similar to Prometheus\u2019s ",(0,t.jsx)(n.code,{children:"metric_relabel_configs"}),".",(0,t.jsx)(n.br,{}),"\n","This feature allows you to filter or modify metrics after they are scraped."]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(n.h3,{id:"relabeling-configuration-fields",children:"Relabeling Configuration Fields"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"source_labels"}),": List of source labels (array)"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"separator"}),": Separator used to join source label values (default: ",(0,t.jsx)(n.code,{children:";"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"target_label"}),": The label to which the result is written"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"regex"}),": Regular expression applied to the joined source label values"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"replacement"}),": Replacement value (can reference regex capture groups, e.g., ",(0,t.jsx)(n.code,{children:"${1}"}),")"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"action"}),": Action to perform (",(0,t.jsx)(n.code,{children:"keep"}),", ",(0,t.jsx)(n.code,{children:"drop"}),", or ",(0,t.jsx)(n.code,{children:"replace"}),")"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(n.h3,{id:"supported-actions",children:"Supported Actions"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"keep"}),": Keep only metrics that match the regex"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"drop"}),": Drop metrics that match the regex"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"replace"}),": Replace the value of the target label with the replacement"]}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(n.h3,{id:"special-labels",children:"Special Labels"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.strong,{children:"name"})}),": A special label that refers to the metric name"]}),"\n"]})]}),"\n",(0,t.jsx)(n.section,{className:"remark-sectionize-h3",children:(0,t.jsx)(n.h3,{id:"example",children:"Example"})}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,t.jsx)(n.h4,{id:"example-1-keep-only-a-specific-metric",children:"Example 1: Keep only a specific metric"}),(0,t.jsxs)(n.p,{children:["This configuration keeps only the ",(0,t.jsx)(n.code,{children:"http_requests_total"})," metric and drops all others."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - source_labels: [__name__]\n    regex: "http_requests_total"\n    action: keep\n'})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Behavior"})}),"\n",(0,t.jsx)(n.p,{children:"Suppose the following metrics were originally scraped:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'http_requests_total{method="GET", status="200"} 100\nhttp_errors_total{method="GET", status="500"} 5\nnode_cpu_seconds_total{cpu="0", mode="idle"} 1000\n'})}),"\n",(0,t.jsxs)(n.p,{children:["After applying the above ",(0,t.jsx)(n.code,{children:"metricRelabelConfigs"}),", only the ",(0,t.jsx)(n.code,{children:"http_requests_total"})," metric will be kept. All other metrics will be dropped:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'http_requests_total{method="GET", status="200"} 100\n'})}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,t.jsx)(n.h4,{id:"example-2-filter-metrics-using-regex",children:"Example 2: Filter Metrics Using Regex"}),(0,t.jsxs)(n.p,{children:["This configuration keeps only metrics whose names start with ",(0,t.jsx)(n.code,{children:"node_cpu"})," or ",(0,t.jsx)(n.code,{children:"node_memory"}),"."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - source_labels: [__name__]\n    regex: "node_(cpu|memory).*"\n    action: keep\n'})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Behavior"})}),"\n",(0,t.jsx)(n.p,{children:"Suppose the following metrics were originally scraped:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'node_cpu_seconds_total{cpu="0", mode="idle"} 1000\nnode_memory_MemTotal_bytes{} 16777216\nnode_disk_io_time_seconds_total{device="sda"} 100\nhttp_requests_total{method="GET", status="200"} 100\n'})}),"\n",(0,t.jsxs)(n.p,{children:["After applying the ",(0,t.jsx)(n.code,{children:"metricRelabelConfigs"}),", only the metrics that start with ",(0,t.jsx)(n.code,{children:"node_cpu"})," or ",(0,t.jsx)(n.code,{children:"node_memory"})," will be kept.",(0,t.jsx)(n.br,{}),"\n","Using regular expressions allows you to filter multiple metric patterns at once."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'node_cpu_seconds_total{cpu="0", mode="idle"} 1000\nnode_memory_MemTotal_bytes{} 16777216\n'})}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,t.jsx)(n.h4,{id:"example-3-rename-label",children:"Example 3: Rename Label"}),(0,t.jsxs)(n.p,{children:["This configuration copies the value of the ",(0,t.jsx)(n.code,{children:"method"})," label into a new label called ",(0,t.jsx)(n.code,{children:"http_method"}),"."]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - source_labels: [method]\n    target_label: http_method\n    replacement: "${1}"\n    action: replace\n'})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Behavior"})}),"\n",(0,t.jsx)(n.p,{children:"Suppose the following metrics were originally scraped:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200"} 100\nhttp_requests_total{method="POST", path="/api/users", status="201"} 50\n'})}),"\n",(0,t.jsxs)(n.p,{children:["After applying the above ",(0,t.jsx)(n.code,{children:"metricRelabelConfigs"}),", each metric will include a new label ",(0,t.jsx)(n.code,{children:"http_method"})," that duplicates the value of the existing ",(0,t.jsx)(n.code,{children:"method"})," label.",(0,t.jsx)(n.br,{}),"\n","The original label remains unchanged, and the new label is added.",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"${1}"})," refers to the value of the source label."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200", http_method="GET"} 100\nhttp_requests_total{method="POST", path="/api/users", status="201", http_method="POST"} 50\n'})}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,t.jsx)(n.h4,{id:"example-4-combine-multiple-source-labels",children:"Example 4: Combine Multiple Source Labels"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - source_labels: [__name__, status]\n    regex: "http_requests_total;(200|500)"\n    action: keep\n'})}),(0,t.jsxs)(n.p,{children:["This configuration keeps only the ",(0,t.jsx)(n.code,{children:"http_requests_total"})," metrics where the ",(0,t.jsx)(n.code,{children:"status"})," label is either ",(0,t.jsx)(n.code,{children:"200"})," or ",(0,t.jsx)(n.code,{children:"500"}),"."]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Behavior"})}),"\n",(0,t.jsx)(n.p,{children:"Suppose the following metrics were originally scraped:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200"} 100\nhttp_requests_total{method="POST", path="/api/users", status="201"} 50\nhttp_requests_total{method="GET", path="/api/error", status="500"} 10\nhttp_requests_total{method="GET", path="/api/error", status="404"} 5\n'})}),"\n",(0,t.jsxs)(n.p,{children:["After applying the ",(0,t.jsx)(n.code,{children:"metricRelabelConfigs"}),", only the ",(0,t.jsx)(n.code,{children:"http_requests_total"})," metrics with a ",(0,t.jsx)(n.code,{children:"status"})," label of ",(0,t.jsx)(n.code,{children:"200"})," or ",(0,t.jsx)(n.code,{children:"500"})," will be retained.",(0,t.jsx)(n.br,{}),"\n","When combining multiple source labels, they are joined using the default separator ",(0,t.jsx)(n.code,{children:";"}),", which can be changed using the ",(0,t.jsx)(n.code,{children:"separator"})," field."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200"} 100\nhttp_requests_total{method="GET", path="/api/error", status="500"} 10\n'})}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,t.jsx)(n.h4,{id:"example-5-add-a-static-label",children:"Example 5: Add a Static Label"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - target_label: metric_src\n    replacement: "whatap-open-agent"\n    action: replace\n'})}),(0,t.jsxs)(n.p,{children:["This configuration adds a static label ",(0,t.jsx)(n.code,{children:'metric_src="whatap-open-agent"'})," to all metrics.",(0,t.jsx)(n.br,{}),"\n","If no ",(0,t.jsx)(n.code,{children:"source_labels"})," are specified, the ",(0,t.jsx)(n.code,{children:"replacement"})," value is used directly as the label value.",(0,t.jsx)(n.br,{}),"\n","This method is useful for adding static labels such as environment, region, or application name to all metrics."]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Behavior"})}),"\n",(0,t.jsx)(n.p,{children:"Suppose the following metrics were originally scraped:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200"} 100\nnode_cpu_seconds_total{cpu="0", mode="idle"} 1000\n'})}),"\n",(0,t.jsxs)(n.p,{children:["After applying the ",(0,t.jsx)(n.code,{children:"metricRelabelConfigs"}),", all metrics will include the label ",(0,t.jsx)(n.code,{children:'metric_src="whatap-open-agent"'}),".",(0,t.jsx)(n.br,{}),"\n","This is useful for marking the origin of the metric or tagging it with information such as environment (",(0,t.jsx)(n.code,{children:"production"}),", ",(0,t.jsx)(n.code,{children:"staging"}),"), region (",(0,t.jsx)(n.code,{children:"us-east"}),", ",(0,t.jsx)(n.code,{children:"eu-west"}),"), or application name."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200", metric_src="whatap-open-agent"} 100\nnode_cpu_seconds_total{cpu="0", mode="idle", metric_src="whatap-open-agent"} 1000\n'})}),"\n"]}),"\n"]})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,t.jsx)(n.h4,{id:"example-combined-behavior",children:"Example: Combined Behavior"}),(0,t.jsx)(n.p,{children:"Suppose the following metrics were originally scraped:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'apiserver_request_total{code="200", resource="pods", verb="GET"} 100\nsome_other_metric{label="value"} 50\n'})}),(0,t.jsxs)(n.p,{children:["After applying the above ",(0,t.jsx)(n.code,{children:"metricRelabelConfigs"}),":"]}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["First rule (",(0,t.jsx)(n.code,{children:"keep apiserver_request_total"}),") is applied:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"apiserver_request_total"})," metric is retained."]}),"\n",(0,t.jsxs)(n.li,{children:["The ",(0,t.jsx)(n.code,{children:"some_other_metric"})," is dropped."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Second rule (",(0,t.jsx)(n.code,{children:"replace verb -> http_verb"}),") is applied:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Since the retained ",(0,t.jsx)(n.code,{children:"apiserver_request_total"})," metric contains the ",(0,t.jsx)(n.code,{children:"verb"})," label, its value (",(0,t.jsx)(n.code,{children:"GET"}),") is copied into a new label named ",(0,t.jsx)(n.code,{children:"http_verb"}),"."]}),"\n"]}),"\n"]}),"\n"]}),(0,t.jsx)(n.p,{children:"As a result, the final metric collected will look like this:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'apiserver_request_total{code="200", resource="pods", verb="GET", http_verb="GET"} 100\n'})})]}),"\n",(0,t.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,t.jsx)(n.h2,{id:"kubernetes-metrics-collection-example",children:"Kubernetes Metrics Collection Example"}),(0,t.jsx)(n.p,{children:"The following is an example of collecting metrics from the Kubernetes API server:"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["This configuration selects a Service in the ",(0,t.jsx)(n.code,{children:"kube-system"})," namespace that has the labels ",(0,t.jsx)(n.code,{children:"component=apiserver"})," and ",(0,t.jsx)(n.code,{children:"provider=kubernetes"}),", and scrapes metrics from its endpoint."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"metricRelabelConfigs"})," are used to:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["collect only the ",(0,t.jsx)(n.code,{children:"apiserver_request_total"})," metric,"]}),"\n",(0,t.jsxs)(n.li,{children:["transform the ",(0,t.jsx)(n.code,{children:"verb"})," label into a new ",(0,t.jsx)(n.code,{children:"http_verb"})," label,"]}),"\n",(0,t.jsxs)(n.li,{children:["and add a static label ",(0,t.jsx)(n.code,{children:'metric_src="whatap-open-agent"'})," to all metrics."]}),"\n"]}),"\n"]}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:"title='Kubernetes Metrics Collection Example'",children:'# scrape_config.yaml\nfeatures:\n  openAgent:\n    enabled: true\n    targets:\n      - targetName: kube-apiserver\n        type: ServiceMonitor\n        namespaceSelector:\n          matchNames:\n            - "kube-system"\n        selector:\n          matchLabels:\n            component: apiserver\n            provider: kubernetes\n        endpoints:\n          - port: "https"\n            path: "/metrics"\n            interval: "30s"\n            metricRelabelConfigs:\n              - source_labels: [__name__]\n                regex: "apiserver_request_total"\n                action: keep\n              - source_labels: [verb]\n                target_label: http_verb\n                replacement: "${1}"\n                action: replace\n              # Add Static Labels\n              - target_label: metric_src\n                replacement: "whatap-open-agent"\n                action: replace\n'})})]})]})}function h(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},84429:function(e,n,s){s.d(n,{R:()=>l,x:()=>c});var i=s(96540);let t={},r=i.createContext(t);function l(e){let n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);