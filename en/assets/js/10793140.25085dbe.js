"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["23333"],{49996:function(e,n,s){s.r(n),s.d(n,{metadata:()=>t,default:()=>h,frontMatter:()=>o,contentTitle:()=>a,toc:()=>c,assets:()=>l});var t=JSON.parse('{"id":"best-practice-guides/about-openmetrics-explorer","title":"OpenMetrics Explorer","description":"OpenMetrics Explorer guide.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/best-practice-guides/about-openmetrics-explorer.mdx","sourceDirName":"best-practice-guides","slug":"/best-practice-guides/about-openmetrics-explorer","permalink":"/whatap-docs/en/best-practice-guides/about-openmetrics-explorer","draft":false,"unlisted":false,"editUrl":"undefined/docs/best-practice-guides/about-openmetrics-explorer.mdx","tags":[],"version":"current","frontMatter":{"id":"about-openmetrics-explorer","title":"OpenMetrics Explorer","description":"OpenMetrics Explorer guide.","toc_max_heading_level":3,"keywords":["OpenMetrics Explorer"],"isTranslationMissing":false},"sidebar":"learningSidebar","previous":{"title":"Learning","permalink":"/whatap-docs/en/learning-guides"},"next":{"title":"Dashboard analysis","permalink":"/whatap-docs/en/best-practice-guides/about-dashboard"}}'),r=s(74848),i=s(84429);let o={id:"about-openmetrics-explorer",title:"OpenMetrics Explorer",description:"OpenMetrics Explorer guide.",toc_max_heading_level:3,keywords:["OpenMetrics Explorer"],isTranslationMissing:!1},a,l={},c=[{value:"Key features",id:"key-features",level:4},{value:"Screen layout",id:"screen-layout",level:4},{value:"Why do we need PromQL?",id:"why-do-we-need-promql",level:4},{value:"PromQL User Guide",id:"promql-user-guide",level:2},{value:"Query Execution Types",id:"query-execution-types",level:3},{value:"Data Types",id:"data-types",level:3},{value:"Basic Usage",id:"basic-usage",level:3},{value:"1. Metric Selection (Instant Vector Selectors)",id:"1-metric-selection-instant-vector-selectors",level:4},{value:"2. Label Match Operators",id:"2-label-match-operators",level:4},{value:"3. Range Vector Selectors",id:"3-range-vector-selectors",level:4},{value:"4. Offset Modifier",id:"4-offset-modifier",level:4},{value:"Practical Examples",id:"practical-examples",level:3},{value:"Aggregation Functions",id:"aggregation-functions",level:3},{value:"sum()",id:"sum",level:4},{value:"avg()",id:"avg",level:4},{value:"count()",id:"count",level:4},{value:"max() / min()",id:"max--min",level:4},{value:"topk() / bottomk()",id:"topk--bottomk",level:4},{value:"Time Series Functions",id:"time-series-functions",level:3},{value:"rate()",id:"rate",level:4},{value:"increase()",id:"increase",level:4},{value:"irate()",id:"irate",level:4},{value:"Time Range Functions",id:"time-range-functions",level:3},{value:"avg_over_time()",id:"avg_over_time",level:4},{value:"max_over_time() / min_over_time()",id:"max_over_time--min_over_time",level:4},{value:"sum_over_time()",id:"sum_over_time",level:4},{value:"Important Rule: Rate then Sum",id:"important-rule-rate-then-sum",level:3},{value:"Practical Examples",id:"practical-examples-1",level:3},{value:"Math Operators",id:"math-operators",level:3},{value:"Arithmetic Operations",id:"arithmetic-operations",level:4},{value:"Comparison Operations",id:"comparison-operations",level:4},{value:"Practical Tips",id:"practical-tips",level:3},{value:"Other Functions",id:"other-functions",level:3},{value:"abs()",id:"abs",level:4},{value:"round()",id:"round",level:4},{value:"clamp_max() / clamp_min()",id:"clamp_max--clamp_min",level:4},{value:"Notes",id:"notes",level:3},{value:"Matching Empty Label Values",id:"matching-empty-label-values",level:4},{value:"Required Selectors",id:"required-selectors",level:4},{value:"Performance Considerations",id:"performance-considerations",level:4},{value:"Staleness (Outdated Data)",id:"staleness-outdated-data",level:4},{value:"Regular Expressions",id:"regular-expressions",level:3},{value:"Comments",id:"comments",level:3}];function d(e){let n={a:"a",admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Cmdname:s}=n;return s||function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Cmdname",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(s,{sid:"openmetrics_explorer",className:"uitext"})," is a metric data query and visualization tool provided by WhaTap.\nYou can query collected metrics with PromQL and visualize the results as a chart (Graph) and a table (Table)."]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"key-features",children:"Key features"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Metric query with PromQL"}),"\n",(0,r.jsx)(n.li,{children:"Data visualization in Graph or Table view"}),"\n",(0,r.jsx)(n.li,{children:"When you select a time range, the time is automatically inserted into PromQL"}),"\n",(0,r.jsx)(n.li,{children:"Real-time metric monitoring"}),"\n"]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"screen-layout",children:"Screen layout"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Top: time range picker, query input"}),"\n",(0,r.jsx)(n.li,{children:"Middle: Graph, Table, and Stacked Bar view switch buttons"}),"\n",(0,r.jsx)(n.li,{children:"Bottom: query results display (graph or table)"}),"\n"]}),(0,r.jsx)(n.hr,{})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"why-do-we-need-promql",children:"Why do we need PromQL?"}),(0,r.jsx)(n.p,{children:"OpenMetrics collects time series indicators for diverse systems and applications based on the Prometheus metric format. Prometheus is an open source monitoring tool that stores time based numeric data such as CPU usage, memory usage, HTTP request count, and error rate as metric indicators."}),(0,r.jsx)(n.p,{children:"Most of these indicators are collected every few seconds. They keep changing over time and take the form of time series data."}),(0,r.jsx)(n.p,{children:"Simple collection is not enough to answer questions like whether the service is healthy now, whether the error rate became higher than usual, or which API became slow."}),(0,r.jsxs)(n.p,{children:["This is why ",(0,r.jsx)(s,{sid:"openmetrics_explorer",className:"uitext"})," needs a query language to analyze collected metrics. That role is performed by ",(0,r.jsx)("strong",{children:"PromQL (Prometheus Query Language)"}),"."]}),(0,r.jsx)(n.p,{children:"With PromQL you can run the following analysis:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Real-time monitoring"}),": check current system status immediately (current CPU usage, active user count)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Trend analysis"}),": identify change patterns over time (increase rate of requests per second during the last hour)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Comparison analysis"}),": compare indicators across servers or services (error rate by server, response time by region)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Aggregation and calculation"}),": perform complex math and statistics (overall error rate, average response time, top 10 slow APIs)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Alert condition setup"}),": receive automatic alerts when thresholds are exceeded (error rate at least 5 percent, memory usage at least 90 percent)"]}),"\n"]}),(0,r.jsx)(n.hr,{})]}),"\n",(0,r.jsx)(n.section,{className:"remark-sectionize-h2",children:(0,r.jsx)(n.h2,{id:"promql-user-guide",children:"PromQL User Guide"})}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"query-execution-types",children:"Query Execution Types"}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Query"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Instant Query"})}),(0,r.jsx)(n.td,{children:"Retrieves data at a specific point in time. Used in the Table tab."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Range Query"})}),(0,r.jsx)(n.td,{children:"Retrieves data at regular intervals between a start time and an end time."})]})]})]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"data-types",children:"Data Types"}),(0,r.jsx)(n.p,{children:"PromQL expressions evaluate to four types."}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Instant Vector"})}),(0,r.jsx)(n.td,{children:"A set of time series that each contain a single sample, all with the same timestamp"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Range Vector"})}),(0,r.jsx)(n.td,{children:"A set of time series that each contain data points over a time range"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Scalar"})}),(0,r.jsx)(n.td,{children:"A single numeric value"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"String"})}),(0,r.jsx)(n.td,{children:"A single string value"})]})]})]})]}),"\n",(0,r.jsx)(n.section,{className:"remark-sectionize-h3",children:(0,r.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"})}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"1-metric-selection-instant-vector-selectors",children:"1. Metric Selection (Instant Vector Selectors)"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Basic Metric Query"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"nginx_http_response_count_total\n"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Label Filtering"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'nginx_http_response_count_total{status="200"}\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Multiple Label Conditions"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'nginx_http_response_count_total{method="GET", status="200"}\n'})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"2-label-match-operators",children:"2. Label Match Operators"}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Operator"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"="}),(0,r.jsx)(n.td,{children:"Label value matches exactly"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"!="}),(0,r.jsx)(n.td,{children:"Label value does not match"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"=~"}),(0,r.jsx)(n.td,{children:"Label value matches a regular expression"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"!~"}),(0,r.jsx)(n.td,{children:"Label value does not match a regular expression"})]})]})]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Regular Expression Examples"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Query only staging, testing, and development environments\nnginx_http_response_count_total{environment=~"staging|testing|development"}\n\n# All methods except GET\nnginx_http_response_count_total{method!="GET"}\n\n# Query replicas starting with "rep"\nnginx_http_response_count_total{replica=~"rep.*"}\n'})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"3-range-vector-selectors",children:"3. Range Vector Selectors"}),(0,r.jsx)(n.p,{children:"Selects data from a specific time window going back from the current moment."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Data from the last 5 minutes\nnginx_http_response_count_total[5m]\n\n# Data from the last 1 hour\nnginx_http_response_count_total{status="200"}[1h]\n'})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"4-offset-modifier",children:"4. Offset Modifier"}),(0,r.jsx)(n.p,{children:"Retrieves data from a specific past point in time."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Value 5 minutes ago\nnginx_http_response_count_total offset 5m\n\n# 5-minute rate from 1 week ago\nrate(nginx_http_response_count_total[5m] offset 1w)\n\n# Future comparison (negative offset)\nrate(nginx_http_response_count_total[5m] offset -1w)\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"practical-examples",children:"Practical Examples"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1: Requests by Status Code"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'nginx_http_response_count_total{instance="http://192.168.100.122:4040/metrics"}\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2: Specific Status Codes"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Only 200 responses\nnginx_http_response_count_total{status="200"}\n\n# Only 4xx errors (regex)\nnginx_http_response_count_total{status=~"4.."}\n\n# Only 5xx errors\nnginx_http_response_count_total{status=~"5.."}\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 3: Method and Status Code Combination"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# GET requests with 200 responses\nnginx_http_response_count_total{method="GET", status="200"}\n\n# 404 responses among POST, PUT, DELETE requests\nnginx_http_response_count_total{method=~"POST|PUT|DELETE", status="404"}\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 4: Search by Metric Name"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# All metrics that start with "job:"\n{__name__=~"job:.*"}\n\n# All metrics that start with "nginx"\n{__name__=~"nginx.*"}\n\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 5: Recent Time Range Data"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# nginx responses from the last 5 minutes\nnginx_http_response_count_total{status="200"}[5m]\n\n# 404 errors from the last 1 hour\nnginx_http_response_count_total{status="404"}[1h]\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 6: Time Comparison"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Compare current value with value from 1 hour ago\nnginx_http_response_count_total{status="200"}\nnginx_http_response_count_total{status="200"} offset 1h\n\n# Data from the same time yesterday\nnginx_http_response_count_total offset 1d\n'})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"aggregation-functions",children:"Aggregation Functions"}),(0,r.jsx)(n.p,{children:"Aggregation functions combine multiple time series into a single result."})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"sum",children:"sum()"}),(0,r.jsx)(n.p,{children:"Adds all values across time series."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Total number of requests across all instances\nsum(nginx_http_response_count_total)\n\n# Sum grouped by status code\nsum by (status) (nginx_http_response_count_total)\n\n# Sum grouped by instance\nsum by (instance) (nginx_http_response_count_total)\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"avg",children:"avg()"}),(0,r.jsxs)(n.p,{children:["Calculates the ",(0,r.jsx)(n.strong,{children:"average"})," value across all time series."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Average number of responses across all instances\navg(nginx_http_response_count_total)\n\n# Average by status code\navg by (status) (nginx_http_response_count_total)\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"count",children:"count()"}),(0,r.jsxs)(n.p,{children:["Counts the ",(0,r.jsx)(n.strong,{children:"number"})," of time series."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Total number of time series\ncount(nginx_http_response_count_total)\n\n# Number of time series grouped by status code\ncount by (status) (nginx_http_response_count_total)\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"max--min",children:"max() / min()"}),(0,r.jsxs)(n.p,{children:["Calculates the ",(0,r.jsx)(n.strong,{children:"maximum and minimum"})," values of time series."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Maximum value\nmax(nginx_http_response_count_total)\n\n# Minimum value\nmin(nginx_http_response_count_total)\n\n# Maximum value by status code\nmax by (status) (nginx_http_response_count_total)\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"topk--bottomk",children:"topk() / bottomk()"}),(0,r.jsxs)(n.p,{children:["Returns the ",(0,r.jsx)(n.strong,{children:"top"})," or ",(0,r.jsx)(n.strong,{children:"bottom"})," K time series."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Top 5 time series\ntopk(5, nginx_http_response_count_total)\n\n# Bottom 3 time series\nbottomk(3, nginx_http_response_count_total)\n\n# Top 3 by status code\ntopk(3, sum by (status) (nginx_http_response_count_total))\n"})})]}),"\n",(0,r.jsx)(n.section,{className:"remark-sectionize-h3",children:(0,r.jsx)(n.h3,{id:"time-series-functions",children:"Time Series Functions"})}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"rate",children:"rate()"}),(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"most commonly used function"}),", ",(0,r.jsx)(n.code,{children:"rate()"})," calculates the ",(0,r.jsx)(n.strong,{children:"per-second average increase"})," of a Counter metric."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Per-second average number of requests over the last 5 minutes\nrate(nginx_http_response_count_total[5m])\n\n# Per-second average number of 200-status requests\nrate(nginx_http_response_count_total{status="200"}[5m])\n\n# Total requests per second across all instances\nsum(rate(nginx_http_response_count_total[5m]))\n'})}),(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsx)(n.mdxAdmonitionTitle,{}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cautions"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use only with Counter metrics"}),"\n",(0,r.jsx)(n.li,{children:"The time range should be at least twice the scrape interval (for example, scrape interval 30 seconds \u2192 [1m] or longer)"}),"\n",(0,r.jsx)(n.li,{children:"Automatically handles counter resets (such as server restarts)"}),"\n"]})]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"increase",children:"increase()"}),(0,r.jsxs)(n.p,{children:["Calculates the ",(0,r.jsx)(n.strong,{children:"total increase"})," over a specified time range."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Total number of requests in the last 5 minutes\nincrease(nginx_http_response_count_total[5m])\n\n# Total number of errors in the last 1 hour\nincrease(nginx_http_response_count_total{status=~"5.."}[1h])\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Relationship between rate() and increase()"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"increase(v[5m]) = rate(v[5m]) \xd7 300 seconds"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"rate(): per-second rate"}),"\n",(0,r.jsx)(n.li,{children:"increase(): absolute increase"}),"\n"]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"irate",children:"irate()"}),(0,r.jsxs)(n.p,{children:["Calculates the ",(0,r.jsx)(n.strong,{children:"instantaneous per-second rate of increase"})," based on the last two data points."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Instantaneous rate\nirate(nginx_http_response_count_total[5m])\n"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"irate() vs rate()"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"irate(): suitable for fast-changing counters, useful for detecting short spikes"}),"\n",(0,r.jsx)(n.li,{children:"rate(): suitable for alerts and slowly changing counters, provides an average value"}),"\n"]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"time-range-functions",children:"Time Range Functions"}),(0,r.jsx)(n.p,{children:"Aggregates values within a specific time window."})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"avg_over_time",children:"avg_over_time()"}),(0,r.jsxs)(n.p,{children:["Calculates the ",(0,r.jsx)(n.strong,{children:"average value"})," over a given time range."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Average value over the last 10 minutes\navg_over_time(nginx_http_response_count_total[10m])\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"max_over_time--min_over_time",children:"max_over_time() / min_over_time()"}),(0,r.jsxs)(n.p,{children:["Calculates the ",(0,r.jsx)(n.strong,{children:"maximum or minimum value"})," over a specified time range."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Maximum value during the last 1 hour\nmax_over_time(nginx_http_response_count_total[1h])\n\n# Minimum value during the last 1 hour\nmin_over_time(nginx_http_response_count_total[1h])\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"sum_over_time",children:"sum_over_time()"}),(0,r.jsxs)(n.p,{children:["Calculates the ",(0,r.jsx)(n.strong,{children:"sum of all values"})," within a specified time range."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Sum of all values in the last 5 minutes\nsum_over_time(nginx_http_response_count_total[5m])\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"important-rule-rate-then-sum",children:"Important Rule: Rate then Sum"}),(0,r.jsxs)(n.p,{children:["This rule applies when using time series functions such as ",(0,r.jsx)(n.code,{children:"rate()"}),", ",(0,r.jsx)(n.code,{children:"increase()"}),", and ",(0,r.jsx)(n.code,{children:"irate()"})," with Counter metrics. It must be followed for all aggregation functions (sum, avg, max, min, count, etc.)."]}),(0,r.jsxs)(n.admonition,{type:"caution",children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Always apply rate() first, then sum()"})}),(0,r.jsx)(n.p,{children:"When aggregating Counter metrics, always maintain this order."})]}),(0,r.jsxs)(n.p,{children:["\u{1F535} ",(0,r.jsx)(n.strong,{children:"Correct Method"})]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Apply rate() first, then sum()\nsum(rate(nginx_http_response_count_total[5m]))\n"})}),(0,r.jsxs)(n.p,{children:["\u274C ",(0,r.jsx)(n.strong,{children:"Incorrect Method"})]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Applying sum() first causes issues when counters reset\nrate(sum(nginx_http_response_count_total[5m]))\n"})}),(0,r.jsxs)(n.p,{children:["If you apply ",(0,r.jsx)(n.code,{children:"sum()"})," before ",(0,r.jsx)(n.code,{children:"rate()"}),", counter resets on individual servers cannot be detected.",(0,r.jsx)(n.br,{}),"\n","When one server restarts, the total sum suddenly decreases, and ",(0,r.jsx)(n.code,{children:"rate()"})," miscalculates it as a negative increase or abnormal spike.",(0,r.jsx)(n.br,{}),"\n","Applying ",(0,r.jsx)(n.code,{children:"rate()"})," first ensures that counter resets are detected and handled correctly for each server."]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"practical-examples-1",children:"Practical Examples"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1. Requests Per Second (RPS) Calculation"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Total RPS\nsum(rate(nginx_http_response_count_total[5m]))\n\n# RPS by status code\nsum by (status) (rate(nginx_http_response_count_total[5m]))\n\n# RPS by method\nsum by (method) (rate(nginx_http_response_count_total[5m]))\n"})}),(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Explanation of the PromQL for Total Requests Per Second (RPS)"})}),(0,r.jsxs)(n.p,{children:["Why does ",(0,r.jsx)(n.code,{children:"sum(rate(nginx_http_response_count_total[5m]))"})," represent RPS?"]}),(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["What is ",(0,r.jsx)(n.code,{children:"nginx_http_response_count_total"}),"?"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A Counter metric: the cumulative number of responses since the server started"}),"\n",(0,r.jsx)(n.li,{children:"Example: 1000 \u2192 1050 \u2192 1120 \u2192 1180 \u2192 1250..."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["What does ",(0,r.jsx)(n.code,{children:"rate(...[5m])"})," do?"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It looks at data from the last 5 minutes and calculates the per-second average increase."}),"\n",(0,r.jsxs)(n.li,{children:["Example:",(0,r.jsx)(n.br,{}),"\n","5 minutes ago: 1000",(0,r.jsx)(n.br,{}),"\n","Now: 1300",(0,r.jsx)(n.br,{}),"\n","Difference: 300 (5 minutes = 300 seconds)",(0,r.jsx)(n.br,{}),"\n","rate = 300 \xf7 300 seconds = 1.0 requests/second"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u2192 The result of ",(0,r.jsx)(n.code,{children:"rate()"})," = requests per second (RPS)"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Why is ",(0,r.jsx)(n.code,{children:"sum()"})," needed?"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"It adds the rate values from multiple servers or labels."}),"\n",(0,r.jsxs)(n.li,{children:["Example:",(0,r.jsx)(n.br,{}),"\n","server1, status=200 \u2192 10 req/s",(0,r.jsx)(n.br,{}),"\n","server1, status=404 \u2192 2 req/s",(0,r.jsx)(n.br,{}),"\n","server2, status=200 \u2192 15 req/s",(0,r.jsx)(n.br,{}),"\n","server2, status=404 \u2192 3 req/s",(0,r.jsx)(n.br,{}),"\n","Total = 30 req/s"]}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Conclusion:"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"sum(rate(nginx_http_response_count_total[5m]))"})," = total requests per second (RPS) across all servers."]}),(0,r.jsx)("br",{}),(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Tip:"})," To calculate the total number of requests over 5 minutes, use ",(0,r.jsx)(n.code,{children:"increase()"})," instead.",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"sum(increase(nginx_http_response_count_total[5m]))"})," = total number of requests in 5 minutes."]}),"\n"]})]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2. Error Rate Calculation"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Percentage of 5xx errors out of all requests\nsum(rate(nginx_http_response_count_total{status=~"5.."}[5m])) / sum(rate(nginx_http_response_count_total[5m])) * 100\n\n# Ratio of 4xx errors out of all requests\nsum(rate(nginx_http_response_count_total{status=~"4.."}[5m])) / sum(rate(nginx_http_response_count_total[5m]))\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 3. Find Top N Instances"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Top 5 instances with the highest number of requests\ntopk(5, sum by (instance) (rate(nginx_http_response_count_total[5m])))\n\n# Top 3 instances with the most errors\ntopk(3, sum by (instance) (rate(nginx_http_response_count_total{status=~"5.."}[5m])))\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 4. Time-based Comparison"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Current RPS\nsum(rate(nginx_http_response_count_total[5m]))\n\n# RPS from 1 hour ago\nsum(rate(nginx_http_response_count_total[5m] offset 1h))\n\n# RPS from the same time yesterday\nsum(rate(nginx_http_response_count_total[5m] offset 1d))\n"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 5. Average Responses"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Average responses per instance\navg by (instance) (rate(nginx_http_response_count_total[5m]))\n\n# Average by status code\navg by (status) (rate(nginx_http_response_count_total[5m]))\n"})})]}),"\n",(0,r.jsx)(n.section,{className:"remark-sectionize-h3",children:(0,r.jsx)(n.h3,{id:"math-operators",children:"Math Operators"})}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"arithmetic-operations",children:"Arithmetic Operations"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Addition\nsum(rate(nginx_http_response_count_total{status="200"}[5m]))\n+\nsum(rate(nginx_http_response_count_total{status="201"}[5m]))\n\n# Subtraction\nsum(rate(nginx_http_response_count_total[5m])) - sum(rate(nginx_http_response_count_total{status=~"5.."}[5m]))\n\n# Multiplication (convert bytes to MB)\nnginx_http_response_size_bytes / 1024 / 1024\n\n# Division (calculate ratio)\nsum(rate(nginx_http_response_count_total{status=~"5.."}[5m])) / sum(rate(nginx_http_response_count_total[5m]))\n'})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"comparison-operations",children:"Comparison Operations"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Values greater than 100\nnginx_http_response_count_total > 100\n\n# Values equal to a specific number\nnginx_http_response_count_total == 200\n\n# Range condition\nnginx_http_response_count_total > 100 and nginx_http_response_count_total < 1000\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"practical-tips",children:"Practical Tips"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Choosing Time Range Based on Scrape Interval"})}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Scrape Interval"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Minimum Range"}),(0,r.jsx)(n.th,{style:{textAlign:"center"},children:"Recommended Range"}),(0,r.jsx)(n.th,{children:"Reason"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"15s"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"[30s]"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"[1m] or more"}),(0,r.jsx)(n.td,{children:"Ensures 2~4 data points"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"30s"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"[1m]"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"[2m] or more"}),(0,r.jsx)(n.td,{children:"Ensures 2~4 data points"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"1m"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"[2m]"}),(0,r.jsx)(n.td,{style:{textAlign:"center"},children:"[5m] or more"}),(0,r.jsx)(n.td,{children:"Ensures 2~4 data points"})]})]})]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Choosing Grouping Labels"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Too granular (too many time series)\nsum by (instance, method, status, path) (rate(nginx_http_response_count_total[5m]))\n\n# Appropriate grouping\nsum by (status) (rate(nginx_http_response_count_total[5m]))\n"})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Writing Alert Rules"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# When the error rate exceeds 5% during the last 5 minutes\nsum(rate(nginx_http_response_count_total{status=~"5.."}[5m])) / sum(rate(nginx_http_response_count_total[5m]))\n> 0.05\n'})}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"4. Function Combination Order"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# 1. rate() first\n# 2. Aggregation function (sum, avg, etc.)\n# 3. Arithmetic operation\n\n#Correct order\nsum(rate(nginx_http_response_count_total[5m])) * 100\n"})})]}),"\n",(0,r.jsx)(n.section,{className:"remark-sectionize-h3",children:(0,r.jsx)(n.h3,{id:"other-functions",children:"Other Functions"})}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"abs",children:"abs()"}),(0,r.jsxs)(n.p,{children:["Returns the ",(0,r.jsx)(n.strong,{children:"absolute value"})," of a number."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"abs(rate(nginx_http_response_count_total[5m]) - 100)\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"round",children:"round()"}),(0,r.jsx)(n.p,{children:"Rounds a value to the nearest integer or a specified unit."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Round to the nearest integer\nround(sum(rate(nginx_http_response_count_total[5m])))\n\n# Round to the nearest 10\nround(sum(rate(nginx_http_response_count_total[5m])), 10)\n"})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"clamp_max--clamp_min",children:"clamp_max() / clamp_min()"}),(0,r.jsxs)(n.p,{children:["Restricts values so that they do not exceed the specified ",(0,r.jsx)(n.strong,{children:"maximum"})," or fall below the ",(0,r.jsx)(n.strong,{children:"minimum"}),"."]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Limit the maximum to 1000\nclamp_max(nginx_http_response_count_total, 1000)\n\n# Limit the minimum to 0\nclamp_min(nginx_http_response_count_total, 0)\n"})})]}),"\n",(0,r.jsx)(n.section,{className:"remark-sectionize-h3",children:(0,r.jsx)(n.h3,{id:"notes",children:"Notes"})}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"matching-empty-label-values",children:"Matching Empty Label Values"}),(0,r.jsx)(n.p,{children:"When you match an empty label value, all series that either lack the label or have an empty value are also selected."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Select all series without the "environment" label or with an empty value\nnginx_http_response_count_total{environment=""}\n'})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"required-selectors",children:"Required Selectors"}),(0,r.jsx)(n.p,{children:"A vector selector must specify at least one metric name or a label matcher that does not match an empty string."}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# \u274C Incorrect example\n{job=~".*"}\n\n# \u2705 Correct examples\n{job=~".+"}\n{job=~".*", method="get"}\n'})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"performance-considerations",children:"Performance Considerations"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Tips for Efficient Queries"})}),(0,r.jsx)(n.p,{children:"If you use only the metric name, thousands of time series may be selected."}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Always use appropriate label filters to narrow down the results."}),"\n",(0,r.jsx)(n.li,{children:"Start with the Table view to check the output, then filter appropriately before switching to the Chart view."}),"\n",(0,r.jsx)(n.li,{children:"Ideally, the result should contain fewer than a few hundred series."}),"\n"]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h4",children:[(0,r.jsx)(n.h4,{id:"staleness-outdated-data",children:"Staleness (Outdated Data)"}),(0,r.jsx)(n.p,{children:'If a time series is no longer being scraped, it becomes marked as "stale."'}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Once marked stale, it is excluded from query results."}),"\n",(0,r.jsx)(n.li,{children:"By default, if no data is collected for 5 minutes, it is considered stale."}),"\n"]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"regular-expressions",children:"Regular Expressions"}),(0,r.jsx)(n.p,{children:"Prometheus uses RE2 syntax."}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["All regular expressions are fully anchored (Prometheus automatically adds ",(0,r.jsx)(n.code,{children:"^"})," and ",(0,r.jsx)(n.code,{children:"$"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'env=~"foo"'})," is equivalent to ",(0,r.jsx)(n.code,{children:'env=~"^foo$"'}),"."]}),"\n"]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"comments",children:"Comments"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# This is a comment\nnginx_http_response_count_total{status="200"} # End-of-line comments are also supported\n'})}),(0,r.jsx)("br",{}),(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Recommended Learning Order"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Basic: rate(), sum(), avg()"}),"\n",(0,r.jsx)(n.li,{children:"Intermediate: increase(), irate(), topk()"}),"\n",(0,r.jsx)(n.li,{children:"Advanced: complex ratio calculations, combining multiple functions"}),"\n"]})]}),(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"References"})}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://prometheus.io/docs/prometheus/latest/querying/basics/",children:"PromQL Basics"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://prometheus.io/docs/prometheus/latest/querying/functions/",children:"PromQL Functions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://prometheus.io/docs/prometheus/latest/querying/examples/",children:"PromQL Examples"})}),"\n"]})]})]})]})}function h(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},84429:function(e,n,s){s.d(n,{R:()=>o,x:()=>a});var t=s(96540);let r={},i=t.createContext(r);function o(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);