"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["77180"],{1179:function(e,d,s){s.d(d,{Ay:()=>i,RM:()=>c});var r=s(74848),t=s(84429);let c=[{value:"agent_status_summary",id:"agent_status_summary",level:2},{value:"Fields",id:"agent_status_summary_filed",level:3}];function n(e){let d={code:"code",h2:"h2",h3:"h3",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components},{Xclude:s}=d;return s||function(e,d){throw Error("Expected "+(d?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Xclude",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(d.section,{className:"remark-sectionize-h2",children:[(0,r.jsx)(d.h2,{id:"agent_status_summary",children:"agent_status_summary"}),(0,r.jsx)(d.p,{children:"This category collects metrics related to agent status every 10 seconds."})]}),"\n",(0,r.jsxs)(d.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(d.h3,{id:"agent_status_summary_filed",children:"Fields"}),(0,r.jsx)(s,{product:"server,kubernetes",children:(0,r.jsx)("div",{className:"c4-20-10-10-60",children:(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Field"}),(0,r.jsx)(d.th,{children:"Type"}),(0,r.jsx)(d.th,{children:"Unit"}),(0,r.jsx)(d.th,{children:"Description"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"inActTime"}),(0,r.jsx)(d.td,{children:"-"}),(0,r.jsx)(d.td,{children:"Millisecond(ms)"}),(0,r.jsx)(d.td,{children:"Amount of time the agent remains inactive"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"isActive"}),(0,r.jsx)(d.td,{children:"Boolean"}),(0,r.jsx)(d.td,{children:"-"}),(0,r.jsx)(d.td,{children:"Whether the agent is active or not"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"isRestart"}),(0,r.jsx)(d.td,{children:"Boolean"}),(0,r.jsx)(d.td,{children:"-"}),(0,r.jsxs)(d.td,{children:["Whether the agent was restarted recently (",(0,r.jsx)(d.code,{children:"true"})," / ",(0,r.jsx)(d.code,{children:"false"}),")"]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"lastActTime"}),(0,r.jsx)(d.td,{children:"-"}),(0,r.jsx)(d.td,{children:"Millisecond(ms)"}),(0,r.jsxs)(d.td,{children:["Last time when the agent was activated (",(0,r.jsx)(d.code,{children:"0"}),": Disabled)"]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"oid"}),(0,r.jsx)(d.td,{children:"-"}),(0,r.jsx)(d.td,{children:"-"}),(0,r.jsx)(d.td,{children:"Unique IDs for each agent in the project"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:"startTime"}),(0,r.jsx)(d.td,{children:"-"}),(0,r.jsx)(d.td,{children:"Millisecond(ms)"}),(0,r.jsx)(d.td,{children:"Timestamp when the agent was started."})]})]})]})})})]})]})}function i(e={}){let{wrapper:d}={...(0,t.R)(),...e.components};return d?(0,r.jsx)(d,{...e,children:(0,r.jsx)(n,{...e})}):n(e)}},56141:function(e,d,s){s.d(d,{Ay:()=>i,RM:()=>c});var r=s(74848),t=s(84429);let c=[{value:"XOS-related metrics",id:"xosmetrics",level:2}];function n(e){let d={code:"code",h2:"h2",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(d.section,{className:"remark-sectionize-h2",children:[(0,r.jsx)(d.h2,{id:"xosmetrics",children:"XOS-related metrics"}),(0,r.jsx)(d.p,{children:"The following describes the metrics collected from the XOS agent."}),(0,r.jsx)("div",{class:"metric",children:(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Metric"}),(0,r.jsx)(d.th,{children:"Unit"}),(0,r.jsx)(d.th,{children:"Description"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cpu(xos)"})}),(0,r.jsx)(d.td,{children:"pct"}),(0,r.jsxs)(d.td,{children:["CPU utilization",(0,r.jsx)("br",{})," ",(0,r.jsx)(d.code,{children:"cpu_user"})," + ",(0,r.jsx)(d.code,{children:"cpu_sys"})," + ",(0,r.jsx)(d.code,{children:"cpu_iowait"})]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cpu_idle(xos)"})}),(0,r.jsx)(d.td,{children:"pct"}),(0,r.jsx)(d.td,{children:"CPU idle time"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cpu_iowait(xos)"})}),(0,r.jsx)(d.td,{children:"pct"}),(0,r.jsx)(d.td,{children:"CPU's I/O waiting time"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cpu_sys(xos)"})}),(0,r.jsx)(d.td,{children:"pct"}),(0,r.jsx)(d.td,{children:"CPU's kernel code execution time"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cpu_user(xos)"})}),(0,r.jsx)(d.td,{children:"pct"}),(0,r.jsx)(d.td,{children:"CPU's user code execution time"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"disk_read_bytes(xos)"})}),(0,r.jsx)(d.td,{children:"byte"}),(0,r.jsx)(d.td,{children:"Number of data blocks read from disk"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"disk_reads(xos)"})}),(0,r.jsx)(d.td,{children:"block"}),(0,r.jsx)(d.td,{children:"Number of buffers read from disk"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"disk_write_bytes(xos)"})}),(0,r.jsx)(d.td,{children:"byte"}),(0,r.jsx)(d.td,{children:"Number of pages written to disk"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"disk_writes(xos)"})}),(0,r.jsx)(d.td,{children:"block"}),(0,r.jsx)(d.td,{children:"Number of buffers written to disk"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem(xos)"})}),(0,r.jsx)(d.td,{children:"pct"}),(0,r.jsx)(d.td,{children:"Memory utilization"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_available(xos)"})}),(0,r.jsx)(d.td,{children:"MB"}),(0,r.jsx)(d.td,{children:"Shared memory size"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_buffcache(xos)"})}),(0,r.jsx)(d.td,{children:"MB"}),(0,r.jsx)(d.td,{children:"Amount of memory used by the buff/cache"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_free(xos)"})}),(0,r.jsx)(d.td,{children:"MB"}),(0,r.jsx)(d.td,{children:"Memory not in use"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_swapfree(xos)"})}),(0,r.jsx)(d.td,{children:"MB"}),(0,r.jsxs)(d.td,{children:["Unused swap space size",(0,r.jsx)("br",{})," Because swap uses disk space, it may cause performance degradation."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_swaptotal(xos)"})}),(0,r.jsx)(d.td,{children:"MB"}),(0,r.jsxs)(d.td,{children:["Total swap size",(0,r.jsx)("br",{})," It is used when physical memory is insufficient."]})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_total(xos)"})}),(0,r.jsx)(d.td,{children:"MB"}),(0,r.jsx)(d.td,{children:"Total memory size"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_used(xos)"})}),(0,r.jsx)(d.td,{children:"MB"}),(0,r.jsx)(d.td,{children:"Memory size in use"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"net_recv_bytes(xos)"})}),(0,r.jsx)(d.td,{children:"byte"}),(0,r.jsx)(d.td,{children:"Amount of data transmitted over the network"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"net_recv_packets(xos)"})}),(0,r.jsx)(d.td,{children:"count"}),(0,r.jsx)(d.td,{children:"Number of data packets transmitted over the network"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"net_send_bytes(xos)"})}),(0,r.jsx)(d.td,{children:"byte"}),(0,r.jsx)(d.td,{children:"Amount of data transmitted over the network"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"net_send_packets(xos)"})}),(0,r.jsx)(d.td,{children:"count"}),(0,r.jsx)(d.td,{children:"Number of data packets transmitted over the network"})]})]})]})})]})}function i(e={}){let{wrapper:d}={...(0,t.R)(),...e.components};return d?(0,r.jsx)(d,{...e,children:(0,r.jsx)(n,{...e})}):n(e)}},44557:function(e,d,s){s.r(d),s.d(d,{metadata:()=>r,default:()=>a,frontMatter:()=>l,contentTitle:()=>h,toc:()=>x,assets:()=>o});var r=JSON.parse('{"id":"cubrid/metrics-data-list","title":"CUBRID metrics","description":"The following is the guide to CUBRID metrics.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/cubrid/metirics-data-list.mdx","sourceDirName":"cubrid","slug":"/cubrid/metrics-data-list","permalink":"/whatap-docs/en/cubrid/metrics-data-list","draft":false,"unlisted":false,"editUrl":"undefined/docs/cubrid/metirics-data-list.mdx","tags":[],"version":"current","frontMatter":{"id":"metrics-data-list","title":"CUBRID metrics","description":"The following is the guide to CUBRID metrics.","keywords":["CUBRID","Metrics","DATABASE","Database Monitoring"],"isTranslationMissing":false},"sidebar":"cubridSidebar","previous":{"title":"Metrics","permalink":"/whatap-docs/en/cubrid/metrics-intro"},"next":{"title":"Metrics Chart","permalink":"/whatap-docs/en/cubrid/metrics-chart-v2"}}'),t=s(74848),c=s(84429),n=s(1179),i=s(56141);let l={id:"metrics-data-list",title:"CUBRID metrics",description:"The following is the guide to CUBRID metrics.",keywords:["CUBRID","Metrics","DATABASE","Database Monitoring"],isTranslationMissing:!1},h,o={},x=[...n.RM,{value:"db_cubrid_counter",id:"db_cubrid_counter",level:2},{value:"Tags",id:"db_cubrid_counter-tags",level:3},{value:"Field",id:"db_cubrid_counter-filed",level:3},...i.RM];function j(e){let d={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(d.p,{children:"Database metrics comprehensively collect the database workload and resource usage. The WhaTap monitoring service continuously collects metric data to identify bottlenecks in the database and provides data to help identify the root cause of the performance issue."}),"\n",(0,t.jsxs)(d.p,{children:["For more information about other metrics, see ",(0,t.jsx)(d.a,{href:"https://www.cubrid.org/manuals",children:"the following"}),"."]}),"\n","\n",(0,t.jsxs)("div",{className:"metricslist",children:[(0,t.jsx)(n.Ay,{}),(0,t.jsx)(d.section,{className:"remark-sectionize-h2",children:(0,t.jsx)(d.h2,{id:"db_cubrid_counter",children:"db_cubrid_counter"})}),(0,t.jsxs)(d.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(d.h3,{id:"db_cubrid_counter-tags",children:"Tags"}),(0,t.jsxs)(d.p,{children:["The following lists the tags that are collected in the ",(0,t.jsx)(d.code,{children:"db_cubrid_counter"})," category."]}),(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{children:"Tag name"}),(0,t.jsx)(d.th,{children:"Description"}),(0,t.jsx)(d.th,{children:"Remarks"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"agentIp"})}),(0,t.jsx)(d.td,{children:"IP address per agent."}),(0,t.jsx)(d.td,{children:"-"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"dbIsMulti"})}),(0,t.jsx)(d.td,{children:"Whether to support the multitenant or not."}),(0,t.jsx)(d.td,{children:"-"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"dbName"})}),(0,t.jsx)(d.td,{children:"Database name."}),(0,t.jsx)(d.td,{children:"-"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"dbType"})}),(0,t.jsx)(d.td,{children:"Database type."}),(0,t.jsx)(d.td,{children:"-"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"dbVersion"})}),(0,t.jsx)(d.td,{children:"Version of the database in use."}),(0,t.jsx)(d.td,{children:"-"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"oname"})}),(0,t.jsx)(d.td,{children:"Agent name"}),(0,t.jsx)(d.td,{children:"Unique value"})]})]})]})]}),(0,t.jsxs)(d.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(d.h3,{id:"db_cubrid_counter-filed",children:"Field"}),(0,t.jsxs)(d.p,{children:["The following lists the fields that are collected in the ",(0,t.jsx)(d.code,{children:"db_cubrid_counter"})," category."]}),(0,t.jsx)("div",{class:"db-metric-3",children:(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{children:"Metrics"}),(0,t.jsx)(d.th,{children:"Description"}),(0,t.jsx)(d.th,{children:"Category"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"active_sessions"})}),(0,t.jsx)(d.td,{children:"Number of active sessions."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"broker_count"})}),(0,t.jsx)(d.td,{children:"Number of brokers."}),(0,t.jsx)(d.td,{children:"Network"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"connect_error"})}),(0,t.jsx)(d.td,{children:"Number of connection errors."}),(0,t.jsx)(d.td,{children:"Network"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"data_page_buffer_hit_ratio"})}),(0,t.jsxs)(d.td,{children:["Data page buffer hit ratio.",(0,t.jsx)("br",{})," Calculation method: (",(0,t.jsx)(d.code,{children:"Num_data_page_fetches"})," - ",(0,t.jsx)(d.code,{children:"Num_data_page_ioreads"}),")*100 / ",(0,t.jsx)(d.code,{children:"Num_data_page_fetches"})]}),(0,t.jsx)(d.td,{children:"Buffer hit rate"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"executions"})}),(0,t.jsx)(d.td,{children:"Number of queries executed"}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"fatal_count"})}),(0,t.jsx)(d.td,{children:"Number of fatal errors."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"lock_wait_sessions"})}),(0,t.jsx)(d.td,{children:"Number of pending sessions."}),(0,t.jsx)(d.td,{children:"Concurrency/Lock"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"long_running_sessions"})}),(0,t.jsx)(d.td,{children:"Number of long running sessions."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_adaptive_flush_log_pages"})}),(0,t.jsx)(d.td,{children:"Number of log pages flushed from log buffer to disk."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_adaptive_flush_max_pages"})}),(0,t.jsx)(d.td,{children:"Number of data pages allowed for flushing from data and log buffers to disk."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_adaptive_flush_pages"})}),(0,t.jsx)(d.td,{children:"Number of data pages flushed from data buffer to disk."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_covered"})}),(0,t.jsx)(d.td,{children:"Number of cases in which the index includes all data upon query."}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_deletes"})}),(0,t.jsx)(d.td,{children:"Number of items deleted from B-Tree."}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_get_stats"})}),(0,t.jsx)(d.td,{children:"Number of cases B-Tree statistics have been queried."}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_inserts"})}),(0,t.jsx)(d.td,{children:"Number of items inserted into B-Tree."}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_merges"})}),(0,t.jsx)(d.td,{children:"Number of B-Tree node merges."}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_multirange_optimization"})}),(0,t.jsxs)(d.td,{children:["Number of cases where multi-range optimization was performed for ",(0,t.jsx)(d.code,{children:"WHERE ... IN ... LIMIT"})," conditional queries"]}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_noncovered"})}),(0,t.jsx)(d.td,{children:"Number of cases where the index contains some or no data upon query."}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_resumes"})}),(0,t.jsxs)(d.td,{children:["Number of restarts in B-Tree. It indicates the number of index scans that exceeded ",(0,t.jsx)(d.code,{children:"index_scan_oid_buffer_pages"}),"."]}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_splits"})}),(0,t.jsx)(d.td,{children:"Number of B-Tree node splits."}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_btree_updates"})}),(0,t.jsx)(d.td,{children:"Number of items updated from B-Tree."}),(0,t.jsx)(d.td,{children:"Index"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_data_page_dirties"})}),(0,t.jsx)(d.td,{children:"Number of dirty data pages."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_data_page_fetches"})}),(0,t.jsx)(d.td,{children:"Number of pages for the fetched data."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_data_page_ioreads"})}),(0,t.jsx)(d.td,{children:"Number of data pages read from disk. A higher value indicates the efficiency is lower and correlates with a lower hit ratio."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_data_page_iowrites"})}),(0,t.jsx)(d.td,{children:"Number of data pages written to disk. A higher value indicates that it is less efficient."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_file_creates"})}),(0,t.jsx)(d.td,{children:"Number of created files."}),(0,t.jsx)(d.td,{children:"I/O"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_file_ioreads"})}),(0,t.jsx)(d.td,{children:"Number of I/O operations read from disk."}),(0,t.jsx)(d.td,{children:"I/O"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_file_iosynches"})}),(0,t.jsx)(d.td,{children:"Number of I/O operations for synchronization with disk."}),(0,t.jsx)(d.td,{children:"I/O"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_file_iowrites"})}),(0,t.jsx)(d.td,{children:"Number of I/O operations stored to disk."}),(0,t.jsx)(d.td,{children:"I/O"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_file_page_allocs"})}),(0,t.jsx)(d.td,{children:"Number of file page allocations."}),(0,t.jsx)(d.td,{children:"I/O"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_file_page_deallocs"})}),(0,t.jsx)(d.td,{children:"Number of file page deallocations."}),(0,t.jsx)(d.td,{children:"I/O"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_file_removes"})}),(0,t.jsx)(d.td,{children:"Number of removed files."}),(0,t.jsx)(d.td,{children:"I/O"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_heap_stats_bestspace_entries"})}),(0,t.jsx)(d.td,{children:"Number of best space entries in heap statistics."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_heap_stats_bestspace_maxed"})}),(0,t.jsx)(d.td,{children:"Number of best heap space entries."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_log_append_records"})}),(0,t.jsx)(d.td,{children:"Number of added log records."}),(0,t.jsx)(d.td,{children:"Log"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_log_archives"})}),(0,t.jsx)(d.td,{children:"Number of log archive operations executed."}),(0,t.jsx)(d.td,{children:"Log"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_log_page_ioreads"})}),(0,t.jsx)(d.td,{children:"Number of log pages read from disk."}),(0,t.jsx)(d.td,{children:"Log"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_log_page_iowrites"})}),(0,t.jsx)(d.td,{children:"Number of log pages written to disk."}),(0,t.jsx)(d.td,{children:"Log"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_log_wals"})}),(0,t.jsx)(d.td,{children:"Number of Write-Ahead Logging (WAL) records written in the log."}),(0,t.jsx)(d.td,{children:"Log"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_network_requests"})}),(0,t.jsx)(d.td,{children:"Number of network requests."}),(0,t.jsx)(d.td,{children:"Network"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_object_locks_acquired"})}),(0,t.jsx)(d.td,{children:"Number of acquired object locks."}),(0,t.jsx)(d.td,{children:"Concurrency/Lock"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_object_locks_converted"})}),(0,t.jsx)(d.td,{children:"Number of converted object locks."}),(0,t.jsx)(d.td,{children:"Concurrency/Lock"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_object_locks_re_requested"})}),(0,t.jsx)(d.td,{children:"Number of re-requested object locks."}),(0,t.jsx)(d.td,{children:"Concurrency/Lock"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_object_locks_waits"})}),(0,t.jsx)(d.td,{children:"Number of waiting object locks."}),(0,t.jsx)(d.td,{children:"Concurrency/Lock"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_page_locks_acquired"})}),(0,t.jsx)(d.td,{children:"Number of acquired page locks."}),(0,t.jsx)(d.td,{children:"Concurrency/Lock"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_page_locks_converted"})}),(0,t.jsx)(d.td,{children:"Number of converted page locks."}),(0,t.jsx)(d.td,{children:"Concurrency/Lock"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_page_locks_re_requested"})}),(0,t.jsx)(d.td,{children:"Number of re-requested page locks."}),(0,t.jsx)(d.td,{children:"Concurrency/Lock"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_page_locks_waits"})}),(0,t.jsx)(d.td,{children:"Number of waiting page locks."}),(0,t.jsx)(d.td,{children:"Concurrency/Lock"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_add"})}),(0,t.jsx)(d.td,{children:"Number of entries added to the query plan cache."}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_class_oid_hash_entries"})}),(0,t.jsx)(d.td,{children:"Number of entries in the class OID hash table."}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_delete"})}),(0,t.jsx)(d.td,{children:"Number of cases a cache entry has been deleted."}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_full"})}),(0,t.jsx)(d.td,{children:"Number of victim searches when the cache entries exceeded the allowed limit."}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_hit"})}),(0,t.jsx)(d.td,{children:"Number of cases an entry has been found in the query string hash table."}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_invalid_xasl_id"})}),(0,t.jsxs)(d.td,{children:["Number of misses for entry in the ",(0,t.jsx)(d.code,{children:"xasl_id"})," hash table. It is the number of errors that occurred when a specific entry was victimized on the server, but the entry was requested by the client."]}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_lookup"})}),(0,t.jsx)(d.td,{children:"Number of lookups attempted using a specific key."}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_miss"})}),(0,t.jsx)(d.td,{children:"Number of entries not hit in the query string hash table."}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_query_string_hash_entries"})}),(0,t.jsx)(d.td,{children:"Number of entries in the query string hash table."}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_plan_cache_xasl_id_hash_entries"})}),(0,t.jsxs)(d.td,{children:["Number of entries in the ",(0,t.jsx)(d.code,{children:"xasl id"})," hash table."]}),(0,t.jsx)(d.td,{children:"Query plan cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_prior_lsa_list_maxed"})}),(0,t.jsx)(d.td,{children:"Maximum number of entries in the LSA list."}),(0,t.jsx)(d.td,{children:"Log"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_prior_lsa_list_removed"})}),(0,t.jsx)(d.td,{children:"Number of entries removed from the LSA list."}),(0,t.jsx)(d.td,{children:"Log"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_prior_lsa_list_size"})}),(0,t.jsx)(d.td,{children:"LSA list size."}),(0,t.jsx)(d.td,{children:"Log"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_deletes"})}),(0,t.jsx)(d.td,{children:"Number of DELETE queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_holdable_cursors"})}),(0,t.jsx)(d.td,{children:"Number of processed cursors that can be held."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_inserts"})}),(0,t.jsx)(d.td,{children:"Number of INSERT queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_iscans"})}),(0,t.jsx)(d.td,{children:"Number of index scan queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_lscans"})}),(0,t.jsx)(d.td,{children:"Number of LIST scan queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_methscans"})}),(0,t.jsx)(d.td,{children:"Number of METHOD scan queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_mjoins"})}),(0,t.jsx)(d.td,{children:"Number of merge join queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_nljoins"})}),(0,t.jsx)(d.td,{children:"Number of nested loop join queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_objfetches"})}),(0,t.jsx)(d.td,{children:"Number of object fetch queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_selects"})}),(0,t.jsx)(d.td,{children:"Number of SELECT queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_setscans"})}),(0,t.jsx)(d.td,{children:"Number of SET scan queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_sscans"})}),(0,t.jsx)(d.td,{children:"Number of full scan queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_query_updates"})}),(0,t.jsx)(d.td,{children:"Number of UPDATE queries processed."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_sort_data_pages"})}),(0,t.jsx)(d.td,{children:"Number of pages found from page buffer while sorting. The higher this value, the less efficient it is."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_sort_io_pages"})}),(0,t.jsx)(d.td,{children:"Number of pages fetched from disk while sorting. The higher this value, the less efficient it is."}),(0,t.jsx)(d.td,{children:"Page buffer"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_tran_commits"})}),(0,t.jsx)(d.td,{children:"Number of committed transactions."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_tran_end_topops"})}),(0,t.jsx)(d.td,{children:"Number of top operation transactions that have been terminated."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_tran_interrupts"})}),(0,t.jsx)(d.td,{children:"Number of transaction interrupts."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_tran_rollbacks"})}),(0,t.jsx)(d.td,{children:"Number of rollback transactions."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_tran_savepoints"})}),(0,t.jsx)(d.td,{children:"Number of cases a save point is set."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"num_tran_start_topops"})}),(0,t.jsx)(d.td,{children:"Number of top operation transactions that have been started."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"psize"})}),(0,t.jsx)(d.td,{children:"Page size."}),(0,t.jsx)(d.td,{children:"I/O"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"qps"})}),(0,t.jsx)(d.td,{children:"Number of queries processed per second."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"replication_delay"})}),(0,t.jsx)(d.td,{children:"Replication delay time."}),(0,t.jsx)(d.td,{children:"HA"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"time_ha_replication_delay"})}),(0,t.jsx)(d.td,{children:"HA replication delay time (seconds)."}),(0,t.jsx)(d.td,{children:"HA"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"total_query_time"})}),(0,t.jsx)(d.td,{children:"Total query execution time."}),(0,t.jsx)(d.td,{children:"Query"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"total_sessions"})}),(0,t.jsx)(d.td,{children:"Total number of sessions."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"tps"})}),(0,t.jsx)(d.td,{children:"Number of transactions per second."}),(0,t.jsx)(d.td,{children:"Transaction"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"warning_count"})}),(0,t.jsx)(d.td,{children:"Number of warnings occurred."}),(0,t.jsx)(d.td,{children:"Transaction"})]})]})]})}),(0,t.jsx)(i.Ay,{})]})]})]})}function a(e={}){let{wrapper:d}={...(0,c.R)(),...e.components};return d?(0,t.jsx)(d,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}},84429:function(e,d,s){s.d(d,{R:()=>n,x:()=>i});var r=s(96540);let t={},c=r.createContext(t);function n(e){let d=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(d):{...d,...e}},[d,e])}function i(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),r.createElement(c.Provider,{value:d},e.children)}}}]);