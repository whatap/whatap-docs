"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["56380"],{1179:function(e,d,s){s.d(d,{Ay:()=>i,RM:()=>c});var t=s(74848),r=s(84429);let c=[{value:"agent_status_summary",id:"agent_status_summary",level:2},{value:"Fields",id:"agent_status_summary_filed",level:3}];function n(e){let d={code:"code",h2:"h2",h3:"h3",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components},{Xclude:s}=d;return s||function(e,d){throw Error("Expected "+(d?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Xclude",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(d.section,{className:"remark-sectionize-h2",children:[(0,t.jsx)(d.h2,{id:"agent_status_summary",children:"agent_status_summary"}),(0,t.jsx)(d.p,{children:"This category collects metrics related to agent status every 10 seconds."})]}),"\n",(0,t.jsxs)(d.section,{className:"remark-sectionize-h3",children:[(0,t.jsx)(d.h3,{id:"agent_status_summary_filed",children:"Fields"}),(0,t.jsx)(s,{product:"server,kubernetes",children:(0,t.jsx)("div",{className:"c4-20-10-10-60",children:(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{children:"Field"}),(0,t.jsx)(d.th,{children:"Type"}),(0,t.jsx)(d.th,{children:"Unit"}),(0,t.jsx)(d.th,{children:"Description"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"inActTime"}),(0,t.jsx)(d.td,{children:"-"}),(0,t.jsx)(d.td,{children:"Millisecond(ms)"}),(0,t.jsx)(d.td,{children:"Amount of time the agent remains inactive"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"isActive"}),(0,t.jsx)(d.td,{children:"Boolean"}),(0,t.jsx)(d.td,{children:"-"}),(0,t.jsx)(d.td,{children:"Whether the agent is active or not"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"isRestart"}),(0,t.jsx)(d.td,{children:"Boolean"}),(0,t.jsx)(d.td,{children:"-"}),(0,t.jsxs)(d.td,{children:["Whether the agent was restarted recently (",(0,t.jsx)(d.code,{children:"true"})," / ",(0,t.jsx)(d.code,{children:"false"}),")"]})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"lastActTime"}),(0,t.jsx)(d.td,{children:"-"}),(0,t.jsx)(d.td,{children:"Millisecond(ms)"}),(0,t.jsxs)(d.td,{children:["Last time when the agent was activated (",(0,t.jsx)(d.code,{children:"0"}),": Disabled)"]})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"oid"}),(0,t.jsx)(d.td,{children:"-"}),(0,t.jsx)(d.td,{children:"-"}),(0,t.jsx)(d.td,{children:"Unique IDs for each agent in the project"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:"startTime"}),(0,t.jsx)(d.td,{children:"-"}),(0,t.jsx)(d.td,{children:"Millisecond(ms)"}),(0,t.jsx)(d.td,{children:"Timestamp when the agent was started."})]})]})]})})})]})]})}function i(e={}){let{wrapper:d}={...(0,r.R)(),...e.components};return d?(0,t.jsx)(d,{...e,children:(0,t.jsx)(n,{...e})}):n(e)}},56141:function(e,d,s){s.d(d,{Ay:()=>i,RM:()=>c});var t=s(74848),r=s(84429);let c=[{value:"XOS-related metrics",id:"xosmetrics",level:2}];function n(e){let d={code:"code",h2:"h2",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,t.jsxs)(d.section,{className:"remark-sectionize-h2",children:[(0,t.jsx)(d.h2,{id:"xosmetrics",children:"XOS-related metrics"}),(0,t.jsx)(d.p,{children:"The following describes the metrics collected from the XOS agent."}),(0,t.jsx)("div",{class:"metric",children:(0,t.jsxs)(d.table,{children:[(0,t.jsx)(d.thead,{children:(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.th,{children:"Metric"}),(0,t.jsx)(d.th,{children:"Unit"}),(0,t.jsx)(d.th,{children:"Description"})]})}),(0,t.jsxs)(d.tbody,{children:[(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"cpu(xos)"})}),(0,t.jsx)(d.td,{children:"pct"}),(0,t.jsxs)(d.td,{children:["CPU utilization",(0,t.jsx)("br",{})," ",(0,t.jsx)(d.code,{children:"cpu_user"})," + ",(0,t.jsx)(d.code,{children:"cpu_sys"})," + ",(0,t.jsx)(d.code,{children:"cpu_iowait"})]})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"cpu_idle(xos)"})}),(0,t.jsx)(d.td,{children:"pct"}),(0,t.jsx)(d.td,{children:"CPU idle time"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"cpu_iowait(xos)"})}),(0,t.jsx)(d.td,{children:"pct"}),(0,t.jsx)(d.td,{children:"CPU's I/O waiting time"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"cpu_sys(xos)"})}),(0,t.jsx)(d.td,{children:"pct"}),(0,t.jsx)(d.td,{children:"CPU's kernel code execution time"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"cpu_user(xos)"})}),(0,t.jsx)(d.td,{children:"pct"}),(0,t.jsx)(d.td,{children:"CPU's user code execution time"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"disk_read_bytes(xos)"})}),(0,t.jsx)(d.td,{children:"byte"}),(0,t.jsx)(d.td,{children:"Number of data blocks read from disk"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"disk_reads(xos)"})}),(0,t.jsx)(d.td,{children:"block"}),(0,t.jsx)(d.td,{children:"Number of buffers read from disk"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"disk_write_bytes(xos)"})}),(0,t.jsx)(d.td,{children:"byte"}),(0,t.jsx)(d.td,{children:"Number of pages written to disk"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"disk_writes(xos)"})}),(0,t.jsx)(d.td,{children:"block"}),(0,t.jsx)(d.td,{children:"Number of buffers written to disk"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"mem(xos)"})}),(0,t.jsx)(d.td,{children:"pct"}),(0,t.jsx)(d.td,{children:"Memory utilization"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"mem_available(xos)"})}),(0,t.jsx)(d.td,{children:"MB"}),(0,t.jsx)(d.td,{children:"Shared memory size"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"mem_buffcache(xos)"})}),(0,t.jsx)(d.td,{children:"MB"}),(0,t.jsx)(d.td,{children:"Amount of memory used by the buff/cache"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"mem_free(xos)"})}),(0,t.jsx)(d.td,{children:"MB"}),(0,t.jsx)(d.td,{children:"Memory not in use"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"mem_swapfree(xos)"})}),(0,t.jsx)(d.td,{children:"MB"}),(0,t.jsxs)(d.td,{children:["Unused swap space size",(0,t.jsx)("br",{})," Because swap uses disk space, it may cause performance degradation."]})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"mem_swaptotal(xos)"})}),(0,t.jsx)(d.td,{children:"MB"}),(0,t.jsxs)(d.td,{children:["Total swap size",(0,t.jsx)("br",{})," It is used when physical memory is insufficient."]})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"mem_total(xos)"})}),(0,t.jsx)(d.td,{children:"MB"}),(0,t.jsx)(d.td,{children:"Total memory size"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"mem_used(xos)"})}),(0,t.jsx)(d.td,{children:"MB"}),(0,t.jsx)(d.td,{children:"Memory size in use"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"net_recv_bytes(xos)"})}),(0,t.jsx)(d.td,{children:"byte"}),(0,t.jsx)(d.td,{children:"Amount of data transmitted over the network"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"net_recv_packets(xos)"})}),(0,t.jsx)(d.td,{children:"count"}),(0,t.jsx)(d.td,{children:"Number of data packets transmitted over the network"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"net_send_bytes(xos)"})}),(0,t.jsx)(d.td,{children:"byte"}),(0,t.jsx)(d.td,{children:"Amount of data transmitted over the network"})]}),(0,t.jsxs)(d.tr,{children:[(0,t.jsx)(d.td,{children:(0,t.jsx)(d.code,{children:"net_send_packets(xos)"})}),(0,t.jsx)(d.td,{children:"count"}),(0,t.jsx)(d.td,{children:"Number of data packets transmitted over the network"})]})]})]})})]})}function i(e={}){let{wrapper:d}={...(0,r.R)(),...e.components};return d?(0,t.jsx)(d,{...e,children:(0,t.jsx)(n,{...e})}):n(e)}},77658:function(e,d,s){s.r(d),s.d(d,{metadata:()=>t,default:()=>a,frontMatter:()=>l,contentTitle:()=>h,toc:()=>x,assets:()=>o});var t=JSON.parse('{"id":"redis/metrics-data-list","title":"Redis metrics","description":"It guides you to the important metrics used in WhaTap Redis.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/redis/metrics-data-list.mdx","sourceDirName":"redis","slug":"/redis/metrics-data-list","permalink":"/whatap-docs/en/redis/metrics-data-list","draft":false,"unlisted":false,"editUrl":"undefined/docs/redis/metrics-data-list.mdx","tags":[],"version":"current","frontMatter":{"id":"metrics-data-list","title":"Redis metrics","description":"It guides you to the important metrics used in WhaTap Redis.","keywords":["Redis","Metrics","DATABASE","Database Monitoring"],"isTranslationMissing":false},"sidebar":"redisSidebar","previous":{"title":"Metrics","permalink":"/whatap-docs/en/redis/metrics-intro"},"next":{"title":"Metrics Chart","permalink":"/whatap-docs/en/redis/metrics-chart-v2"}}'),r=s(74848),c=s(84429),n=s(1179),i=s(56141);let l={id:"metrics-data-list",title:"Redis metrics",description:"It guides you to the important metrics used in WhaTap Redis.",keywords:["Redis","Metrics","DATABASE","Database Monitoring"],isTranslationMissing:!1},h,o={},x=[...n.RM,{value:"db_redis_counter",id:"db_redis_counter",level:2},{value:"Tags",id:"db_redis_counter-tags",level:3},{value:"Field",id:"db_redis_counter-filed",level:3},...i.RM];function j(e){let d={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",section:"section",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d.p,{children:"Database metrics comprehensively collect the database workload and resource usage. The WhaTap monitoring service continuously collects metric data to identify bottlenecks in the database and provides data to help identify the root cause of the performance issue."}),"\n",(0,r.jsxs)(d.p,{children:["For more information about other metrics, see ",(0,r.jsx)(d.a,{href:"https://redis.io/commands/info/",children:"the following"}),"."]}),"\n","\n",(0,r.jsxs)("div",{className:"metricslist",children:[(0,r.jsx)(n.Ay,{}),(0,r.jsx)(d.section,{className:"remark-sectionize-h2",children:(0,r.jsx)(d.h2,{id:"db_redis_counter",children:"db_redis_counter"})}),(0,r.jsxs)(d.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(d.h3,{id:"db_redis_counter-tags",children:"Tags"}),(0,r.jsxs)(d.p,{children:["The following lists the tags that are collected in the ",(0,r.jsx)(d.code,{children:"db_redis_counter"})," category."]}),(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Tag name"}),(0,r.jsx)(d.th,{children:"Description"}),(0,r.jsx)(d.th,{children:"Remarks"})]})}),(0,r.jsx)(d.tbody,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"oname"})}),(0,r.jsx)(d.td,{children:"Agent name"}),(0,r.jsx)(d.td,{children:"Unique value"})]})})]})]}),(0,r.jsxs)(d.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(d.h3,{id:"db_redis_counter-filed",children:"Field"}),(0,r.jsxs)(d.p,{children:["The following lists the fields that are collected in the ",(0,r.jsx)(d.code,{children:"db_redis_counter"})," category."]}),(0,r.jsx)("div",{className:"db-metric-3",children:(0,r.jsxs)(d.table,{children:[(0,r.jsx)(d.thead,{children:(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.th,{children:"Metrics"}),(0,r.jsx)(d.th,{children:"Description"}),(0,r.jsx)(d.th,{children:"Category"})]})}),(0,r.jsxs)(d.tbody,{children:[(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"active_defrag_hits"})}),(0,r.jsx)(d.td,{children:"Number of hits during active defragmentation."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"active_defrag_key_hits"})}),(0,r.jsx)(d.td,{children:"Number of keys hit in defragmentation."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"active_defrag_key_misses"})}),(0,r.jsx)(d.td,{children:"Number of keys lost in defragmentation."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"active_defrag_misses"})}),(0,r.jsx)(d.td,{children:"Number of hits lost during active defragmentation."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"active_defrag_running"})}),(0,r.jsx)(d.td,{children:"Status of current active defragmentation."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"allocator_active"})}),(0,r.jsx)(d.td,{children:"Amount of memory active in the allocator."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"allocator_allocated"})}),(0,r.jsx)(d.td,{children:"Amount of memory allocated by the allocator."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"allocator_frag_bytes"})}),(0,r.jsx)(d.td,{children:"Number of bytes of memory fragmentation that occurred in the allocator."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"allocator_frag_ratio"})}),(0,r.jsx)(d.td,{children:"Percentage of memory fragmentation that occurred in the allocator."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"allocator_resident"})}),(0,r.jsx)(d.td,{children:"Amount of memory actually being used by the allocator."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"allocator_rss_bytes"})}),(0,r.jsx)(d.td,{children:"Number of bytes of memory actually being used by the allocator."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"allocator_rss_ratio"})}),(0,r.jsx)(d.td,{children:"Percentage of RSS that occurred in the allocator."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"aof_current_rewrite_time_sec"})}),(0,r.jsx)(d.td,{children:"Time (seconds) spent to rewrite AOF."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"aof_enabled"})}),(0,r.jsxs)(d.td,{children:["Whether AOF(Append Only File) is enabled or not. It is ",(0,r.jsx)(d.code,{children:"1"})," when the ",(0,r.jsx)(d.code,{children:"appendonly"})," mode in the ",(0,r.jsx)(d.em,{children:"redis.conf"})," file is ",(0,r.jsx)(d.code,{children:"yes"}),", ",(0,r.jsx)(d.code,{children:"0"})," when the mode is ",(0,r.jsx)(d.code,{children:"no"}),". In case of ",(0,r.jsx)(d.code,{children:"yes"}),", the ",(0,r.jsx)(d.em,{children:"appendonly.aof"})," file is read when the Redis server starts, and in case of ",(0,r.jsx)(d.code,{children:"no"}),", the ",(0,r.jsx)(d.em,{children:"dump.rdb"})," file is read."]}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"aof_last_cow_size"})}),(0,r.jsx)(d.td,{children:"It is the COW (Copy On Write) size at the time of the last AOF rewrite."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"aof_last_rewrite_time_sec"})}),(0,r.jsx)(d.td,{children:"Time (seconds) spent for the last AOF rewrite."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"aof_rewrite_in_progress"})}),(0,r.jsxs)(d.td,{children:["It displays ",(0,r.jsx)(d.code,{children:"1"})," if the current AOF file is being stored in the background."]}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"aof_rewrite_scheduled"})}),(0,r.jsxs)(d.td,{children:["The value is ",(0,r.jsx)(d.code,{children:"1"})," if an AOF rewrite is scheduled. If an RDB file is being stored, it is scheduled (1) because AOF files cannot be stored at the same time. After storage is complete, an AOF rewrite starts."]}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"aof_rewrites"})}),(0,r.jsx)(d.td,{children:"Number of AOF rewrite operations performed."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"aof_rewrites_consecutive_failures"})}),(0,r.jsx)(d.td,{children:"Number of consecutively failed AOF rewrites."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"async_loading"})}),(0,r.jsx)(d.td,{children:"Whether asynchronous data loading is in progress or not."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"avg_ttl_db0"})}),(0,r.jsx)(d.td,{children:"Key's remaining time (milliseconds) in DB0."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"avg_ttl_db1"})}),(0,r.jsx)(d.td,{children:"Key's remaining time (milliseconds) in DB1."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"blocked_clients"})}),(0,r.jsxs)(d.td,{children:["Number of clients waiting by ",(0,r.jsx)(d.code,{children:"BLPOP"}),", ",(0,r.jsx)(d.code,{children:"BRPOP"}),", and ",(0,r.jsx)(d.code,{children:"BRPOPLPUSH"})," commands."]}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"client_recent_max_input_buffer"})}),(0,r.jsx)(d.td,{children:"Recent maximum input buffer size of the client."}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"client_recent_max_output_buffer"})}),(0,r.jsx)(d.td,{children:"Recent maximum output buffer size of the client."}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"clients_in_timeout_table"})}),(0,r.jsx)(d.td,{children:"Number of clients in the timeout table."}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cluster_connections"})}),(0,r.jsx)(d.td,{children:"Number of connections within the cluster."}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_auth_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the AUTH command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_auth_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed calls to the AUTH command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_auth_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the AUTH command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_auth_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the AUTH command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_auth_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per AUTH command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_client|list_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the CLIENT LIST command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_client|list_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed CLIENT LIST command calls."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_client|list_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected CLIENT LIST command calls."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_client|list_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the CLIENT LIST command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_client|list_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per CLIENT LIST command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|info_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the CLUSTER INFO command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|info_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed CLUSTER INFO command calls."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|info_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the CLUSTER INFO command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|info_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the CLUSTER INFO command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|info_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per CLUSTER INFO command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|nodes_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the CLUSTER NODES command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|nodes_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed CLUSTER NODES command calls."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|nodes_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the CLUSTER NODES command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|nodes_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the CLUSTER NODES command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_cluster|nodes_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per CLUSTER NODES command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the COMMAND command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed calls to the COMMAND command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the COMMAND command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the COMMAND command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per COMMAND command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command|docs_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the COMMAND DOCS command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command|docs_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed calls to the COMMAND DOCS command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command|docs_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the COMMAND DOCS command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command|docs_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the COMMAND DOCS command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_command|docs_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per COMMAND DOCS command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_config|get_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the CONFIG GET command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_config|get_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed CONFIG GET command calls."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_config|get_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the CONFIG GET command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_config|get_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the CONFIG GET command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_config|get_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per CONFIG GET command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_info_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the INFO command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_info_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed calls to the INFO command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_info_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the INFO command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_info_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the INFO command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_info_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per INFO command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_ping_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the PING command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_ping_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed calls to the PING command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_ping_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the PING command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_ping_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the PING command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_ping_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per PING command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_psync_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the PSYNC command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_psync_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed calls to the PSYNC command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_psync_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the PSYNC command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_psync_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the PSYNC command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_psync_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per PSYNC command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_quit_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the QUIT command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_quit_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed calls to the QUIT command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_quit_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the QUIT command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_quit_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the QUIT command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_quit_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per QUIT command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_replconf_calls"})}),(0,r.jsx)(d.td,{children:"Number of calls to the REPLCONF command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_replconf_failed_calls"})}),(0,r.jsx)(d.td,{children:"Number of failed calls to the REPLCONF command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_replconf_rejected_calls"})}),(0,r.jsx)(d.td,{children:"Number of rejected calls to the REPLCONF command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_replconf_usec"})}),(0,r.jsx)(d.td,{children:"Total microseconds taken for the REPLCONF command."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cmdstat_replconf_usec_per_call"})}),(0,r.jsx)(d.td,{children:"Average microseconds per REPLCONF command call."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"connect_error"})}),(0,r.jsx)(d.td,{children:"Number of connection errors."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"connected_clients"})}),(0,r.jsx)(d.td,{children:"Number of connected clients (excluding slave node connections)."}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"connected_slaves"})}),(0,r.jsx)(d.td,{children:"Number of connected slaves in Master mode."}),(0,r.jsx)(d.td,{children:"REPLICATION"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"cpu_cores"})}),(0,r.jsx)(d.td,{children:"Number of available CPU cores"}),(0,r.jsx)(d.td,{children:"CPU"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"current_active_defrag_time"})}),(0,r.jsx)(d.td,{children:"Time spent on current active defragmentation."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"current_cow_peak"})}),(0,r.jsx)(d.td,{children:"Current peak size of COW (Copy On Write)."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"current_cow_size"})}),(0,r.jsx)(d.td,{children:"Current size of COW (Copy On Write)."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"current_cow_size_age"})}),(0,r.jsx)(d.td,{children:"Duration of the current COW size."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"current_eviction_exceeded_time"})}),(0,r.jsx)(d.td,{children:"Time exceeded for forced memory eviction."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"current_fork_perc"})}),(0,r.jsx)(d.td,{children:"Progress (%) of the current fork operation."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"current_save_keys_processed"})}),(0,r.jsx)(d.td,{children:"Number of keys processed in the current save operation."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"current_save_keys_total"})}),(0,r.jsx)(d.td,{children:"Total number of keys to be processed in the current save operation."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"dump_payload_sanitizations"})}),(0,r.jsx)(d.td,{children:"Number of cleanup operations performed on the dump payload."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"errorstat_ERR"})}),(0,r.jsx)(d.td,{children:"Number of ERR type errors."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"errorstat_NOAUTH"})}),(0,r.jsx)(d.td,{children:"Number of NOAUTH-type errors."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"evicted_clients"})}),(0,r.jsx)(d.td,{children:"Number of clients evicted due to insufficient memory."}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"evicted_keys"})}),(0,r.jsx)(d.td,{children:"Number of keys evicted due to insufficient memory."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"expire_cycle_cpu_milliseconds"})}),(0,r.jsx)(d.td,{children:"CPU time (milliseconds) spent during the expiration cycle."}),(0,r.jsx)(d.td,{children:"CPU"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"expired_keys"})}),(0,r.jsx)(d.td,{children:"Number of keys deleted by the EXPIRE command."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"expired_stale_perc"})}),(0,r.jsx)(d.td,{children:"Percentage (%) of expired stale keys."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"expired_time_cap_reached_count"})}),(0,r.jsx)(d.td,{children:"Number of cases whose expiration time limit has been reached."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"expires_db0"})}),(0,r.jsx)(d.td,{children:"Number of keys to be expired in DB0."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"expires_db0"})}),(0,r.jsx)(d.td,{children:"Number of keys to be expired in DB1."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"fatal_count"})}),(0,r.jsx)(d.td,{children:"Number of fatal errors."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"instantaneous_input_kbps"})}),(0,r.jsx)(d.td,{children:"Instantaneous input speed (kbps)."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"instantaneous_input_repl_kbps"})}),(0,r.jsx)(d.td,{children:"Instantaneous input replication speed (kbps)."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"instantaneous_ops_per_sec"})}),(0,r.jsx)(d.td,{children:"Number of commands processed per second. You can see how many commands are being processed per second."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"instantaneous_output_kbps"})}),(0,r.jsx)(d.td,{children:"Instantaneous output speed (kbps)."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"instantaneous_output_repl_kbps"})}),(0,r.jsx)(d.td,{children:"Instantaneous output replication speed (kbps)."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"io_threaded_reads_processed"})}),(0,r.jsx)(d.td,{children:"Number of read operations processed by the I/O threads."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"io_threaded_writes_processed"})}),(0,r.jsx)(d.td,{children:"Number of write operations processed by the I/O threads."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"keys_db0"})}),(0,r.jsx)(d.td,{children:"Number of keys managed in DB0."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"keys_db1"})}),(0,r.jsx)(d.td,{children:"Number of keys managed in DB1."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"keys_total"})}),(0,r.jsxs)(d.td,{children:["Sum of ",(0,r.jsx)(d.code,{children:"keys_dbN"}),"."]}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"keyspace_hits"})}),(0,r.jsxs)(d.td,{children:["Number of keyspace hits. If a value is returned via the ",(0,r.jsx)(d.code,{children:"get key"})," command, it is increased by 1."]}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"keyspace_misses"})}),(0,r.jsxs)(d.td,{children:["Number of keyspace misses. If ",(0,r.jsx)(d.code,{children:"nil"})," is returned via the ",(0,r.jsx)(d.code,{children:"get key"})," command, it is increased by 1."]}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"latest_fork_usec"})}),(0,r.jsx)(d.td,{children:"Time (microseconds) taken for the last fork operation."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"lazyfree_pending_objects"})}),(0,r.jsx)(d.td,{children:"Number of objects for which lazyfree operations are pending."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"lazyfreed_objects"})}),(0,r.jsx)(d.td,{children:"Number of objects freed by lazyfree operations."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"loading"})}),(0,r.jsx)(d.td,{children:"Whether Redis is loading data or not."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"maxclients"})}),(0,r.jsx)(d.td,{children:"Maximum number of clients allowed."}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"maxmemory"})}),(0,r.jsx)(d.td,{children:"Maximum amount of memory that can be used by Redis."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_aof_buffer"})}),(0,r.jsx)(d.td,{children:"Amount of memory being used in the AOF buffer."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_clients_normal"})}),(0,r.jsx)(d.td,{children:"Amount of memory used by normal clients."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_clients_slaves"})}),(0,r.jsx)(d.td,{children:"Amount of memory being used by the slave clients."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_cluster_links"})}),(0,r.jsx)(d.td,{children:"Amount of memory being used by the cluster link."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_fragmentation_bytes"})}),(0,r.jsx)(d.td,{children:"Number of bytes resulting from memory fragmentation."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_fragmentation_ratio"})}),(0,r.jsxs)(d.td,{children:[(0,r.jsx)(d.code,{children:"used_memory"})," ratio and ",(0,r.jsx)(d.code,{children:"used_memory_rss"})," ratio."]}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_not_counted_for_evict"})}),(0,r.jsx)(d.td,{children:"Amount of memory not subject to forced eviction."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_replication_backlog"})}),(0,r.jsx)(d.td,{children:"Amount of memory being used by the replication backlog."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"mem_total_replication_buffers"})}),(0,r.jsx)(d.td,{children:"Amount of memory being used by the replication buffer."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"migrate_cached_sockets"})}),(0,r.jsx)(d.td,{children:"Number of migrated sockets. This is a cluster migrate related value."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"module_fork_in_progress"})}),(0,r.jsx)(d.td,{children:"Whether a module fork is in progress."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"module_fork_last_cow_size"})}),(0,r.jsx)(d.td,{children:"COW size at the time of the last module fork."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"node_state"})}),(0,r.jsx)(d.td,{children:"Current status of the Redis node."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number_of_cached_scripts"})}),(0,r.jsx)(d.td,{children:"Number of cached scripts."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number_of_functions"})}),(0,r.jsx)(d.td,{children:"Number of registered functions."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"number_of_libraries"})}),(0,r.jsx)(d.td,{children:"Number of loaded libraries."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"pubsub_channels"})}),(0,r.jsx)(d.td,{children:"Number of channels connected to active Pub/Sub channels."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"pubsub_patterns"})}),(0,r.jsx)(d.td,{children:"Number of pattern channels connected to active Pub/Sub patterns."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"pubsubshard_channels"})}),(0,r.jsx)(d.td,{children:"Number of active Pub/Sub shared channels."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rdb_bgsave_in_progress"})}),(0,r.jsxs)(d.td,{children:["It displays ",(0,r.jsx)(d.code,{children:"1"})," when a background RDB saving operation is in progress."]}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rdb_changes_since_last_save"})}),(0,r.jsx)(d.td,{children:"Number of data entries input since the last save of the RDB file."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rdb_current_bgsave_time_sec"})}),(0,r.jsx)(d.td,{children:"If any RDB file is being stored in the background, it is the time elapsed from the save start."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rdb_last_bgsave_time_sec"})}),(0,r.jsx)(d.td,{children:"Last RDB stored time in the background (seconds)."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rdb_last_cow_size"})}),(0,r.jsx)(d.td,{children:"COW size at the time of the last RDB storage."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rdb_last_load_keys_expired"})}),(0,r.jsx)(d.td,{children:"Number of expired keys upon the last RDB load."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rdb_last_load_keys_loaded"})}),(0,r.jsx)(d.td,{children:"Number of loaded keys upon the last RDB load."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rdb_last_save_time"})}),(0,r.jsx)(d.td,{children:"Last RDB saved time."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rdb_saves"})}),(0,r.jsx)(d.td,{children:"Number of RDB save operations executed."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rejected_connections"})}),(0,r.jsxs)(d.td,{children:["Number of connections rejected by the limit of ",(0,r.jsx)(d.code,{children:"maxclients"}),"."]}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"reply_buffer_expands"})}),(0,r.jsx)(d.td,{children:"Number of cases the reply buffer has been expanded."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"reply_buffer_shrinks"})}),(0,r.jsx)(d.td,{children:"Number of cases the reply buffer has been reduced."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"repl_backlog_active"})}),(0,r.jsxs)(d.td,{children:["For the master, it is ",(0,r.jsx)(d.code,{children:"1"})," and for the slave, it is ",(0,r.jsx)(d.code,{children:"0"}),"."]}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"repl_backlog_size"})}),(0,r.jsxs)(d.td,{children:["It is the ",(0,r.jsx)(d.code,{children:"repl-backlog-size"})," setting in the ",(0,r.jsx)(d.em,{children:"redis.conf"})," file. When the connection with the slave is disconnected, the input data is saved in the backlog-buffer, and when reconnected, the data in the backlog-buffer is sent to the slave for synchronization without sending and receiving the entire data again."]}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rss_overhead_bytes"})}),(0,r.jsx)(d.td,{children:"RSS overhead bytes."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"rss_overhead_ratio"})}),(0,r.jsx)(d.td,{children:"RSS overhead ratio."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"slave_expires_tracked_keys"})}),(0,r.jsx)(d.td,{children:"Number of tracked keys that have expired in the slave."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"sync_full"})}),(0,r.jsx)(d.td,{children:"Number of cases slave nodes are fully synchronized in master node."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"sync_partial_err"})}),(0,r.jsx)(d.td,{children:"Number of partial synchronization errors with slave nodes in master node."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"sync_partial_ok"})}),(0,r.jsx)(d.td,{children:"Number of successful partial synchronizations with slave nodes in master node."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_active_defrag_time"})}),(0,r.jsx)(d.td,{children:"Total time for active defragmentation operations."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_commands_processed"})}),(0,r.jsx)(d.td,{children:"Total number of commands processed after a server startup (for both storage and inquiries)."}),(0,r.jsx)(d.td,{children:"Commandstats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_connections_received"})}),(0,r.jsx)(d.td,{children:"Total number of connections received after server startup."}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_error_replies"})}),(0,r.jsx)(d.td,{children:"Total number of error responses."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_eviction_exceeded_time"})}),(0,r.jsx)(d.td,{children:"Total time exceeded for forced memory eviction."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_forks"})}),(0,r.jsx)(d.td,{children:"Total number of fork operations processed."}),(0,r.jsx)(d.td,{children:"Persistence"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_net_input_bytes"})}),(0,r.jsx)(d.td,{children:"Total network bytes received."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_net_output_bytes"})}),(0,r.jsx)(d.td,{children:"Total network bytes transmitted."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_net_repl_input_bytes"})}),(0,r.jsx)(d.td,{children:"Total replication network bytes received."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_net_repl_output_bytes"})}),(0,r.jsx)(d.td,{children:"Total replication network bytes transmitted."}),(0,r.jsx)(d.td,{children:"Replication"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_reads_processed"})}),(0,r.jsx)(d.td,{children:"Total number of read operations processed."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_system_memory"})}),(0,r.jsx)(d.td,{children:"Total available system memory."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"total_writes_processed"})}),(0,r.jsx)(d.td,{children:"Total number of write operations processed."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"tracking_clients"})}),(0,r.jsx)(d.td,{children:"Number of clients using tracking."}),(0,r.jsx)(d.td,{children:"Clients"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"tracking_total_items"})}),(0,r.jsx)(d.td,{children:"Total number of tracked items."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"tracking_total_keys"})}),(0,r.jsx)(d.td,{children:"Total number of tracked keys."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"tracking_total_prefixes"})}),(0,r.jsx)(d.td,{children:"Total number of tracked prefixes."}),(0,r.jsx)(d.td,{children:"Keyspace"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"unexpected_error_replies"})}),(0,r.jsx)(d.td,{children:"Number of unexpected error responses."}),(0,r.jsx)(d.td,{children:"Stats"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_cpu"})}),(0,r.jsxs)(d.td,{children:["Total CPU time used by the Redis server (",(0,r.jsx)(d.code,{children:"used_cpu_sys"})," + ",(0,r.jsx)(d.code,{children:"used_cpu_user"}),")."]}),(0,r.jsx)(d.td,{children:"CPU"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_cpu_children"})}),(0,r.jsx)(d.td,{children:"Total CPU time used by child processes."}),(0,r.jsx)(d.td,{children:"CPU"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_cpu_sys"})}),(0,r.jsx)(d.td,{children:"Total CPU time used in system mode."}),(0,r.jsx)(d.td,{children:"CPU"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_cpu_sys_children"})}),(0,r.jsx)(d.td,{children:"CPU time used by child processes in system mode when storing RDB/AOF files."}),(0,r.jsx)(d.td,{children:"CPU"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_cpu_user"})}),(0,r.jsx)(d.td,{children:"Total CPU time used in user mode."}),(0,r.jsx)(d.td,{children:"CPU"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_cpu_user_children"})}),(0,r.jsx)(d.td,{children:"CPU time used by child processes in user mode when storing RDB/AOF files."}),(0,r.jsx)(d.td,{children:"CPU"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory"})}),(0,r.jsx)(d.td,{children:"Total amount of memory (bytes) being used by the Redis server."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_dataset"})}),(0,r.jsx)(d.td,{children:"Amount of memory (bytes) being used by the dataset."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_dataset_perc"})}),(0,r.jsx)(d.td,{children:"Percentage (%) of memory being used by the dataset."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_functions"})}),(0,r.jsx)(d.td,{children:"Amount of memory (bytes) being used by functions."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_lua"})}),(0,r.jsx)(d.td,{children:"Amount of memory (bytes) being used by the Lua script."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_overhead"})}),(0,r.jsx)(d.td,{children:"Amount of memory (bytes) being used by the overhead."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_peak"})}),(0,r.jsx)(d.td,{children:"Maximum amount of memory (bytes) used by the Redis server."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_peak_perc"})}),(0,r.jsx)(d.td,{children:"Peak percentage (%) of memory used"}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_rss"})}),(0,r.jsx)(d.td,{children:"Resident Set Size. It is the total physical memory (RAM) occupied by processes."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_scripts"})}),(0,r.jsx)(d.td,{children:"Amount of memory being used by scripts."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_scripts_eval"})}),(0,r.jsx)(d.td,{children:"Amount of memory being used by evaluated scripts."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_startup"})}),(0,r.jsx)(d.td,{children:"Amount of memory that the Redis server used during startup."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_vm_eval"})}),(0,r.jsx)(d.td,{children:"Amount of memory being used by scripts evaluated in virtual memory."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_vm_functions"})}),(0,r.jsx)(d.td,{children:"Amount of memory being used by functions in virtual memory."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"used_memory_vm_total"})}),(0,r.jsx)(d.td,{children:"Total amount of memory being used in virtual memory."}),(0,r.jsx)(d.td,{children:"Memory"})]}),(0,r.jsxs)(d.tr,{children:[(0,r.jsx)(d.td,{children:(0,r.jsx)(d.code,{children:"warning_count"})}),(0,r.jsx)(d.td,{children:"Number of warnings."}),(0,r.jsx)(d.td,{children:"Stats"})]})]})]})}),(0,r.jsx)(i.Ay,{})]})]})]})}function a(e={}){let{wrapper:d}={...(0,c.R)(),...e.components};return d?(0,r.jsx)(d,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}},84429:function(e,d,s){s.d(d,{R:()=>n,x:()=>i});var t=s(96540);let r={},c=t.createContext(r);function n(e){let d=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(d):{...d,...e}},[d,e])}function i(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),t.createElement(c.Provider,{value:d},e.children)}}}]);