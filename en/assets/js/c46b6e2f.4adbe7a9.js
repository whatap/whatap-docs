"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["76462"],{82619:function(e,n,s){s.r(n),s.d(n,{metadata:()=>t,default:()=>h,frontMatter:()=>r,contentTitle:()=>a,toc:()=>o,assets:()=>c});var t=JSON.parse('{"id":"openmetrics/install","title":"OpenMetrics Installation","description":"OpenMetrics installation guide.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/openmetrics/install.mdx","sourceDirName":"openmetrics","slug":"/openmetrics/install","permalink":"/whatap-docs/en/openmetrics/install","draft":false,"unlisted":false,"editUrl":"undefined/docs/openmetrics/install.mdx","tags":[],"version":"current","frontMatter":{"id":"install","title":"OpenMetrics Installation","description":"OpenMetrics installation guide.","toc_max_heading_level":4,"keywords":["OpenMetrics installation"],"isTranslationMissing":false},"sidebar":"omSidebar","previous":{"title":"OpenMetrics","permalink":"/whatap-docs/en/openmetrics/introduction"}}'),l=s(74848),i=s(84429);let r={id:"install",title:"OpenMetrics Installation",description:"OpenMetrics installation guide.",toc_max_heading_level:4,keywords:["OpenMetrics installation"],isTranslationMissing:!1},a,c={},o=[{value:"OpenAgent Binary Execution File Installation",id:"openagent-binary-execution-file-installation",level:2},{value:"StaticEndpoints Configuration Elements",id:"staticendpoints-configuration-elements",level:3},{value:"Params Feature Configuration",id:"params-feature-configuration",level:3},{value:"Example",id:"example",level:3},{value:"Metric Relabeling Configuration (metricRelabelConfigs)",id:"metric-relabeling-configuration-metricrelabelconfigs",level:2},{value:"Relabeling Configuration Items",id:"relabeling-configuration-items",level:3},{value:"Supported Action Types",id:"supported-action-types",level:3},{value:"Special Labels",id:"special-labels",level:3},{value:"Example 1. Collect All Metrics",id:"example-1-collect-all-metrics",level:3},{value:"Example 2. Keep Only Specific Metric",id:"example-2-keep-only-specific-metric",level:3},{value:"Example 3. Filter metrics using regex",id:"example-3-filter-metrics-using-regex",level:3},{value:"Example 4. Rename a label",id:"example-4-rename-a-label",level:3},{value:"Example 5. Combine multiple source labels",id:"example-5-combine-multiple-source-labels",level:3},{value:"Example 6. Add a static label",id:"example-6-add-a-static-label",level:3},{value:"Example. Comprehensive operation",id:"example-comprehensive-operation",level:3}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.admonition,{type:"note",children:(0,l.jsxs)(n.p,{children:["For installation in a Kubernetes environment, refer to the ",(0,l.jsx)(n.a,{href:"https://docs.whatap.io/kubernetes/openagent",children:"OpenAgent Configuration"})," documentation."]})}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,l.jsx)(n.h2,{id:"openagent-binary-execution-file-installation",children:"OpenAgent Binary Execution File Installation"}),(0,l.jsx)(n.p,{children:"All files must be located in a single directory."}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"## Example\n/opt/whatap/openagent/\n\u251C\u2500\u2500 openagent          # Executable file\n\u251C\u2500\u2500 whatap.conf        # Configuration file\n\u2514\u2500\u2500 scrape_config.yaml # Scraping configuration file\n"})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Move to directory and download executable file"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"mkdir -p /opt/whatap/openagent\ncd /opt/whatap/openagent\n\n## AMD64 (Intel/AMD 64-bit processors)\nwget https://repo.whatap.io/openagent/latest/amd/openagent\n\n## ARM64 (ARM processors in Linux environments)\n## \u26A0\uFE0F Not supported on macOS Apple Silicon\nwget https://repo.whatap.io/openagent/latest/arm/openagent\n"})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Set execution permission"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"chmod +x openagent\n"})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Create configuration file (whatap.conf)"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'# Replace with actual values\necho "WHATAP_LICENSE=your-whatap-license" >> whatap.conf\necho "WHATAP_HOST=your-whatap-host" >> whatap.conf  \necho "WHATAP_PORT=your-whatap-port" >> whatap.conf\n\n# For debugging\n# echo "debug=true" >> whatap.conf\n# echo "log_level=debug" >> whatap.conf\n'})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Create scraping configuration file(scrape_config.yaml)"})}),(0,l.jsxs)(n.p,{children:["When the ",(0,l.jsx)(n.code,{children:"scrape_config.yaml"})," file is modified, OpenAgent automatically detects the changes and reloads the settings. No restart is required."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'#scrape_config.yaml\nfeatures:\n  openAgent:\n    enabled: true\n    targets:\n     - targetName: dcgm-exporter\n       type: StaticEndpoints\n       # Target is enabled by default (enabled: true), this can be omitted\n       enabled: true\n       endpoints:\n         - address: "192.168.49.2:30400"\n           path: "/metrics"\n           scheme: "http"\n           interval: "30s"\n           metricRelabelConfigs:\n             - source_labels: [ __name__ ]\n               regex: "DCGM.*"\n               action: keep\n'})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Basic execution"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"./openagent standalone\n"})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Run in background"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:"nohup ./openagent standalone > openagent.log 2>&1 &\n"})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Check logs"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"tail -f openagent.log\n"})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Process management"})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"# Check process\nps aux | grep openagent\n\n# Terminate process\npkill openagent\n"})})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"staticendpoints-configuration-elements",children:"StaticEndpoints Configuration Elements"}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"targetName"}),": Target identifier"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"type"}),': Target type ("StaticEndpoints")']}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"endpoints"}),": Collection targets"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"address"}),": IP",":PORT"," or HOSTNAME",":PORT"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"path"}),": Metrics path (default: /metrics)"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"scheme"}),": protocol (http or https, default: http)"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"interval"}),": Collection interval (\uAE30\uBCF8\uAC12: 60s)"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"metricRelabelConfigs"}),": Metric relabeling settings"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"params-feature-configuration",children:"Params Feature Configuration"}),(0,l.jsx)(n.p,{children:"By using the params feature in OpenAgent, you can add query parameters to the URL during HTTP scraping. This is useful for integration with external services such as Azure Monitor Exporter."}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'endpoints:\n  - address: "192.168.49.2:30400"\n    path: "/metrics"\n    scheme: "http"\n    interval: "30s"\n    params:\n      subscription: ["50d91b57-a280-45b5-8d7c-be8005662738"]\n      resourceGroup: ["WhaTap-Data-KR-MID"]\n      target: ["/subscriptions/50d91b57-a280-45b5-8d7c-be8005662738/resourceGroups/WhaTap-Data-KR-MID/providers/Microsoft.Sql/managedInstances/openmetrics-instance-01"]\n      metric: ["avg_cpu_percent,virtual_core_count,memory_usage_percent"]\n      interval: ["PT1M"]\n      aggregation: ["average"]\n'})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Supported parameter value types"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"String"}),": Single value"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"String array"}),": Multiple values joined with commas"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.strong,{children:"Other types"}),": Automatically converted to string"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"example",children:"Example"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="Example. Azure Monitor style"',children:'params:\n  subscription: ["50d91b57-a280-45b5-8d7c-be8005662738"]\n  target: ["/subscriptions/50d91b57-a280-45b5-8d7c-be8005662738/resourceGroups/MyRG/providers/Microsoft.Compute/virtualMachines/vm1"]\n  metric: ["Percentage CPU,Available Memory Bytes"]\n  interval: ["PT5M"]\n  aggregation: ["average,maximum"]\n'})}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",metastring:'title="Example. Simple Parameters',children:'params:\n  format: "prometheus"\n  version: "v1"\n  debug: true\n'})})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,l.jsx)(n.h2,{id:"metric-relabeling-configuration-metricrelabelconfigs",children:"Metric Relabeling Configuration (metricRelabelConfigs)"}),(0,l.jsxs)(n.p,{children:["OpenAgent provides a metric relabeling feature similar to Prometheus ",(0,l.jsx)(n.code,{children:"metric_relabel_configs"}),", allowing you to filter or modify metrics after scraping."]})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"relabeling-configuration-items",children:"Relabeling Configuration Items"}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"source_labels"}),": List of source labels (array)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"separator"}),": Separator used when concatenating source label values (default:\xa0",(0,l.jsx)(n.code,{children:";"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"target_label"}),": Destination label (label where result is stored)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"regex"}),": Regex applied to source label values"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"replacement"}),": Replacement value (can reference regex capture groups, e.g\xa0",(0,l.jsx)(n.code,{children:"${1}"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"action"}),": Action to perform (keep, drop, replace)"]}),"\n"]})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"supported-action-types",children:"Supported Action Types"}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"keep"}),": Keep only metrics that match regex"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"drop"}),": Drop metrics that match regex"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"replace"}),": Replace target label value with replacement"]}),"\n"]})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"special-labels",children:"Special Labels"}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"name"}),": Special label representing the metric name"]}),"\n"]})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"example-1-collect-all-metrics",children:"Example 1. Collect All Metrics"}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - source_labels: [__name__]\n    regex: ".*"\n    action: keep\n'})})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"example-2-keep-only-specific-metric",children:"Example 2. Keep Only Specific Metric"}),(0,l.jsxs)(n.p,{children:["This configuration keeps only the ",(0,l.jsx)(n.code,{children:"http_requests_total"})," metric and removes all others."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - source_labels: [__name__]\n    regex: "http_requests_total"\n    action: keep\n'})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Execution example"})}),(0,l.jsx)(n.p,{children:"Assume the following metrics were collected."}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'http_requests_total{method="GET", status="200"} 100\nhttp_errors_total{method="GET", status="500"} 5\nnode_cpu_seconds_total{cpu="0", mode="idle"} 1000\n'})}),(0,l.jsxs)(n.p,{children:["After applying the metricRelabelConfigs above, only the ",(0,l.jsx)(n.code,{children:"http_requests_total"})," metric is kept and all other metrics are removed."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'http_requests_total{method="GET", status="200"} 100\n'})})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"example-3-filter-metrics-using-regex",children:"Example 3. Filter metrics using regex"}),(0,l.jsxs)(n.p,{children:["This configuration keeps only metrics that start with ",(0,l.jsx)(n.code,{children:"node_cpu"})," or ",(0,l.jsx)(n.code,{children:"node_memory"}),"."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - source_labels: [__name__]\n    regex: "node_(cpu|memory).*"\n    action: keep\n'})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Execution example"})}),(0,l.jsx)(n.p,{children:"Assume the following metrics were collected."}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'node_cpu_seconds_total{cpu="0", mode="idle"} 1000\nnode_memory_MemTotal_bytes{} 16777216\nnode_disk_io_time_seconds_total{device="sda"} 100\nhttp_requests_total{method="GET", status="200"} 100\n'})}),(0,l.jsxs)(n.p,{children:["After applying the metricRelabelConfigs above, only metrics that start with ",(0,l.jsx)(n.code,{children:"node_cpu"})," or ",(0,l.jsx)(n.code,{children:"node_memory"})," are kept and the others are removed. You can use a regex to filter multiple metric patterns at once."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'node_cpu_seconds_total{cpu="0", mode="idle"} 1000\nnode_memory_MemTotal_bytes{} 16777216\n'})})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"example-4-rename-a-label",children:"Example 4. Rename a label"}),(0,l.jsxs)(n.p,{children:["This configuration copies the value of the ",(0,l.jsx)(n.code,{children:"method"})," label to a new label named ",(0,l.jsx)(n.code,{children:"http_method"}),"."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - source_labels: [method]\n    target_label: http_method\n    replacement: "${1}"\n    action: replace\n'})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Execution example"})}),(0,l.jsx)(n.p,{children:"Assume the following metrics were collected."}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200"} 100\nhttp_requests_total{method="POST", path="/api/users", status="201"} 50\n'})}),(0,l.jsxs)(n.p,{children:["After applying the metricRelabelConfigs above, each metric gets a new ",(0,l.jsx)(n.code,{children:"http_method"})," label that copies the value from the ",(0,l.jsx)(n.code,{children:"method"})," label. The original label remains and the new label is added. ",(0,l.jsx)(n.code,{children:"${1}"})," references the value of the source label."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200", http_method="GET"} 100\nhttp_requests_total{method="POST", path="/api/users", status="201", http_method="POST"} 50\n'})})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"example-5-combine-multiple-source-labels",children:"Example 5. Combine multiple source labels"}),(0,l.jsxs)(n.p,{children:["This configuration keeps only ",(0,l.jsx)(n.code,{children:"http_requests_total"})," metrics where the ",(0,l.jsx)(n.code,{children:"status"})," label is ",(0,l.jsx)(n.code,{children:"200"})," or ",(0,l.jsx)(n.code,{children:"500"}),"."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - source_labels: [__name__, status]\n    regex: "http_requests_total;(200|500)"\n    action: keep\n'})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Execution example"})}),(0,l.jsx)(n.p,{children:"Assume the following metrics were collected."}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200"} 100\nhttp_requests_total{method="POST", path="/api/users", status="201"} 50\nhttp_requests_total{method="GET", path="/api/error", status="500"} 10\nhttp_requests_total{method="GET", path="/api/error", status="404"} 5\n'})}),(0,l.jsxs)(n.p,{children:["After applying the metricRelabelConfigs above, only ",(0,l.jsx)(n.code,{children:"http_requests_total"})," metrics with a ",(0,l.jsx)(n.code,{children:"status"})," label of ",(0,l.jsx)(n.code,{children:"200"})," or ",(0,l.jsx)(n.code,{children:"500"})," are kept. When combining multiple source labels, they are concatenated with the default separator ",(0,l.jsx)(n.code,{children:";"}),". You can change this with the ",(0,l.jsx)(n.code,{children:"separator"})," field."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200"} 100\nhttp_requests_total{method="GET", path="/api/error", status="500"} 10\n'})})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"example-6-add-a-static-label",children:"Example 6. Add a static label"}),(0,l.jsxs)(n.p,{children:["This configuration adds the label ",(0,l.jsx)(n.code,{children:'metric_src="whatap-open-agent"'})," to all metrics. If you do not specify source labels, the ",(0,l.jsx)(n.code,{children:"replacement"})," value is used directly as the label value. You can use this approach to add static labels such as environment, region, or application name to all metrics."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-yaml",children:'metricRelabelConfigs:\n  - target_label: metric_src\n    replacement: "whatap-open-agent"\n    action: replace\n'})}),(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Execution example"})}),(0,l.jsx)(n.p,{children:"Assume the following metrics were collected."}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200"} 100\nnode_cpu_seconds_total{cpu="0", mode="idle"} 1000\n'})}),(0,l.jsxs)(n.p,{children:["After applying the metricRelabelConfigs above, all metrics include the label ",(0,l.jsx)(n.code,{children:'metric_src="whatap-open-agent"'}),". This is useful to indicate metric source, environment (for example, production, staging), region (for example, us-east, eu-west), or application name."]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'http_requests_total{method="GET", path="/api", status="200", metric_src="whatap-open-agent"} 100\nnode_cpu_seconds_total{cpu="0", mode="idle", metric_src="whatap-open-agent"} 1000\n'})})]}),"\n",(0,l.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,l.jsx)(n.h3,{id:"example-comprehensive-operation",children:"Example. Comprehensive operation"}),(0,l.jsx)(n.p,{children:"Assume the following metrics were collected."}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'apiserver_request_total{code="200", resource="pods", verb="GET"} 100\nsome_other_metric{label="value"} 50\n'})}),(0,l.jsx)(n.p,{children:"After applying the metricRelabelConfigs above, the final collected metrics are as follows."}),(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Apply the first rule (",(0,l.jsx)(n.code,{children:"keep apiserver_request_total"}),"):"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"apiserver_request_total"})," metric is kept."]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"some_other_metric"})," metric is dropped."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Apply the second rule (",(0,l.jsx)(n.code,{children:"replace verb"})," \u2192 ",(0,l.jsx)(n.code,{children:"http_verb"}),") :"]}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["The kept ",(0,l.jsx)(n.code,{children:"apiserver_request_total"})," metric has a verb label, so its value (GET) is copied to a new label named ",(0,l.jsx)(n.code,{children:"http_verb"}),"."]}),"\n"]}),"\n"]}),"\n"]}),(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'apiserver_request_total{code="200", resource="pods", verb="GET", http_verb="GET"} 100\n'})})]})]})}function h(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},84429:function(e,n,s){s.d(n,{R:()=>r,x:()=>a});var t=s(96540);let l={},i=t.createContext(l);function r(e){let n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);