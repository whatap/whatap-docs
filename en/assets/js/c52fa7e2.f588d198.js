"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["53511"],{58154:function(e,n,t){t.d(n,{Ay:()=>i,RM:()=>a});var l=t(74848),o=t(84429);let a=[];function r(e){let n={a:"a",admonition:"admonition",p:"p",...(0,o.R)(),...e.components};return(0,l.jsx)(n.admonition,{type:"caution",children:(0,l.jsxs)(n.p,{children:["OpenTelemetry monitoring is a Beta version so unexpected errors may occur. It is not recommended for using it for sensitive data or in the operation environment. If you have any feedback or issues, feel free to contact the support team at ",(0,l.jsx)(n.a,{href:"mailto:support@whatap.io",children:"support@whatap.io"}),"."]})})}function i(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(r,{...e})}):r(e)}},57988:function(e,n,t){t.r(n),t.d(n,{metadata:()=>l,default:()=>d,frontMatter:()=>i,contentTitle:()=>s,toc:()=>h,assets:()=>c});var l=JSON.parse('{"id":"opentelemetry/install-agent","title":"Install Agent","description":"Step-by-step guide on how to download, install, and configure the OpenTelemetry agent. Learn how to integrate the agent with the OpenTelemetry Collector, Docker, and Kubernetes to start monitoring with WhaTap.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/opentelemetry/install-agent.mdx","sourceDirName":"opentelemetry","slug":"/opentelemetry/install-agent","permalink":"/whatap-docs/en/opentelemetry/install-agent","draft":false,"unlisted":false,"editUrl":"undefined/docs/opentelemetry/install-agent.mdx","tags":[],"version":"current","frontMatter":{"id":"install-agent","title":"Install Agent","description":"Step-by-step guide on how to download, install, and configure the OpenTelemetry agent. Learn how to integrate the agent with the OpenTelemetry Collector, Docker, and Kubernetes to start monitoring with WhaTap.","keywords":["OpenTelemetry","OpenTelemetry Agent","OpenTelemetry Installation","OpenTelemetry Collector","OpenTelemetry Download","OpenTelemetry Configuration","OpenTelemetry Kubernetes","OpenTelemetry Docker","Whatap OpenTelemetry","WhaTap Monitoring","OpenTelemetry Setup","OpenTelemetry Integration"],"isTranslationMissing":false},"sidebar":"pluginSidebar","previous":{"title":"Introduction to OpenTelemetry","permalink":"/whatap-docs/en/opentelemetry/introduction"},"next":{"title":"Agent Configuration","permalink":"/whatap-docs/en/opentelemetry/set-agent"}}'),o=t(74848),a=t(84429),r=t(58154);let i={id:"install-agent",title:"Install Agent",description:"Step-by-step guide on how to download, install, and configure the OpenTelemetry agent. Learn how to integrate the agent with the OpenTelemetry Collector, Docker, and Kubernetes to start monitoring with WhaTap.",keywords:["OpenTelemetry","OpenTelemetry Agent","OpenTelemetry Installation","OpenTelemetry Collector","OpenTelemetry Download","OpenTelemetry Configuration","OpenTelemetry Kubernetes","OpenTelemetry Docker","Whatap OpenTelemetry","WhaTap Monitoring","OpenTelemetry Setup","OpenTelemetry Integration"],isTranslationMissing:!1},s,c={},h=[...r.RM,{value:"Download agent",id:"download-agent",level:2},{value:"Default agent settings",id:"default-agent-settings",level:2},{value:"Configuring the whatap.conf file",id:"configuring-the-whatapconf-file",level:3},{value:"Configuring with environment variables",id:"configuring-with-environment-variables",level:3},{value:"Docker installation",id:"docker-installation",level:2},{value:"Kubernetes installation",id:"kubernetes-installation",level:2},{value:"Configuring the Opentelemetry Collector",id:"configuring-the-opentelemetry-collector",level:2},{value:"Other platforms",id:"other-platforms",level:2},{value:"Tyk Gateway",id:"tyk-gateway",level:3},{value:"Kong Gateway",id:"kong-gateway",level:3},{value:"Starting the monitoring",id:"starting-the-monitoring",level:2}];function p(e){let n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Cmdname:t,TabItem:l,Tabs:i}=n;return t||g("Cmdname",!0),l||g("TabItem",!0),i||g("Tabs",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.Ay,{}),"\n",(0,o.jsx)(n.p,{children:"It guides you how to install the OpenTelemetry agent."}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,o.jsx)(n.h2,{id:"download-agent",children:"Download agent"}),(0,o.jsx)(n.p,{children:"Execute the following command to download the agent to the instance where the OpenTelemetry Collector has been installed."}),(0,o.jsxs)(i,{groupId:"os",children:[(0,o.jsx)(l,{value:"rc",label:"Red Hat/Centos",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Register package repository\n$ sudo rpm -Uvh https://repo.whatap.io/centos/5/noarch/whatap-repo-1.0-1.noarch.rpm\n\n# Install package\n$ sudo yum install whatap-otel\n"})})}),(0,o.jsx)(l,{value:"du",label:"Debian/Ubuntu",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Register package repository\n$ wget https://repo.whatap.io/debian/release.gpg -O -|sudo apt-key add -\n$ wget https://repo.whatap.io/debian/whatap-repo_1.0_all.deb\n$ sudo dpkg -i whatap-repo_1.0_all.deb\n$ sudo apt-get update\n\n# Install package\n$ sudo apt-get install whatap-otel\n"})})}),(0,o.jsx)(l,{value:"al",label:"Amazon Linux",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Register package repository\n$ sudo rpm --import https://repo.whatap.io/centos/release.gpg\n$ echo "[whatap]" | sudo tee /etc/yum.repos.d/whatap.repo > /dev/null\n$ echo "name=whatap packages for enterprise linux" | sudo tee -a /etc/yum.repos.d/whatap.repo > /dev/null\n$ echo "baseurl=https://repo.whatap.io/centos/latest/\\$basearch" | sudo tee -a /etc/yum.repos.d/whatap.repo > /dev/null\n$ echo "enabled=1" | sudo tee -a /etc/yum.repos.d/whatap.repo > /dev/null\n$ echo "gpgcheck=0" | sudo tee -a /etc/yum.repos.d/whatap.repo > /dev/null\n\n# Install package\n$ sudo yum install whatap-otel\n'})})}),(0,o.jsx)(l,{value:"apl",label:"Alpine Linux",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"$ wget https://s3.ap-northeast-2.amazonaws.com/repo.whatap.io/alpine/x86_64/whatap-otel.tar.gz\n$ tar -xvzf whatap-otel.tar.gz -C /\n"})})}),(0,o.jsx)(l,{value:"apldocker",label:"Alpine Linux Docker",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",metastring:'title="FROM alpine"',children:"FROM alpine\n\nRUN apk update && apk upgrade\n# Install WhaTap Go monitoring agent\nRUN wget https://s3.ap-northeast-2.amazonaws.com/repo.whatap.io/alpine/x86_64/whatap-otel.tar.gz\nRUN tar -xvzf whatap-otel.tar.gz -C /\n"})})})]})]}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,o.jsx)(n.h2,{id:"default-agent-settings",children:"Default agent settings"}),(0,o.jsxs)(n.p,{children:["To configure the agent, the WhaTap project's access key and collection server IP address are required. In ",(0,o.jsx)(n.a,{href:"https://service.whatap.io",children:"WhaTap monitoring service"}),", move to the project for the application product. In ",(0,o.jsx)(t,{sid:"management",className:"uitext"})," > ",(0,o.jsx)(t,{sid:"agentInstall",className:"uitext"}),", check the access key and collection server IP address for preparation."]})]}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,o.jsx)(n.h3,{id:"configuring-the-whatapconf-file",children:"Configuring the whatap.conf file"}),(0,o.jsxs)(n.p,{children:["Set the access key and collection server IP address in the agent configuration (",(0,o.jsx)(n.em,{children:"whatap.conf"}),") file."]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'echo "accesskey={ACCESS_KEY}" >> /usr/whatap/otel/whatap.conf \necho "whatap.server.host={COLLECTOR_SERVER_IP_ADDRESS}" >> /usr/whatap/otel/whatap.conf \n'})})]}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,o.jsx)(n.h3,{id:"configuring-with-environment-variables",children:"Configuring with environment variables"}),(0,o.jsx)(n.p,{children:"You can set the access key and collection server IP address as environment variables."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"WHATAP_ACCESSKEY={ACCESS_KEY}\nWHATAP_SERVER_HOST={COLLECTOR_SERVER_IP_ADDRESS}\nWHATAP_OTEL_GRPC_SERVER_PORT={gRPC_SERVER_LISTENING_PORT}\n"})}),(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["If both environment variables and the ",(0,o.jsx)(n.em,{children:"whatap.conf"})," file have been configured, the settings in the ",(0,o.jsx)(n.em,{children:"whatap.conf"})," file take precedence."]})})]}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,o.jsx)(n.h2,{id:"docker-installation",children:"Docker installation"}),(0,o.jsx)(n.p,{children:"If you have the Opentelemetry Collector installed, you can run whatap-otel with a Docker container to receive data from the collector to the GRPC 6600 port."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-Docker",children:"docker pull whatap/whatap-otel\n"})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yaml"',children:"version: '3.7'\n\nservices:\n  whatap_otel:\n    image: whatap/whatap-otel:latest\n\n    environment:\n      WHATAP_ACCESSKEY: x605111111111-z11111111-x1111111111m\n      WHATAP_SERVER_HOST: 1.1.1.1/2.2.2.2\n      WHATAP_OTEL_GRPC_SERVER_PORT: 6600\n      otel_metric_server_enabled: true\n      otel_log_server_enabled: true\n      log_stdout_enabled: true\n      #debug_otel_grpc_server_enabled: true\n    \n    ports:\n      - 6600:6600\n"})})]}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,o.jsx)(n.h2,{id:"kubernetes-installation",children:"Kubernetes installation"}),(0,o.jsx)(n.p,{children:"The following is a deployment example that creates the OpenTelemetry Collector and whatap-otel together in a single Pod."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="otelcol-whatap-deploy.yaml"',children:'metadata:\n  name: otel-collector-deploy\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: otel-collector\n  template:\n    metadata:\n      name: otel-collector-pod\n      labels:\n        app: otel-collector\n    spec:\n      containers:\n        - name: otel-collector\n          image: otel/opentelemetry-collector-contrib:0.106.0\n          ports:\n            - containerPort: 4317 # OTLP gRPC\n            - containerPort: 4318 # OTLP HTTP\n          volumeMounts:\n            - name: config-volume-otelcol\n              mountPath: /etc/otel/config.yaml\n              subPath: otel-collector-config.yaml\n          args: ["--config", "/etc/otel/config.yaml"]\n        - name: whatap-otel-agent\n          image: whatap/whatap-otel:latest\n          ports:\n          - containerPort: 6600\n          env:\n          - name: "WHATAP_ACCESSKEY"\n            value: "x605111111111-z11111111-x1111111111m"\n          - name: "WHATAP_SERVER_HOST"\n            value: "1.1.1.1/2.2.2.2"\n          - name: "otel_metric_server_enabled"\n            value: "true"\n          - name: "otel_log_server_enabled"\n            value: "true"\n          - name: "log_stdout_enabled"\n            value: "true"\n          - name: NODE_IP\n            valueFrom: {fieldRef: {fieldPath: status.hostIP}}\n          - name: NODE_NAME\n            valueFrom: {fieldRef: {fieldPath: spec.nodeName}}\n          - name: POD_NAME\n            valueFrom: {fieldRef: {fieldPath: metadata.name}}\n          - name: whatap.micro.enabled\n            value: "true"\n      volumes:\n        - name: config-volume-otelcol\n          configMap:\n            name: otelcol-config\n'})}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="otelcol-whatap-deploy.yaml"',children:'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: otelcol-config\ndata:\n  otel-collector-config.yaml: |\n    receivers:\n      otlp:\n        protocols:\n          grpc:\n            endpoint: 0.0.0.0:4317\n          http:\n            endpoint: 0.0.0.0:4318\n    exporters:\n      otlp:\n        endpoint: "127.0.0.1:6600"\n        tls:\n          insecure: true\n      logging:\n        loglevel: debug\n    processors:\n      batch:\n    service:\n      pipelines:\n        traces:\n          receivers: [otlp]\n          processors: [batch]\n          exporters: [otlp, logging]\n        metrics:\n          receivers: [otlp]\n          processors: [batch]\n          exporters: [otlp, logging]\n        logs:\n          receivers: [otlp]\n          processors: [batch]\n          exporters: [otlp, logging]\n'})})]}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,o.jsx)(n.h2,{id:"configuring-the-opentelemetry-collector",children:"Configuring the Opentelemetry Collector"}),(0,o.jsx)(n.p,{children:"Configure the OTLP Exporter to forward data to whatap-otel."}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",metastring:'title="otel-collector-config.yaml" showLineNumbers{13,14-15}',children:"receivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\nprocessors:\n  batch:\n\nexporters:\n  logging:\n  # otlp exporter\uC5D0 whatap-otel\uC744 \uB300\uC0C1\uC73C\uB85C \uC124\uC815\uD569\uB2C8\uB2E4.\n  otlp:\n    endpoint: 127.0.0.1:6600\n    tls:\n      insecure: true\n\nservice:\n  pipelines:\n    traces:\n      receivers:\n      - otlp\n      processors:\n      - batch\n      exporters:\n      - logging\n      - otlp\n  telemetry:\n    logs:\n      level: debug #activate debug mode\n"})}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["End point (",(0,o.jsx)(n.code,{children:"endpoint"}),") setting: ",(0,o.jsx)(n.code,{children:"127.0.0.1:6600"})]}),"\n",(0,o.jsx)(n.p,{children:"The default port for local agents is 6600."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"tls.secure"})," setting: ",(0,o.jsx)(n.code,{children:"insecure: true"})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"The gzip compression settings are used by default. (gzip is used)"}),"\n"]}),"\n"]}),(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:"For more information about the OpenTelemetry Collector installation, see the following link."}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://opentelemetry.io/docs/collector/installation/",children:"Install the Collector"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://opentelemetry.io/docs/collector/custom-collector/",children:"Building a custom collector"})}),"\n"]}),"\n"]})]})]}),"\n",(0,o.jsx)(n.section,{className:"remark-sectionize-h2",children:(0,o.jsx)(n.h2,{id:"other-platforms",children:"Other platforms"})}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,o.jsx)(n.h3,{id:"tyk-gateway",children:"Tyk Gateway"}),(0,o.jsxs)(n.p,{children:["Enable the OpenTelemetry function of ",(0,o.jsx)(n.a,{href:"https://tyk.io/",children:"Tyk Gateway"})," and then check the transaction information through the OpenTelemetry Collecotr."]}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Connect the OpenTelemetry Collector to the Tyk Gateway."}),"\n"]}),(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",metastring:'title="tyk.conf"',children:'{\n  "log_level": "debug" ,\n  "listen_port": 8081,\n\n  ...\n\n  "opentelemetry": {\n      "enabled": true,\n      "endpoint": "111.222.333.444:4317",\n  }\n}\n'})}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"When the whatap-otel agent is connected to the OpenTelemetry Collector, trace data is collected."}),"\n"]})]}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,o.jsx)(n.h3,{id:"kong-gateway",children:"Kong Gateway"}),(0,o.jsx)(n.p,{children:"By configuring the built-in OpenTelemetry plugin in Kong Gateway, you can monitor transaction data through the OpenTelemetry Collector."}),(0,o.jsx)(n.p,{children:"Specify the OpenTelemetry Collector endpoint in the OpenTelemetry plugin. When the Whatap-otel agent connects to the Collector, trace data will be collected."}),(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"kong.conf"}),"\n",(0,o.jsx)(n.p,{children:"Enable trace settings."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-ini",children:"tracing_instrumentations = all\ntracing_sampling_rate = 1\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"OpenTelemetry Plugin Configuration"}),"\n",(0,o.jsx)(n.p,{children:"Register the endpoint URL of the OpenTelemetry Collector."}),"\n",(0,o.jsx)(n.p,{children:"The default OTLP receiver settings are as follows:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Protocol: http"}),"\n",(0,o.jsx)(n.li,{children:"Port: 4318"}),"\n",(0,o.jsxs)(n.li,{children:["URL:","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Trace:  /v1/traces","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"http://x.x.x.x:4318/v1/traces",children:"http://x.x.x.x:4318/v1/traces"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["Log: /v1/logs","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"http://x.x.x.x:4318/v1/logs",children:"http://x.x.x.x:4318/v1/logs"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Example default settings"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"traces_endpoint: http://otelcollector:4318/v1/traces\nlogs_endpoint: http://otelcollector:4318/v1/logs\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Example kong.yaml configuration"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"plugins:\n  - name: opentelemetry\n    config:\n      traces_endpoint: http://otelcollector:4318/v1/traces\n      logs_endpoint: http://otelcollector:4318/v1/logs\n      resource_attributes:\n        service.name: kong-otel\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Example plugin configuration via Admin API"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'curl -X POST http://localhost:8001/services/plugins \\\n--header "accept: application/json" \\\n--header "Content-Type: application/json" \\\n--data \'\n{\n    "name": "opentelemetry",\n    "config": {\n        "traces_endpoint": "http://otelcollector:4318/v1/traces",\n        "logs_endpoint": "http://otelcollector:4318/v1/logs",\n        "resource_attributes": {\n            "service.name": "kong-dev"\n        }\n    }\n}\n\'\n'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Supported version:"})," Kong Gateway 3.3.x or higher"]}),"\n"]}),(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:"For more detailed configuration instructions, refer to the following documentation."}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://docs.konghq.com/hub/kong-inc/opentelemetry/how-to/getting-started/",children:"Set up Kong Gateway"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://docs.konghq.com/hub/kong-inc/opentelemetry/configuration/",children:"OpenTelemetry Configuration"})}),"\n"]}),"\n"]})]})]}),"\n",(0,o.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,o.jsx)(n.h2,{id:"starting-the-monitoring",children:"Starting the monitoring"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["If the application server is restarted after all settings are made, the agent collects data. Go to the ",(0,o.jsx)(t,{sid:"dashboard",className:"uitext"})," > ",(0,o.jsx)(t,{sid:"application_dashboard",className:"uitext"})," menu and then perform monitoring for the collected data in real time."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["For more information about the agent configuration, see ",(0,o.jsx)(n.a,{href:"set-agent",children:"the following"}),"."]}),"\n"]}),"\n"]})]})]})}function d(e={}){let{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}function g(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},84429:function(e,n,t){t.d(n,{R:()=>r,x:()=>i});var l=t(96540);let o={},a=l.createContext(o);function r(e){let n=l.useContext(a);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);