"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["24523"],{85361:function(e,t,a){a.r(t),a.d(t,{metadata:()=>n,default:()=>u,frontMatter:()=>r,contentTitle:()=>i,toc:()=>d,assets:()=>c});var n=JSON.parse('{"id":"release-notes/otel/index","title":"Release Notes","description":"Latest Version: v0.2.7","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/release-notes/otel/index.mdx","sourceDirName":"release-notes/otel","slug":"/release-notes/otel/","permalink":"/whatap-docs/en/release-notes/otel/","draft":false,"unlisted":false,"editUrl":"undefined/docs/release-notes/otel/index.mdx","tags":[],"version":"current","frontMatter":{"id":"index","title":"Release Notes","hide_table_of_contents":true,"toc_min_heading_level":2,"isTranslationMissing":false},"sidebar":"pluginSidebar","previous":{"title":"Agent Configuration","permalink":"/whatap-docs/en/opentelemetry/set-agent"},"next":{"title":"Download Agent","permalink":"/whatap-docs/en/opentelemetry/download-agent"}}'),s=a(74848),o=a(84429);a(32661),a(62223);var l=JSON.parse('[{"ver":"v0.2.7","date":"2025-09-02","Lists":[{"ver":"v0.2.7","hash":"v027","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Added option to process Span data sequentially</p>","details":"<ul>\\n<li>When processing <code>scopespan</code> of Trace data, <code>Span.Kind = KIND_SERVER</code> is handled as a WhaTap transaction</li>\\n<li>Previous behavior: aggregated multiple <code>KIND_SERVER</code> spans in a single request and processed them at the end</li>\\n<li>With the option enabled, spans are processed sequentially</li>\\n<ul>\\n    <li>otel_tx_process_server_span_in_order_enabled</li>\\n    <li>Default: <code>false</code></li>\\n</ul>\\n</ul>"}]},{"url":"https://docs.whatap.io/release-notes/otel/otel-v0_2_6","ver":"v0.2.6","date":"2025-09-01","Lists":[{"ver":"v0.2.6","hash":"v026","product":"OTEL Agent","type":"Change","desc":"<p><code class=\\"Change\\" type=\\"1\\">Change</code> Improved Span data processing method</p>","details":"<ul>\\n<li>Collect span data in a parent\u2013child tree structure</li>\\n<li>Changed to process subsequent child spans even if an intermediate parent span is missing</li>\\n</ul>"},{"ver":"v0.2.6","hash":"v026","product":"OTEL Agent","type":"Change","desc":"<p><code class=\\"Change\\" type=\\"1\\">Change</code> Added attribute key names</p>","details":"<ul>\\n<li>\\n<p>Added the attribute key name <code>http.response.status_code</code> for collecting HTTP status codes</p>\\n<ul>\\n<li>otel_attr_tx_status_keys\x3c!-- --\x3e\\n<ul>\\n<li>Default: <code>http.status_code, http.response.status_code</code></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li>\\n<p>Added the attribute key name <code>error</code> for collecting error information</p>\\n<ul>\\n<li>otel_attr_error_keys\x3c!-- --\x3e\\n<ul>\\n<li>Default: <code>error, error.type</code></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n</ul>"}]},{"url":"https://docs.whatap.io/release-notes/otel/otel-v0_2_5","ver":"v0.2.5","date":"2025-07-09","Lists":[{"ver":"v0.2.5","hash":"v025","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"2\\">Feature</code> Treat spans without a parent as transactions</p>","details":"<ul>\\n<li>A span with no parent is treated as a transaction regardless of kind</li>\\n<li>Previously, only <code>SPAN_KIND_SERVER</code> was treated as a transaction</li>\\n<li>Related option: <code>otel_tx_root_span_enabled</code> (Default: true)</li>\\n</ul>"},{"ver":"v0.2.5","hash":"v025","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"2\\">Feature</code> Improved metrics collection method</p>","details":"<ul>\\n<li>Changed from log-based collection to a Prometheus-compatible approach</li>\\n<li>Viewable on Flex Board (MXQL data query)</li>\\n</ul>"},{"ver":"v0.2.5","hash":"v025","product":"OTEL Agent","type":"Change","desc":"<p><code class=\\"Change\\" type=\\"1\\">Change</code> Changed behavior of <code>query_string_enabled</code> option</p>","details":"<ul>\\n<li>If <code>query_string_enabled</code> is true and <code>query_string_urls</code> and <code>query_string_keys</code> are not set,<br>\\n\x3c!-- --\x3ecollect query strings for all URLs</li>\\n</ul>"},{"ver":"v0.2.5","hash":"v025","product":"OTEL Agent","type":"Fixed","desc":"<p><code class=\\"Fixed\\" type=\\"0\\">Fixed</code> Fixed an issue with HTTP status counter collection</p>","details":"<ul>\\n<li>Fixed an issue where the sum of 5xx errors was not collected</li>\\n</ul>"}]},{"url":"https://docs.whatap.io/release-notes/otel/otel-v0_2_4","ver":"v0.2.4","date":"2025-04-30","Lists":[{"ver":"v0.2.4","hash":"v024","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Mark HTTP status errors</p>","details":"<ul>\\n<li>\\n<p>Setting to mark as error when HTTP status code is 400 or higher</p>\\n<ul>\\n<li>Key: <strong>transaction_status_error_enable</strong></li>\\n<li>Type: <span class=\\"type\\">bool</span></li>\\n<li>Default: <code>false</code></li>\\n<li>Collection interval: 10 seconds</li>\\n</ul>\\n</li>\\n</ul>"},{"ver":"v0.2.4","hash":"v024","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Collect HTTP status code statistics</p>","details":"<ul>\\n<li>\\n<p>Setting to collect counts by status code across all URLs</p>\\n<ul>\\n<li>Key: <strong>tx_status_meter_enabled</strong></li>\\n<li>Type: <span class=\\"type\\">bool</span></li>\\n<li>Default: <code>true</code></li>\\n<li>Collection interval: 10 seconds</li>\\n</ul>\\n</li>\\n<li>\\n<p>Setting to collect counts by status code per URL</p>\\n<ul>\\n<li>Key: <strong>stat_txstatus_enabled</strong></li>\\n<li>Type: <span class=\\"type\\">bool</span></li>\\n<li>Default: <code>true</code></li>\\n<li>Collection interval: 5 minutes</li>\\n</ul>\\n</li>\\n</ul>"},{"ver":"v0.2.4","hash":"v024","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Analyze distributed traces by configuring virtual HTTP call spans</p>","details":"<ul>\\n<li>\\n<p>Enable virtual spans when HTTP call span information is missing</p>\\n<ul>\\n<li>Key: <strong>otel_virtual_httpc_enabled</strong></li>\\n<li>Type: <span class=\\"type\\">bool</span></li>\\n<li>Default: <code>false</code></li>\\n</ul>\\n</li>\\n<li>\\n<p>Set the name when HTTP call span information is missing</p>\\n<ul>\\n<li>Key: <strong>otel_virtual_httpc_name</strong></li>\\n<li>Type: <span class=\\"type\\">string</span></li>\\n<li>Default: <code>external http call</code></li>\\n</ul>\\n</li>\\n</ul>"},{"ver":"v0.2.4","hash":"v024","product":"OTEL Agent","type":"Fixed","desc":"<p><code class=\\"Fixed\\" type=\\"0\\">Fixed</code> Fixed an error in the HTTP Method ignore setting</p>","details":"<ul>\\n<li><code>PATCH</code>, <code>OPTIONS</code>, <code>HEAD</code>, and <code>TRACE</code> methods are not collected as transactions</li>\\n</ul>"}]},{"url":"https://docs.whatap.io/release-notes/otel/otel-v0_2_3","ver":"v0.2.3","date":"2025-02-25","Lists":[{"ver":"v0.2.3","hash":"v023","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Added an option to set the transaction name from the span <code>name</code> value</p>","details":"<ul>\\n<li><strong>otel_tx_path_setby_name_enabled</strong> <span class=\\"type\\">bool</span> (Default <code>false</code>)</li>\\n</ul>"},{"ver":"v0.2.3","hash":"v023","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Added options for multi-transaction linkage recognizing a trace span\u2019s <code>SpanID</code> as the external connection\u2019s <code>ParentSpanID</code></p>","details":"<ul>\\n<li><strong>otel_mtrace_stepid_setby_trace_spanid_enabled</strong> <span class=\\"type\\">bool</span> (Default <code>false</code>)</li>\\n</ul>"},{"ver":"v0.2.3","hash":"v023","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Added a log option to output the same content to <code>Stdout</code> as the file log</p>","details":"<ul>\\n<li><strong>log_stdout_enabled</strong> <span class=\\"type\\">bool</span> (Default <code>false</code>)</li>\\n</ul>"},{"ver":"v0.2.3","hash":"v023","product":"OTEL Agent","type":"Fixed","desc":"<p><code class=\\"Fixed\\" type=\\"0\\">Fixed</code> Fixed an issue where a \u201Cfile not found\u201D error log was repeatedly printed if <em>whatap.conf</em> did not exist</p>"},{"ver":"v0.2.3","hash":"v023","product":"OTEL Agent","type":"Fixed","desc":"<p><code class=\\"Fixed\\" type=\\"0\\">Fixed</code> Fixed an issue where the transaction ID was shown as <code>0</code></p>"}]},{"url":"https://docs.whatap.io/release-notes/otel/otel-v0_2_2","ver":"v0.2.2","date":"2024-12-11","Lists":[{"ver":"v0.2.2","hash":"v022","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Process transaction URL and URI information separately</p>","details":"<p>Items previously labeled as URL are now labeled as URI.</p>"},{"ver":"v0.2.2","hash":"v022","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Modified external HTTP call URL notation to \\"Host\x3c!-- --\x3e:Port\x3c!-- --\x3e\\"</p>"},{"ver":"v0.2.2","hash":"v022","product":"OTEL Agent","type":"Feature","desc":"<p><code class=\\"Feature\\" type=\\"1\\">Feature</code> Added default attribute keys for extracting Kong gateway information</p>"}]},{"url":"https://docs.whatap.io/release-notes/otel/otel-v0_2_1","ver":"v0.2.1","date":"2024-11-06","Lists":[{"ver":"v0.2.1","hash":"v021","product":"OTEL Agent","type":"Fixed","desc":"<p><code class=\\"Fixed\\">Fixed</code> Fixed an issue where a goroutine stopped due to an unexpected internal panic</p>"},{"ver":"v0.2.1","hash":"v021","product":"OTEL Agent","type":"Fixed","desc":"<p><code class=\\"Fixed\\">Fixed</code> Removed and cleaned up unnecessary logs</p>"}]},{"url":"https://docs.whatap.io/release-notes/otel/otel-v0_2_0","ver":"v0.2.0","date":"2024-06-19","Lists":[{"ver":"v0.2.0","hash":"v020","product":"OTEL Agent","type":"New","desc":"<p><code class=\\"New\\">New</code> Support for Linux aarch64</p>"},{"ver":"v0.2.0","hash":"v020","product":"OTEL Agent","type":"New","desc":"<p><code class=\\"New\\">New</code> Collect additional error information from span events</p>","details":"<ul>\\n<li>\\n<p>Collect when error information comes in as an <code>event</code> rather than an <code>attribute</code>.</p>\\n</li>\\n<li>\\n<p>Add agent configuration options to find errors in <code>event</code>.</p>\\n<div class=\\"language-ini codeBlockContainer_Ckt0 theme-code-block\\" style=\\"--prism-color:#bfc7d5;--prism-background-color:#292d3e\\"><div class=\\"codeBlockTitle_Ktv7\\">whatap.conf</div><div class=\\"codeBlockContent_biex\\"><pre tabindex=\\"0\\" class=\\"prism-code language-ini codeBlock_bY9V thin-scrollbar\\" style=\\"color:#bfc7d5;background-color:#292d3e\\"><code class=\\"codeBlockLines_e6Vv\\"><span class=\\"token-line\\" style=\\"color:#bfc7d5\\"><span class=\\"token key attr-name\\" style=\\"color:rgb(255, 203, 107)\\">otel_events_exception_keys</span><span class=\\"token punctuation\\" style=\\"color:rgb(199, 146, 234)\\">=</span><span class=\\"token value attr-value\\">exception.type</span><span class=\\"token plain\\"></span><br></span><span class=\\"token-line\\" style=\\"color:#bfc7d5\\"><span class=\\"token plain\\"></span><span class=\\"token key attr-name\\" style=\\"color:rgb(255, 203, 107)\\">otel_events_error_message_keys</span><span class=\\"token punctuation\\" style=\\"color:rgb(199, 146, 234)\\">=</span><span class=\\"token value attr-value\\">exception.message</span><span class=\\"token plain\\"></span><br></span><span class=\\"token-line\\" style=\\"color:#bfc7d5\\"><span class=\\"token plain\\"></span><span class=\\"token key attr-name\\" style=\\"color:rgb(255, 203, 107)\\">otel_events_error_stack_keys</span><span class=\\"token punctuation\\" style=\\"color:rgb(199, 146, 234)\\">=</span><span class=\\"token value attr-value\\">exception.stacktrace</span><span class=\\"token plain\\"></span><br></span><span class=\\"token-line\\" style=\\"color:#bfc7d5\\"><span class=\\"token plain\\"></span><span class=\\"token key attr-name\\" style=\\"color:rgb(255, 203, 107)\\">otel_events_error_esc_keys</span><span class=\\"token punctuation\\" style=\\"color:rgb(199, 146, 234)\\">=</span><span class=\\"token value attr-value\\">exception.escaped</span><br></span></code></pre><div class=\\"buttonGroup__atx\\"><button type=\\"button\\" aria-label=\\"\uD074\uB9BD\uBCF4\uB4DC\uC5D0 \uCF54\uB4DC \uBCF5\uC0AC\\" title=\\"\uBCF5\uC0AC\\" class=\\"clean-btn\\"><span class=\\"copyButtonIcons_eSgA\\" aria-hidden=\\"true\\"><svg viewbox=\\"0 0 24 24\\" class=\\"copyButtonIcon_y97N\\"><path fill=\\"currentColor\\" d=\\"M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z\\"></path></svg><svg viewbox=\\"0 0 24 24\\" class=\\"copyButtonSuccessIcon_LjdS\\"><path fill=\\"currentColor\\" d=\\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\\"></path></svg></span></button></div></div></div>\\n</li>\\n</ul>"},{"ver":"v0.2.0","hash":"v020","product":"OTEL Agent","type":"Changed","desc":"<p><code class=\\"Changed\\">Changed</code> Use <em>security.conf</em> instead of <em>paramkey.txt</em></p>","details":"<p>Use the value of the <code>paramkey</code> key in the existing <em>security.conf</em> file. Changed the default from a random value to <code>WHATAP</code>. When set to <code>WHATAP</code>, decryption can be done without entering a key.</p>"},{"ver":"v0.2.0","hash":"v020","product":"OTEL Agent","type":"Changed","desc":"<p><code class=\\"Changed\\">Changed</code> Changed SQL normalization option settings</p>","details":"<ul>\\n<li>\\n<p>Always enable parameter separation and normalization in SQL statements. Set <code>trace_sql_normalize_enabled</code> to <code>true</code> at all times.</p>\\n</li>\\n<li>\\n<p>If normalization was previously disabled, enable the setting to normalize and record parameters separately.</p>\\n<ul>\\n<li>Set <code>profile_sql_param_enabled</code> to <code>true</code>.</li>\\n<li>Collect normalized parameters with separate encryption.</li>\\n<li>You can decrypt and view data using <code>paramkey</code> in <em>security.conf</em>.</li>\\n</ul>\\n</li>\\n</ul>"}]}]');let r={id:"index",title:"Release Notes",hide_table_of_contents:!0,toc_min_heading_level:2,isTranslationMissing:!1},i,c={},d=[{value:"Latest Version: v0.2.7",id:"latest-version-v027",level:4}];function p(e){let t={h4:"h4",section:"section",...(0,o.R)(),...e.components},{Head:a,ImportJson:n}=t;return a||h("Head",!0),n||h("ImportJson",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a,{children:(0,s.jsx)("meta",{name:"robots",content:"noindex, nofollow"})}),"\n",(0,s.jsxs)(t.section,{className:"remark-sectionize-h4",children:[(0,s.jsx)(t.h4,{id:"latest-version-v027",children:"Latest Version: v0.2.7"}),(0,s.jsx)("br",{}),(0,s.jsx)(n,{filePath:l,sort:"date",category:"agent"})]})]})}function u(e={}){let{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}function h(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},62223:function(e,t,a){a.d(t,{A:()=>o}),a(96540);var n=a(39836),s=a(74848);function o({children:e,hidden:t,className:a}){return(0,s.jsx)("div",{role:"tabpanel",className:(0,n.A)("tabItem_Ymn6",a),hidden:t,children:e})}},32661:function(e,t,a){a.d(t,{A:()=>m});var n=a(96540),s=a(39836),o=a(65315),l=a(56347),r=a(14892),i=a(43316),c=a(92861),d=a(49022);function p(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){let{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u({value:e,tabValues:t}){return t.some(t=>t.value===e)}var h=a(45592),v=a(74848);function g({className:e,block:t,selectedValue:a,selectValue:n,tabValues:l}){let r=[],{blockElementScrollPositionUntilNextRender:i}=(0,o.a_)(),c=e=>{let t=e.currentTarget,s=l[r.indexOf(t)].value;s!==a&&(i(t),n(s))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{let a=r.indexOf(e.currentTarget)+1;t=r[a]??r[0];break}case"ArrowLeft":{let a=r.indexOf(e.currentTarget)-1;t=r[a]??r[r.length-1]}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},e),children:l.map(({value:e,label:t,attributes:n})=>(0,v.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{r.push(e)},onKeyDown:d,onClick:c,...n,className:(0,s.A)("tabs__item","tabItem_LNqP",n?.className,{"tabs__item--active":a===e}),children:t??e},e))})}function y({lazy:e,children:t,selectedValue:a}){let o=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){let e=o.find(e=>e.props.value===a);return e?(0,n.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:o.map((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==a}))})}function f(e){let t=function(e){let t,{defaultValue:a,queryString:s=!1,groupId:o}=e,h=function(e){let{values:t,children:a}=e;return(0,n.useMemo)(()=>{let e=t??p(a).map(({props:{value:e,label:t,attributes:a,default:n}})=>({value:e,label:t,attributes:a,default:n})),n=(0,c.XI)(e,(e,t)=>e.value===t.value);if(n.length>0)throw Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[t,a])}(e),[v,g]=(0,n.useState)(()=>(function({defaultValue:e,tabValues:t}){if(0===t.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!u({value:e,tabValues:t}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let a=t.find(e=>e.default)??t[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:a,tabValues:h})),[y,f]=function({queryString:e=!1,groupId:t}){let a=(0,l.W6)(),s=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,i.aZ)(s),(0,n.useCallback)(e=>{if(!s)return;let t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})},[s,a])]}({queryString:s,groupId:o}),[m,_]=function({groupId:e}){let t=e?`docusaurus.tab.${e}`:null,[a,s]=(0,d.Dv)(t);return[a,(0,n.useCallback)(e=>{t&&s.set(e)},[t,s])]}({groupId:o}),b=u({value:t=y??m,tabValues:h})?t:null;return(0,r.A)(()=>{b&&g(b)},[b]),{selectedValue:v,selectValue:(0,n.useCallback)(e=>{if(!u({value:e,tabValues:h}))throw Error(`Can't select invalid tab value=${e}`);g(e),f(e),_(e)},[f,_,h]),tabValues:h}}(e);return(0,v.jsxs)("div",{className:(0,s.A)("tabs-container","tabList__CuJ"),children:[(0,v.jsx)(g,{...t,...e}),(0,v.jsx)(y,{...t,...e})]})}function m(e){let t=(0,h.A)();return(0,v.jsx)(f,{...e,children:p(e.children)},String(t))}},84429:function(e,t,a){a.d(t,{R:()=>l,x:()=>r});var n=a(96540);let s={},o=n.createContext(s);function l(e){let t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);