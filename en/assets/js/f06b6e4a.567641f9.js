"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["95936"],{59018:function(e,n,t){t.d(n,{Ay:()=>o,RM:()=>r});var a=t(74848),s=t(84429);let r=[{value:"What is Transaction?",id:"what-is-transaction",level:2},{value:"Transaction name",id:"transaction-name",level:2},{value:"Normalizing the transaction name",id:"normalizing-the-transaction-name",level:2}];function i(e){let n={admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",section:"section",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,a.jsx)(n.h2,{id:"what-is-transaction",children:"What is Transaction?"}),(0,a.jsx)(n.p,{children:"Transaction means the logical unit of work (LUW) on the server side for processing a user browser request. The process for an individual web service (URL) request is a transaction. A transaction in a web application is the process from receiving an HTTP request for a web service (URL) to returning a response."}),(0,a.jsx)(n.p,{children:"The performance of the application can be summarized as the performance of these transactions. Transaction performance includes information such as transaction start-to-end time, response time, resource usage, or attributes of the transaction caller."}),(0,a.jsx)(n.p,{children:"Basically, the transaction performance can be analyzed through the response distribution and statistics."})]}),"\n",(0,a.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,a.jsx)(n.h2,{id:"transaction-name",children:"Transaction name"}),(0,a.jsx)(n.p,{children:"The transaction name is URL. However, the Get parameter (query string) is excluded."}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Browser Request"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"http://www.whatap.io/hr/apply.do?name='kim'\n"})}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Transaction Name"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"/hr/apply.do\n"})}),(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["In WhaTap, the ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.em,{children:"web service name"})})," and ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.em,{children:"transaction name"})})," are used interchangeably. It can be viewed as a module for handling service-specific URLs and requests to them. Because it means a process of a transaction request, the names of both can be called as URL."]})})]}),"\n",(0,a.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,a.jsx)(n.h2,{id:"normalizing-the-transaction-name",children:"Normalizing the transaction name"}),(0,a.jsx)(n.p,{children:"As the MSA-based systems evolve, instead of URL + ? argument parameter type, it is better to use the methods to put parameters in the URL path."}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"http://www.whatap.io/hr/kim/apply.do\n"})}),(0,a.jsx)(n.p,{children:"If the path parameter is used as the transaction name as it is, it is difficult to analyze the performance from a statistical point of view. You need to normalize this. WhaTap provides options and functions for normalization."}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"title='whtap.conf'",children:"trace_normalize_urls=/hr/{name}/apply.do\n"})}),(0,a.jsxs)(n.p,{children:["If set as the above, the transaction name is replaced for collection: ",(0,a.jsx)(n.em,{children:"/hr/kim/apply.do"})," \u2192 ",(0,a.jsxs)(n.em,{children:["/hello/",":name","/apply.do"]}),". To leave the target URL setting as it is and turn off only the function, specify the option as follows. he default value is ",(0,a.jsx)(n.code,{children:"true"}),"."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",metastring:"title='whatap.conf'",children:"trace_normalize_enabled=false\n"})})]})]})}function o(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(i,{...e})}):i(e)}},89004:function(e,n,t){t.r(n),t.d(n,{metadata:()=>a,default:()=>p,frontMatter:()=>o,contentTitle:()=>c,toc:()=>d,assets:()=>l});var a=JSON.parse('{"id":"golang/track-transactions-intro","title":"Transactions","description":"It guides you to the overview of transaction.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/golang/track-transactions-intro.mdx","sourceDirName":"golang","slug":"/golang/track-transactions-intro","permalink":"/whatap-docs/en/golang/track-transactions-intro","draft":false,"unlisted":false,"editUrl":"undefined/docs/golang/track-transactions-intro.mdx","tags":[],"version":"current","frontMatter":{"id":"track-transactions-intro","title":"Transactions","description":"It guides you to the overview of transaction.","keywords":["Go","Transactions"],"isTranslationMissing":false},"sidebar":"goSidebar","previous":{"title":"Metric Anomaly Detection","permalink":"/whatap-docs/en/golang/metrics-detect-anormal"},"next":{"title":"Analyzing the transactions","permalink":"/whatap-docs/en/golang/trs-view"}}'),s=t(74848),r=t(84429),i=t(59018);let o={id:"track-transactions-intro",title:"Transactions",description:"It guides you to the overview of transaction.",keywords:["Go","Transactions"],isTranslationMissing:!1},c,l={},d=[...i.RM];function h(e){return(0,s.jsx)(i.Ay,{})}function p(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},84429:function(e,n,t){t.d(n,{R:()=>i,x:()=>o});var a=t(96540);let s={},r=a.createContext(s);function i(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);