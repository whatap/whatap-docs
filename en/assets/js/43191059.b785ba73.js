"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["40076"],{94362:function(e,t,n){n.r(t),n.d(t,{metadata:()=>s,default:()=>h,frontMatter:()=>a,contentTitle:()=>c,toc:()=>d,assets:()=>o});var s=JSON.parse('{"id":"kubernetes/container-map-metrics","title":"Metrics","description":"You can check the resource usage of Kubernetes and make sure the usage is set appropriately.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/kubernetes/container-map-metrics.mdx","sourceDirName":"kubernetes","slug":"/kubernetes/container-map-metrics","permalink":"/whatap-docs/en/kubernetes/container-map-metrics","draft":false,"unlisted":false,"editUrl":"undefined/docs/kubernetes/container-map-metrics.mdx","tags":[],"version":"current","frontMatter":{"id":"container-map-metrics","title":"Metrics","description":"You can check the resource usage of Kubernetes and make sure the usage is set appropriately.","keywords":["Kubernetes","Kubernetes Monitoring","Metrics","Metrics"],"isTranslationMissing":false},"sidebar":"kubeSidebar","previous":{"title":"Trace","permalink":"/whatap-docs/en/kubernetes/container-map-trace"},"next":{"title":"Log","permalink":"/whatap-docs/en/kubernetes/container-map-log"}}'),r=n(74848),i=n(84429);let a={id:"container-map-metrics",title:"Metrics",description:"You can check the resource usage of Kubernetes and make sure the usage is set appropriately.",keywords:["Kubernetes","Kubernetes Monitoring","Metrics","Metrics"],isTranslationMissing:!1},c,o={},d=[{value:"Kubernetes metrics",id:"kubernetes-metrics",level:2},{value:"CPU and memory metrics",id:"cpu-and-memory-metrics",level:2},{value:"Other metrics",id:"other-metrics",level:2}];function l(e){let t={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",section:"section",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components},{Cmdname:s,ImgLang:a}=t;return s||u("Cmdname",!0),a||u("ImgLang",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["HomeProject > Select Project > ",(0,r.jsx)(s,{sid:"dashboard",className:"uitext"})," > ",(0,r.jsx)(s,{sid:"containerMap",className:"uitext"})," > select a target and go to ",(0,r.jsx)(s,{sid:"BTN07712",className:"uitext"})," > ",(0,r.jsx)(s,{sid:"metrics",className:"uitext"}),"."]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,r.jsx)(t.h2,{id:"kubernetes-metrics",children:"Kubernetes metrics"}),(0,r.jsx)(t.p,{children:"Kubernetes keeps an optimal state by continuously controlling and monitoring each container's resource usage. Accordingly, the process of checking resource usage and verifying the container resource usage setting based on that data is a basic pattern for Kubernetes monitoring."})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,r.jsx)(t.h2,{id:"cpu-and-memory-metrics",children:"CPU and memory metrics"}),(0,r.jsx)(t.p,{children:"Typical Kubernetes resource settings are the container's CPU request/limit and memory request/limit. The following is an example of configuration."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-text",metastring:"{10-15,19-24} showLineNumbers",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: <Pod\uBA85>\nspec:\n  containers:\n  - name: <Container 1 person>\n    image: <Container 1 image>\n    resources:\n      requests:\n        memory: "64Mi"\n        cpu: "100m"\n      limits:\n        memory: "128Mi"\n        cpu: "200m"\n  - name: <Container 2 persons>\n    image: <Container 2 images>\n    resources:\n      requests:\n        memory: "128Mi"\n        cpu: "250m"\n      limits:\n        memory: "256Mi"\n        cpu: "500m"\n'})}),(0,r.jsx)(t.p,{children:"With the above configuration, there are 2 containers in the pod. The resource settings for each container are as follows:"}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Target container"}),(0,r.jsx)(t.th,{children:"Resource type"}),(0,r.jsx)(t.th,{children:"Resource setting"}),(0,r.jsx)(t.th,{children:"Value"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{rowSpan:"4",children:"Container 1"}),(0,r.jsx)(t.td,{rowSpan:"2",children:"CPU"}),(0,r.jsx)(t.td,{children:"Request"}),(0,r.jsx)(t.td,{children:"100 m"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Limit"}),(0,r.jsx)(t.td,{children:"200 m"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{rowSpan:"2",children:"Memory"}),(0,r.jsx)(t.td,{children:"Request"}),(0,r.jsx)(t.td,{children:"64 Mi"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Limit"}),(0,r.jsx)(t.td,{children:"128 Mi"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{rowSpan:"4",children:"Container 2"}),(0,r.jsx)(t.td,{rowSpan:"2",children:"CPU"}),(0,r.jsx)(t.td,{children:"Request"}),(0,r.jsx)(t.td,{children:"250 m"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Limit"}),(0,r.jsx)(t.td,{children:"500 m"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{rowSpan:"2",children:"Memory"}),(0,r.jsx)(t.td,{children:"Request"}),(0,r.jsx)(t.td,{children:"128 Mi"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"Limit"}),(0,r.jsx)(t.td,{children:"256 Mi"})]})]})]}),(0,r.jsx)(t.p,{children:"It is not easy to understand the resource configuration data and the current usage of various containers. Therefore, the WhaTap Kubernetes monitoring service provides the function to easily check the resource settings and current usage for a single container, selected multiple containers, or the overall deployment."}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Detailed View"})," screen > ",(0,r.jsx)(s,{sid:"metrics",className:"uitext"})," - Resource usage monitoring and analysis"]}),"\n",(0,r.jsx)(a,{img:"whatap_kubernetes_container_map_resource_example.png",desc:"Resource usage monitoring and analysis"}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.p,{children:"You can select a specific container to check its status."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"Resource usage monitoring and analysis",src:n(31401).A+"",width:"1024",height:"851"})}),"\n"]}),"\n"]}),(0,r.jsx)(t.p,{children:"According to the above data, the CPU is set to Request 0.2 cores (200 m) and Limit 0.4 cores (400 m). The current CPU usage is 0.02 cores (20 m) (average for 5 seconds). If you check the CPU-related trend graph on the right, you can see that the CPU usage increases intermittently, although there is enough space."}),(0,r.jsx)(t.p,{children:"The memory is set to Request 128 MiB and Limit 256 MiB. By the way, the current memory usage is 184 MiB. According to the memory-related trend graph on the right, it exceeded 100% on a request basis and is using more than 70% on a limit basis."}),(0,r.jsx)(t.p,{children:"The main WhaTap metrics related to CPU and memory are as follows:"}),(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Target resource"}),(0,r.jsx)(t.th,{children:"Shortname"}),(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{rowSpan:"3",children:"CPU"}),(0,r.jsx)(t.td,{children:"CpuTotUsage"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("span",{class:"uitext",children:"Container CPU Usage (millicore)"})}),(0,r.jsx)(t.td,{children:"Container CPU utilization"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"CpuByRequest"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("span",{class:"uitext",children:"Container CPU Usage by Request (%)"})}),(0,r.jsx)(t.td,{children:"Container CPU utilization by request"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"CpuByLimit"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("span",{class:"uitext",children:"Container CPU Usage by Limit (%)"})}),(0,r.jsx)(t.td,{children:"Container CPU utilization by limit"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{rowSpan:"3",children:"Memory"}),(0,r.jsx)(t.td,{children:"MemWs"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("span",{class:"uitext",children:"Container Memory Working Set (byte)"})}),(0,r.jsx)(t.td,{children:"Container memory working set"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MemWsByRequest"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("span",{class:"uitext",children:"Container Memory Working Set by Request (%)"})}),(0,r.jsx)(t.td,{children:"Container memory working set usage by request"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MemWsByLimit"}),(0,r.jsx)(t.td,{children:(0,r.jsx)("span",{class:"uitext",children:"Container Memory Working Set by Limit (%)"})}),(0,r.jsx)(t.td,{children:"Container memory working set usage by quota"})]})]})]}),(0,r.jsxs)(t.admonition,{type:"note",children:[(0,r.jsxs)(t.p,{children:["If the node on which the pod is running has sufficient resources, it can use more resources than the request set in the container. Accordingly, among WhaTap metrics, the values for ",(0,r.jsx)("span",{class:"uitext",children:"Container CPU Usage by Request (%)"})," and ",(0,r.jsx)("span",{class:"uitext",children:"Container Memory Working Set by Request (%)"})," cannot exceed 100%."]}),(0,r.jsx)(t.p,{children:"For example, let's assume that the container's memory request has been set to 128 MiB. If the node of the active container (pod) has the total memory of 4 GiB and there has no pod on that node, this container can use more than 128 MiB of memory."})]})]}),"\n",(0,r.jsxs)(t.section,{className:"remark-sectionize-h2",children:[(0,r.jsx)(t.h2,{id:"other-metrics",children:"Other metrics"}),(0,r.jsx)(t.p,{children:"WhaTap provides various metrics other than CPU and memory."}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)("span",{class:"uitext",children:"Container Block I/O Read Byte"})," (IoReadBytes)"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)("span",{class:"uitext",children:"Container Block I/O Write Byte"})," (IoWriteBytes)"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)("span",{class:"uitext",children:"Container Network Receive Byte"})," (NetRxBytes)"]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)("span",{class:"uitext",children:"Container Network Transmit Byte"})," (NetTxByes)"]}),"\n"]}),"\n"]}),(0,r.jsxs)(t.p,{children:["For more information about the WhaTap Kubernetes metrics, see ",(0,r.jsx)(t.a,{href:"metrics-intro",children:"the following"}),"."]})]})]})}function h(e={}){let{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}function u(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},31401:function(e,t,n){n.d(t,{A:()=>s});let s=n.p+"assets/images/whatap_kubernetes_container_map_metrics_cpu_mem_example-54d989496b7d0ede11797132175fcc49.png"},84429:function(e,t,n){n.d(t,{R:()=>a,x:()=>c});var s=n(96540);let r={},i=s.createContext(r);function a(e){let t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);