"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["77933"],{85595:function(e,s,i){i.r(s),i.d(s,{metadata:()=>t,default:()=>h,frontMatter:()=>r,contentTitle:()=>l,toc:()=>o,assets:()=>c});var t=JSON.parse('{"id":"oracle-pro/top-wait-sql","title":"Top SQL by Wait","description":"Provides statistics on Top SQL by Wait.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/oracle-pro/top-wait-sql.mdx","sourceDirName":"oracle-pro","slug":"/oracle-pro/top-wait-sql","permalink":"/whatap-docs/en/oracle-pro/top-wait-sql","draft":false,"unlisted":false,"editUrl":"undefined/docs/oracle-pro/top-wait-sql.mdx","tags":[],"version":"current","frontMatter":{"id":"top-wait-sql","title":"Top SQL by Wait","description":"Provides statistics on Top SQL by Wait.","keywords":["Oracle Pro","Database","Statistics","Top SQL by Wait"],"isTranslationMissing":false},"sidebar":"dboracledmaSidebar","previous":{"title":"Top SQL","permalink":"/whatap-docs/en/oracle-pro/top-sql"},"next":{"title":"Log","permalink":"/whatap-docs/en/oracle-pro/log-main"}}'),n=i(74848),a=i(84429);let r={id:"top-wait-sql",title:"Top SQL by Wait",description:"Provides statistics on Top SQL by Wait.",keywords:["Oracle Pro","Database","Statistics","Top SQL by Wait"],isTranslationMissing:!1},l,c={},o=[{value:"Basic Screen Guide",id:"basic-screen-guide",level:2},{value:"Wait Class Chart",id:"wait-class-chart",level:2},{value:"Wait Event List",id:"wait-event-list",level:3},{value:"Wait / System Stat Trends",id:"wait--system-stat-trends",level:3},{value:"SQL List",id:"sql-list",level:3},{value:"View Query Details",id:"view-query-details",level:2},{value:"Trend Tab",id:"trend-tab",level:3},{value:"Elapsed Time",id:"elapsed-time",level:4},{value:"Elapsed Time Trend",id:"elapsed-time-trend",level:4},{value:"I/O Trend",id:"io-trend",level:4},{value:"Wait Time Trend",id:"wait-time-trend",level:4},{value:"Total Statistics",id:"total-statistics",level:4},{value:"Total Wait Classes",id:"total-wait-classes",level:4},{value:"Top Wait Events",id:"top-wait-events",level:4}];function d(e){let s={admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",section:"section",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Cmdname:i,ImgLang:t}=s;return i||u("Cmdname",!0),t||u("ImgLang",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.p,{children:["Home > Select Project > ",(0,n.jsx)(i,{sid:"side_statistics",className:"uitext"})," > ",(0,n.jsx)(s.strong,{children:"Top SQL by Wait"})]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Top SQL by Wait"})," focuses on quickly identifying SQL tuning priorities. You can visually confirm the Wait Class and Wait Event with the most wait time during a specific time period through charts and tables, and compare execution count and average time in the Top SQL table."]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h2",children:[(0,n.jsx)(s.h2,{id:"basic-screen-guide",children:"Basic Screen Guide"}),(0,n.jsx)(t,{img:"db-top-wait-sql.png",desc:"top wait sql"})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h2",children:[(0,n.jsx)(s.h2,{id:"wait-class-chart",children:"Wait Class Chart"}),(0,n.jsx)(s.p,{children:"Clicking a class in the chart or legend will apply it as a filter. Clicking again will remove the filter."}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"The Wait Class bar chart at the top visually displays the proportion of total wait time during the selected analysis period."}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsx)(s.p,{children:"The selected filters are shown as tags."}),"\n"]}),"\n"]})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h3",children:[(0,n.jsx)(s.h3,{id:"wait-event-list",children:"Wait Event List"}),(0,n.jsx)(s.p,{children:"If no class is selected, the most frequent events within the selected time range are displayed. When a Wait Class filter is applied, the event list for that class is shown."}),(0,n.jsxs)(s.p,{children:["When a ",(0,n.jsx)(s.strong,{children:"Wait Event"})," is selected from the list, it is added as a filter to the ",(0,n.jsx)(s.strong,{children:"SQL List"}),"."]})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h3",children:[(0,n.jsx)(s.h3,{id:"wait--system-stat-trends",children:"Wait / System Stat Trends"}),(0,n.jsx)(s.p,{children:"Visually displays the distribution of Wait Classes and session counts over time. You can identify spikes in wait events by time range. Analysis categories include: Wait(time), Wait(count), Latch, Enqueue, Stat, Cpu, Memory, Session Count."})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h3",children:[(0,n.jsx)(s.h3,{id:"sql-list",children:"SQL List"}),(0,n.jsx)(s.p,{children:"Key execution performance metrics are displayed for each SQL item, including Elapsed Time, CPU Time, Wait Time, Execute Count, and Logical Reads, enabling quick comparison and analysis."}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Default (no filters selected)"}),": Displays the top 50 queries by Elapsed Time."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"When a class is selected"}),": Displays the top 50 queries by Wait Time for the selected class."]}),"\n"]}),"\n"]})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h2",children:[(0,n.jsx)(s.h2,{id:"view-query-details",children:"View Query Details"}),(0,n.jsxs)(s.p,{children:["When you select the ",(0,n.jsx)(s.strong,{children:"query"})," column item in the retrieved result list, the ",(0,n.jsx)(s.strong,{children:"SQL Details"})," window appears.",(0,n.jsx)(s.br,{}),"\n","Click ",(0,n.jsx)(i,{sid:"BTN06225",className:"uitext"})," ",(0,n.jsx)(s.strong,{children:"\u2192"})," to move to the ",(0,n.jsx)(i,{sid:"statistics_sql",className:"uitext"})," menu, where you can check the statistical information related to the SQL query."]}),(0,n.jsx)(t,{img:"db-sql-details-oracle-pro.png",desc:"SQL Details"}),(0,n.jsxs)(s.p,{children:["The tabs of the ",(0,n.jsx)(s.strong,{children:"SQL Details"})," window are as follows:"]}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Trend"}),": Analyze execution time, I/O, and wait events of a specific SQL comprehensively to quickly identify performance bottlenecks."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Runtime Plan"}),": Provides execution plan and runtime information for the selected SQL query. Includes details such as execution count, average execution time, and average physical reads."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Explain Plan"}),": Shows the execution plan predicted by the optimizer, including cost, operations, object names, and cardinality."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Plan History"}),": Check the history of execution plans for SQL queries that have been run in the database."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Bind Capture"}),": Displays the bind variable values used in executed SQL queries in the database. This allows you to confirm the actual contents of the query execution."]}),"\n",(0,n.jsx)(s.admonition,{type:"note",children:(0,n.jsxs)(s.p,{children:["These are not real-time bind values, but values captured in the database (",(0,n.jsx)(s.code,{children:"v$sql_bind_capture"}),"). If there are many, up to 100 entries are displayed."]})}),"\n"]}),"\n"]})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h3",children:[(0,n.jsx)(s.h3,{id:"trend-tab",children:"Trend Tab"}),(0,n.jsxs)(s.p,{children:["The upper chart visualizes Elapsed Time, I/O, and Wait Time trends by time range.",(0,n.jsx)(s.br,{}),"\n","The lower statistics table shows accumulated execution statistics, Wait Class ratio, and major Wait Events at a glance."]})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h4",children:[(0,n.jsx)(s.h4,{id:"elapsed-time",children:"Elapsed Time"}),(0,n.jsxs)(s.p,{children:["Displays the sum of ",(0,n.jsx)(s.strong,{children:"CPU time, Wait Class time, and Idle time"})," during the selected period with the time selector."]}),(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"Example:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"CPU Time: Time actually spent using CPU for SQL execution"}),"\n",(0,n.jsx)(s.li,{children:"Scheduler: Time the session waited for CPU"}),"\n",(0,n.jsx)(s.li,{children:"Idle: Time not executed, waiting, or idle (intuitively confirms which factor consumed the most time)"}),"\n"]}),"\n"]})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h4",children:[(0,n.jsx)(s.h4,{id:"elapsed-time-trend",children:"Elapsed Time Trend"}),(0,n.jsxs)(s.p,{children:["Aggregates ",(0,n.jsx)(s.strong,{children:"average Elapsed Time"})," and execution count at 5-minute intervals and shows the trend.",(0,n.jsx)(s.br,{}),"\n","If the period is less than 3 hours, it aggregates by 1-minute intervals."]}),(0,n.jsx)(s.p,{children:"This helps quickly identify whether Elapsed Time spiked at a certain time or response time increased compared to execution counts, making it useful to pinpoint performance degradation timing."})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h4",children:[(0,n.jsx)(s.h4,{id:"io-trend",children:"I/O Trend"}),(0,n.jsxs)(s.p,{children:["Shows ",(0,n.jsx)(s.strong,{children:"Logical Reads"})," and ",(0,n.jsx)(s.strong,{children:"Physical Reads"})," during query execution in 5-minute intervals.",(0,n.jsx)(s.br,{}),"\n","If the period is less than 3 hours, it displays by 1-minute intervals."]}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Logical Reads: Number of reads from buffer cache"}),"\n",(0,n.jsx)(s.li,{children:"Physical Reads: Number of reads directly from disk. Useful for comparing cache efficiency and I/O load to identify bottlenecks"}),"\n"]})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h4",children:[(0,n.jsx)(s.h4,{id:"wait-time-trend",children:"Wait Time Trend"}),(0,n.jsxs)(s.p,{children:["Shows ",(0,n.jsx)(s.strong,{children:"Wait Event elapsed time"})," during query execution by time range."]}),(0,n.jsx)(s.p,{children:"If Wait Time spikes at a certain moment, it indicates DB resource contention or I/O latency. You can track which events (locks, I/O, parallel processing, etc.) caused the bottleneck."})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h4",children:[(0,n.jsx)(s.h4,{id:"total-statistics",children:"Total Statistics"}),(0,n.jsxs)(s.p,{children:["Displays ",(0,n.jsx)(s.strong,{children:"accumulated SQL execution statistics"})," for the selected range."]}),(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"Example:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"sorts(rows): Total number of sorted rows"}),"\n",(0,n.jsx)(s.li,{children:"session logical reads: Session logical read count"}),"\n",(0,n.jsx)(s.li,{children:"table scan blocks gotten: Number of blocks read during table scans"}),"\n",(0,n.jsxs)(s.li,{children:["elapsed_time: Total elapsed time",(0,n.jsx)(s.br,{}),"\n","Confirms aggregated data of how SQL execution used resources."]}),"\n"]}),"\n"]})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h4",children:[(0,n.jsx)(s.h4,{id:"total-wait-classes",children:"Total Wait Classes"}),(0,n.jsxs)(s.p,{children:["Shows the sum of ",(0,n.jsx)(s.strong,{children:"Wait Time"})," that occurred during SQL execution, grouped by Wait Class.",(0,n.jsx)(s.br,{}),"\n","The more time consumed by a specific Wait Class, the more likely that area is the bottleneck."]}),(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsx)(s.p,{children:"Example: Idle, Scheduler, User I/O, Concurrency"}),"\n"]})]}),"\n",(0,n.jsxs)(s.section,{className:"remark-sectionize-h4",children:[(0,n.jsx)(s.h4,{id:"top-wait-events",children:"Top Wait Events"}),(0,n.jsxs)(s.p,{children:["Displays the ",(0,n.jsx)(s.strong,{children:"top detailed Wait Events"})," during the selected range.",(0,n.jsx)(s.br,{}),"\n","Provides a more fine-grained view than Wait Classes to see which events most impacted performance."]}),(0,n.jsxs)(s.blockquote,{children:["\n",(0,n.jsxs)(s.p,{children:["Example: PX Deq: Execution Msg, resmgr",":cpu"," quantum, direct path read, etc."]}),"\n"]})]})]})}function h(e={}){let{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}function u(e,s){throw Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},84429:function(e,s,i){i.d(s,{R:()=>r,x:()=>l});var t=i(96540);let n={},a=t.createContext(n);function r(e){let s=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);