"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["30022"],{22722:function(e,n,t){t.r(n),t.d(n,{metadata:()=>a,default:()=>p,frontMatter:()=>i,contentTitle:()=>o,toc:()=>c,assets:()=>l});var a=JSON.parse('{"id":"telegraf/telegraf-usage","title":"Usage examples","description":"It guides you to use cases.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/telegraf/telegraf-usage.mdx","sourceDirName":"telegraf","slug":"/telegraf/telegraf-usage","permalink":"/whatap-docs/en/telegraf/telegraf-usage","draft":false,"unlisted":false,"editUrl":"undefined/docs/telegraf/telegraf-usage.mdx","tags":[],"version":"current","frontMatter":{"id":"telegraf-usage","title":"Usage examples","description":"It guides you to use cases.","keywords":["Telegraf","Usage examples"],"isTranslationMissing":false},"sidebar":"pluginSidebar","previous":{"title":"Management","permalink":"/whatap-docs/en/telegraf/manage"},"next":{"title":"Introduction to OpenTelemetry","permalink":"/whatap-docs/en/opentelemetry/introduction"}}'),s=t(74848),r=t(84429);let i={id:"telegraf-usage",title:"Usage examples",description:"It guides you to use cases.",keywords:["Telegraf","Usage examples"],isTranslationMissing:!1},o,l={},c=[{value:"SNMP",id:"snmp",level:2},{value:"SNMP Trap",id:"snmp-trap",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",section:"section",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["For more information about Telegraf, see the ",(0,s.jsx)(n.a,{href:"https://docs.influxdata.com/telegraf/v1.24/",children:"Telegraf documentation"})," for influxdata."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Telegraf plug-ins and agents must have been installed and configured directly on the service."})}),"\n",(0,s.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,s.jsx)(n.h2,{id:"snmp",children:"SNMP"}),(0,s.jsxs)(n.p,{children:["SNMP performance data can be collected and charted in real time using the SNMP input plug-in. The collected data can be retrieved by ",(0,s.jsx)(n.code,{children:"telegraf_snmp"})," and ",(0,s.jsx)(n.code,{children:"telegraf_interface"})," categories."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-batch",metastring:"title='Linux Shell'",children:'cat >/etc/telegraf/telegraf.d/snmp_device.conf <<EOL\n[[inputs.snmp]]\n  ## Agent addresses to retrieve values from.\n  ##   format:  agents = ["<scheme://><hostname>:<port>"]\n  ##   scheme:  optional, either udp, udp4, udp6, tcp, tcp4, tcp6.\n  ##            default is udp\n  ##   port:    optional\n  ##   example: agents = ["udp://127.0.0.1:161"]\n  ##            agents = ["tcp://127.0.0.1:161"]\n  ##            agents = ["udp4://v4only-snmp-agent"]\n\n  agents = ["udp://1.1.1.1:161"]\n\n  ## Timeout for each request.\n  # timeout = "5s"\n\n  ## SNMP version; can be 1, 2, or 3.\n   version = 2\n\n  ## SNMP community string.\n   community = "xxxx@xxxxx"\n\n  ## Agent host tag\n  # agent_host_tag = "agent_host"\n\n  ## Number of retries to attempt.\n  # retries = 3\n\n  ## The GETBULK max-repetitions parameter.\n  # max_repetitions = 10\n\n  ## SNMPv3 authentication and encryption options.\n  ##\n  ## Security Name.\n  # sec_name = "myuser"\n  ## Authentication protocol; one of "MD5", "SHA", "SHA224", "SHA256", "SHA384", "SHA512" or "".\n  # auth_protocol = "MD5"\n  ## Authentication password.\n  # auth_password = "pass"\n  ## Security Level; one of "noAuthNoPriv", "authNoPriv", or "authPriv".\n  # sec_level = "authNoPriv"\n  ## Context Name.\n  # context_name = ""\n  ## Privacy protocol used for encrypted messages; one of "DES", "AES", "AES192", "AES192C", "AES256", "AES256C", or "".\n  ### Protocols "AES192", "AES192", "AES256", and "AES256C" require the underlying net-snmp tools\n  ### to be compiled with --enable-blumenthal-aes (http://www.net-snmp.org/docs/INSTALL.html)\n  # priv_protocol = ""\n  ## Privacy password used for encrypted messages.\n  # priv_password = ""\n\n  ## Add fields and tables defining the variables you wish to collect.  This\n  ## example collects the system uptime and interface variables.  Reference the\n  ## full plugin documentation for configuration details.\n  [[inputs.snmp.field]]\n    oid = "RFC1213-MIB::sysUpTime.0"\n    name = "uptime"\n\n  [[inputs.snmp.field]]\n    oid = "RFC1213-MIB::sysName.0"\n    name = "source"\n    is_tag = true\n\n  [[inputs.snmp.table]]\n    oid = "IF-MIB::ifXTable"\n    name = "interface"\n    inherit_tags = ["source"]\n\n  [[inputs.snmp.table.field]]\n    oid = "IF-MIB::ifDescr"\n    name = "ifDescr"\n    is_tag = true\n\n  [[aggregators.derivative]]\n    period = "60s"\n    max_roll_over = 1\n\n    fieldpass = ["*Octets", "*Pkts"]\n    drop_original = false\n\n  [aggregators.derivative.tags]\n    aggr = "derivative"\n\n[[processors.starlark]]\n  source = \'\'\'\ndef apply(metric):\n    for (k, v) in metric.fields.items():\n        if k.endswith(\'Octets_rate\'):\n            metric.fields[k] *= 8\n\n    return metric\n\n\'\'\'\n\nEOL\nservice telegraf restart\n'})})]}),"\n",(0,s.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,s.jsx)(n.h2,{id:"snmp-trap",children:"SNMP Trap"}),(0,s.jsxs)(n.p,{children:["Using the SNMP Trap input plug-in, SNMP Trap events can be collected in real time and propagated via emails, text messages, and messengers. The collected data can be retrieved by the ",(0,s.jsx)(n.code,{children:"telegraf_snmp_trap"})," category."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-batch",metastring:"title='Linux Shell'",children:'cat >/etc/telegraf/telegraf.d/snmp_trap.conf <<EOL\n[[inputs.snmp_trap]]\n  service_address = "udp://:162"\nEOL\nservice telegraf restart\n'})})]})]})}function p(e={}){let{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},84429:function(e,n,t){t.d(n,{R:()=>i,x:()=>o});var a=t(96540);let s={},r=a.createContext(s);function i(e){let n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);