"use strict";(self.webpackChunkwhatap_docs=self.webpackChunkwhatap_docs||[]).push([["33567"],{92959:function(e,n,s){s.d(n,{Ay:()=>o,RM:()=>t});var r=s(74848),i=s(84429);let t=[{value:"User Counter",id:"user-counter",level:2},{value:"User types",id:"user-types",level:3},{value:"User counting",id:"user-counting",level:3},{value:"Service Counter",id:"service-counter",level:2},{value:"Resource Counter",id:"resource-counter",level:2},{value:"Apdex",id:"apdex",level:2}];function c(e){let n={admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",section:"section",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"The WhaTap agent collects various data related to the application performance. The data can be broadly classified into 3 categories:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"User"}),": Real-time user or visitor"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Service"}),": Transaction, SQL, outbound call count and response, error rate, etc."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Resource"}),": System and process resource usage"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,r.jsx)(n.h2,{id:"user-counter",children:"User Counter"}),(0,r.jsx)(n.p,{children:"User is a client using the monitoring system. In the client, users are counted based on the browser."}),(0,r.jsx)(n.p,{children:"In the web system performance, user is important because it is the start point that generates the load. For user tracing, it is required to consider what criteria users are classified with and how to count them."})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"user-types",children:"User types"}),(0,r.jsx)(n.p,{children:"The WhaTap agent provides various options to identify users."}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Remote IP"})}),"\n",(0,r.jsx)(n.p,{children:"Remote IP is used by default to identify the user. Remote IP has limitations when distinguishing actual users."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cookie"})}),"\n",(0,r.jsxs)(n.p,{children:["Users are identified using the cookie. UUID is saved in the cookie named ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.em,{children:"WHATAP"})})," for all connected clients."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",metastring:"title='whatap.conf'",children:"whatap.trace_user_using_ip=false\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Header Key"})}),"\n",(0,r.jsx)(n.p,{children:"Users can be identified using the value passed to the HTTP header."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",metastring:"title='whatap.conf'",children:"whatap.trace_user_header_ticket=USER\n"})}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h3",children:[(0,r.jsx)(n.h3,{id:"user-counting",children:"User counting"}),(0,r.jsx)(n.p,{children:"Depending on the counting method, it is used differently. Real-time users are measured to see how many users are using the system. Daily Active User is a measure for business management on how many users are interested in the service for a day."}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Real-time user"})}),"\n",(0,r.jsx)(n.p,{children:"The number of users is counted in the last 5 minutes. Users are counted by shifting every 5 seconds. The numbers counted on each server are merged through the HyperLogLog algorithm."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Daily Active User"})," (",(0,r.jsx)(n.strong,{children:"DAU"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"The users who accessed the system for a day are counted. The number of users logged in for 24 hours is calculated through HyperLogLog."}),"\n"]}),"\n"]}),(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:"WhaTap collects byte blocks for user data by the server to count long-term users. If the data is merged by HyperLogLog, the visitors for more than a month can be theoretically calculated."})})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,r.jsx)(n.h2,{id:"service-counter",children:"Service Counter"}),(0,r.jsx)(n.p,{children:"Performance metrics for transactions include the number of SQLs or outbound calls used by transactions, the number of response time errors, etc."}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Transaction Counter"})}),"\n",(0,r.jsx)(n.p,{children:"A counter starts measuring when any transaction is performed."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Count"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Response Time"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Error Count"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Active Transaction Counter"})}),"\n",(0,r.jsx)(n.p,{children:"It counts the number of transactions in progress."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Count"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Active Status"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Progress status is fixed into five: METHOD, SQL, HTTPC, DBC, SOCKET."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"METHOD - Calling a general function"}),"\n",(0,r.jsx)(n.li,{children:"SQL - Running DB SQL"}),"\n",(0,r.jsx)(n.li,{children:"HTTPC - Calling an HTTP outbound API (service)"}),"\n",(0,r.jsx)(n.li,{children:"DBC - DB connection is requrested; it is usually taken from the pool"}),"\n",(0,r.jsx)(n.li,{children:"SOCKET - Connecting the TCP session"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"SQL"})}),"\n",(0,r.jsx)(n.p,{children:"It counts the status of SQL running."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Count"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Response Time"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Error Count"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Patch Count"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"HTTP Call"})}),"\n",(0,r.jsx)(n.p,{children:"It counts outbound HTTP calls."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Count"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Response Time"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Error Count"})}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,r.jsx)(n.h2,{id:"resource-counter",children:"Resource Counter"}),(0,r.jsx)(n.p,{children:"It counts the server resources or resource uses inside the node processes."}),(0,r.jsx)(n.hr,{}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"CPU"})," (sys, usr, wait, steal, irq, cores)"]}),"\n",(0,r.jsx)(n.p,{children:"CPU usage %. The data is collected for each type. Steal is meaningful only in the virtual environment. The number of CPU cores is also collected."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Process CPU"})}),"\n",(0,r.jsx)(n.p,{children:"CPU % used by the process."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Memory"})}),"\n",(0,r.jsx)(n.p,{children:"System memory usage (%)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Swap"})}),"\n",(0,r.jsx)(n.p,{children:"Swap memory usage (%)."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Disk"})}),"\n",(0,r.jsx)(n.p,{children:"Disk is the process utilization (%) of the current directory"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Heap"})," (Total, Used, Perm)"]}),"\n",(0,r.jsx)(n.p,{children:"Total, Used, and Perm amounts of the heap memory. The data unit is KBytes."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"DB Connection Count"})}),"\n",(0,r.jsx)(n.p,{children:"It collects the connection pool counts."}),"\n"]}),"\n"]}),(0,r.jsx)(n.hr,{})]}),"\n",(0,r.jsxs)(n.section,{className:"remark-sectionize-h2",children:[(0,r.jsx)(n.h2,{id:"apdex",children:"Apdex"}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://img.whatap.io/media/agent_php/data/tinified/apdex.png",alt:""})}),(0,r.jsx)(n.p,{children:"Apdex (Appliccation Performance Index) is a performance metric that complies with the open standards. Apdex is based on the response time and is quantified as percentages of satisfied and accepted requests out of total requests. The Apdex graph has been added to the dashboard."}),(0,r.jsx)(n.p,{children:"Apdex can be used as a metric for user satisfaction and have a value between 0 and 1."}),(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"(Number of satisfied cases + (Number of tolerating cases * 0.5))/Total number of requests"}),"\n"]}),(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Status"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["Satisfied (",(0,r.jsx)(n.strong,{children:"S"}),")"]}),(0,r.jsxs)(n.td,{children:["No problem with the work \u2264 1.2 secs (",(0,r.jsx)(n.strong,{children:"S"})," as the default)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["Tolerating (",(0,r.jsx)(n.strong,{children:"T"}),")"]}),(0,r.jsxs)(n.td,{children:["Users feel delay but working is possible \u2264 4.8 secs (",(0,r.jsx)(n.strong,{children:"S"})," * 4)"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:["Frustrated (",(0,r.jsx)(n.strong,{children:"F"}),")"]}),(0,r.jsx)(n.td,{children:"Working is impossible > 4.8 secs (exceeds T and error)"})]})]})]}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"whatap.apdex_time"})," ",(0,r.jsx)("span",{class:"type",children:"millisecond"})]}),"\n",(0,r.jsxs)(n.p,{children:["Default ",(0,r.jsx)(n.code,{children:"1200"})]}),"\n",(0,r.jsxs)(n.p,{children:["The default value (",(0,r.jsx)(n.strong,{children:"S"}),") can be modified in Agent CONFIG."]}),"\n"]}),"\n"]})]})]})}function o(e={}){let{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},1299:function(e,n,s){s.r(n),s.d(n,{metadata:()=>r,default:()=>u,frontMatter:()=>o,contentTitle:()=>l,toc:()=>a,assets:()=>d});var r=JSON.parse('{"id":"dotnet/metrics-performance-counter","title":"Application performance counter","description":"It guides you to the performance counter.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/dotnet/metrics-performance-counter.mdx","sourceDirName":"dotnet","slug":"/dotnet/metrics-performance-counter","permalink":"/whatap-docs/en/dotnet/metrics-performance-counter","draft":false,"unlisted":false,"editUrl":"undefined/docs/dotnet/metrics-performance-counter.mdx","tags":[],"version":"current","frontMatter":{"id":"metrics-performance-counter","title":"Application performance counter","description":"It guides you to the performance counter.","keywords":[".NET","Metrics","Application","Performance counter","UI"],"isTranslationMissing":false},"sidebar":"dotNetSidebar","previous":{"title":"Application metrics","permalink":"/whatap-docs/en/dotnet/metrics-app"},"next":{"title":"Metrics Chart","permalink":"/whatap-docs/en/dotnet/metrics-chart-v2"}}'),i=s(74848),t=s(84429),c=s(92959);let o={id:"metrics-performance-counter",title:"Application performance counter",description:"It guides you to the performance counter.",keywords:[".NET","Metrics","Application","Performance counter","UI"],isTranslationMissing:!1},l,d={},a=[...c.RM];function h(e){return(0,i.jsx)(c.Ay,{})}function u(e={}){let{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},84429:function(e,n,s){s.d(n,{R:()=>c,x:()=>o});var r=s(96540);let i={},t=r.createContext(i);function c(e){let n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);